import { TimeAxisBase } from "./TimeAxisBase";
import { DependencyProperty } from "igniteui-react-core";
import { TimeAxisDisplayType } from "./TimeAxisDisplayType";
import { Type, IList$1 } from "igniteui-react-core";
import { AxisView } from "./AxisView";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
/**
 * @hidden
 */
export declare class CategoryDateTimeXAxis extends TimeAxisBase {
    static $t: Type;
    constructor();
    protected get_cd(): boolean;
    a4(): AxisView;
    hs(a: AxisView): void;
    nn: CategoryDateTimeXAxisView;
    nr: boolean;
    no: TimeAxisDisplayType;
    nz: number;
    private nu;
    get nw(): number;
    set nw(a: number);
    ev(): number;
    static readonly oc: DependencyProperty;
    get n0(): number;
    set n0(a: number);
    private nv;
    get nx(): number;
    set nx(a: number);
    c8(a: Rect, b: Rect, c: AxisView): boolean;
    d4(): number;
    protected h9(a: boolean): void;
    protected nt(): number;
    private ny;
    private n8;
    private n9;
    private nq;
    private np;
    private ns;
    n7(a: Date, b: Date): void;
    protected hw(a: any, b: string, c: any, d: any): void;
    nd(): void;
    protected nb(a: Date, b: Date): number;
    protected get_cc(): boolean;
    get isVertical(): boolean;
    j$d(a: number, b: ScalerParams): number;
    j$c(a: number, b: ScalerParams): number;
    j$e(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$g(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    get j$b(): boolean;
    j$a(): number[];
    get i$a(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CategoryDateTimeXAxisView extends CategoryAxisBaseView {
    static $t: Type;
    protected bm: CategoryDateTimeXAxis;
    constructor(a: CategoryDateTimeXAxis);
    al(): void;
    s(a: number): string;
}
