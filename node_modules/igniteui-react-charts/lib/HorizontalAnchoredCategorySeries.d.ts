import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { IHorizontalAnchoredCategorySeriesInteractionManager } from "./IHorizontalAnchoredCategorySeriesInteractionManager";
import { Type, Point } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { NumericYAxis } from "./NumericYAxis";
import { NumericAxisBase } from "./NumericAxisBase";
import { CategoryMode } from "./CategoryMode";
import { SeriesPlotAreaMarginHorizontalMode } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode } from "./SeriesPlotAreaMarginVerticalMode";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { FastItemsSourceEventAction } from "igniteui-react-core";
/**
 * @hidden
 */
export declare abstract class HorizontalAnchoredCategorySeries extends AnchoredCategorySeries {
    static $t: Type;
    private aaf;
    get aag(): IHorizontalAnchoredCategorySeriesInteractionManager;
    n4(): void;
    ca(): SeriesPlotAreaMarginHorizontalMode;
    cb(): SeriesPlotAreaMarginVerticalMode;
    xAxis: CategoryAxisBase;
    yAxis: NumericYAxis;
    protected bt(): SeriesHitTestMode;
    w1(): CategoryAxisBase;
    xh(): NumericAxisBase;
    u7(a: Point): Rect;
    private aat;
    protected aal(a: Point, b: Point, c: boolean): boolean;
    ah(a: Point): Point[][];
    ai(a: Point): Point[][];
    gf(a: Point, b: boolean): boolean;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    il(a: Point, b: boolean, c: boolean): number;
    jq(a: Point, b: boolean): number;
    jo(a: Point, b: boolean): number;
    h4(a: Point, b: number, c: Axis, d: ScalerParams, e: number): number;
    uu(a: Point, b: boolean, c: boolean): Point;
    fetchXAxis(): Axis;
    fetchYAxis(): Axis;
    zp(a: Axis): void;
    zq(a: Axis): void;
    xx(): boolean;
    protected aab: CategoryAxisBase;
    protected aah: NumericAxisBase;
    aap(a: CategoryAxisBase): void;
    aaq(a: NumericYAxis): void;
    wv(a: number, b: number): any[];
    protected p5(a: any, b: string, c: any, d: any): void;
    protected oc(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    aaj(a: any): boolean;
    aak(a: any): boolean;
    private aad;
    get aae(): CategoryMode;
    set aae(a: CategoryMode);
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
