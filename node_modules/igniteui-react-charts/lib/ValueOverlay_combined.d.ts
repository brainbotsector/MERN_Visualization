import { Series } from "./Series";
import { IHasCategoryModePreference } from "./IHasCategoryModePreference";
import { Axis } from "./Axis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { Type, Point } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { Rect } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { Geometry } from "igniteui-react-core";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CategoryMode } from "./CategoryMode";
import { RenderSurface } from "./RenderSurface";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ValueOverlay extends Series implements IHasCategoryModePreference {
    static $t: Type;
    protected bb(): Series;
    constructor();
    vd: Axis;
    vw: number;
    vu: number;
    vv: number;
    vr: number;
    il(a: Point, b: boolean, c: boolean): number;
    vs(a: Point, b: Point): number;
    uu(a: Point, b: boolean, c: boolean): Point;
    jj(a: Point): number;
    j2(a: Point): any;
    fx(a: any): boolean;
    aq(a: Axis): AxisRange;
    qn(a: boolean): void;
    vt(): number;
    we(a: number, b: ValueOverlayView): void;
    gw(a: Rect, b: Rect, c: SeriesView): boolean;
    protected rk(a: Rect, b: Rect): void;
    protected rj(a: Rect, b: Rect): void;
    protected oc(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    protected p5(a: any, b: string, c: any, d: any): void;
    o6(): void;
    n7(a: boolean, b: SeriesView): void;
    private vi;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    get categoryAxis(): CategoryAxisBase;
    protected ci(): SeriesView;
    px(a: SeriesView): void;
    private vg;
    qo(a: Rect, b: RenderSurface): void;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    vh: boolean;
    vf: (item: any) => string;
    ww: Brush;
    wu: Brush;
    vl: number;
    vx: number;
    wv: Brush;
    get wx(): Thickness;
    vn: number;
    vp: number;
    vo: number;
    vm: number;
    vq: number;
    ag(): Axis[];
    private ve;
    private vk;
    private vj;
    protected wf(a: number, b: boolean): void;
    protected get_isValueOverlay(): boolean;
    wa(a: number): string;
    get wc(): string;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ValueOverlayView extends SeriesView {
    static $t: Type;
    constructor(a: ValueOverlay);
    private b2;
    protected bd(): void;
    protected be(): void;
    b1(a: Geometry): void;
    b0(): void;
    protected a8(a: RenderingContext, b: boolean): void;
    an(a: any): void;
}
