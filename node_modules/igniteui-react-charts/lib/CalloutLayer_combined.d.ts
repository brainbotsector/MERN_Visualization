import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-react-core";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Base, Type, Point } from "igniteui-react-core";
import { Series } from "./Series";
import { CalloutPlacementPositionsCollection } from "./CalloutPlacementPositionsCollection";
import { LabelCollisionPlacementPositions } from "igniteui-react-core";
import { HighlightedValueLabelMode } from "igniteui-react-core";
import { AutoCalloutVisibilityMode } from "./AutoCalloutVisibilityMode";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode } from "./CalloutCollisionMode";
import { FontInfo } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { CalloutRenderStyleUpdatingEventArgs } from "./CalloutRenderStyleUpdatingEventArgs";
import { SeriesView } from "./SeriesView";
import { Frame } from "./Frame";
import { Size } from "igniteui-react-core";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { DataContext } from "igniteui-react-core";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { HashPool$2 } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { RenderingContext } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { Visibility } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class CalloutLayer extends AnnotationLayer {
    static $t: Type;
    protected bb(): Series;
    protected get_d9(): boolean;
    constructor();
    private abk;
    private abt;
    private abl;
    protected oc(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    fz(a: boolean): boolean;
    private zo;
    private aby;
    private abz;
    calloutStyleUpdating: (sender: any, args: CalloutStyleUpdatingEventArgs) => void;
    calloutRenderStyleUpdating: (sender: any, args: CalloutRenderStyleUpdatingEventArgs) => void;
    aa4: string;
    j5(a: any, b: string): any;
    li(a: string): string;
    get y2(): IFastItemColumn$1<any>;
    set y2(a: IFastItemColumn$1<any>);
    private yx;
    abf: string;
    get y3(): IFastItemColumn$1<any>;
    set y3(a: IFastItemColumn$1<any>);
    private yy;
    abi: string;
    get y4(): IFastItemColumn$1<any>;
    set y4(a: IFastItemColumn$1<any>);
    private yz;
    aa1: string;
    get y1(): IFastItemColumn$1<any>;
    set y1(a: IFastItemColumn$1<any>);
    private yw;
    zh: boolean;
    aat: string;
    get y0(): IFastItemColumn$1<any>;
    set y0(a: IFastItemColumn$1<any>);
    private yv;
    private zp;
    private zs;
    private abn;
    protected ci(): SeriesView;
    px(a: SeriesView): void;
    protected yl: CalloutLayerView;
    private zt;
    aa6: string;
    ys: Series;
    aaq: string;
    private ym;
    get yn(): CalloutPlacementPositionsCollection;
    set yn(a: CalloutPlacementPositionsCollection);
    yc: LabelCollisionPlacementPositions[];
    zg: boolean;
    zk: boolean;
    zl: boolean;
    zm: boolean;
    yr: HighlightedValueLabelMode;
    get yg(): AutoCalloutVisibilityMode;
    set yg(a: AutoCalloutVisibilityMode);
    get yf(): AutoCalloutVisibilityMode;
    set yf(a: AutoCalloutVisibilityMode);
    static readonly ace: DependencyProperty;
    zw: number;
    zj: boolean;
    zi: boolean;
    z5: number;
    acz: Brush;
    acw: Brush;
    z6: number;
    acy: Brush;
    acx: Brush;
    get ac3(): Thickness;
    zy: number;
    z0: number;
    zz: number;
    zx: number;
    yi: CalloutCollisionMode;
    z1: number;
    z2: number;
    aa9: string;
    private yt;
    get yu(): FontInfo;
    protected w4(a: Series, b: boolean): void;
    protected w6(a: Frame, b: SeriesView): void;
    private zq;
    private zn;
    private y5;
    private ac1;
    protected rk(a: Rect, b: Rect): void;
    protected rj(a: Rect, b: Rect): void;
    private zc;
    private z4;
    private ac0;
    get ac2(): Rect;
    set ac2(a: Rect);
    private za;
    private abu;
    private abp;
    private y6;
    private z7;
    private z8;
    private y7;
    private abm;
    private y8;
    private z3;
    private zu;
    private z9;
    protected vx(a: Series): boolean;
    pl(): void;
    private zb;
    abs(): void;
    calloutContentUpdating: (sender: any, args: CalloutContentUpdatingEventArgs) => void;
    calloutLabelUpdating: (sender: any, args: CalloutLabelUpdatingEventArgs) => void;
    calloutSeriesSelecting: (sender: any, args: CalloutSeriesSelectingEventArgs) => void;
    private zr;
    private abv;
    private ze;
    private zf;
    private zv;
    private zd;
    protected bt(): SeriesHitTestMode;
    au(a: Point, b: boolean): DataContext;
    gf(a: Point, b: boolean): boolean;
    protected abx(a: CalloutLayerFrame, b: boolean): void;
    protected w9(a: Frame, b: SeriesView): void;
    protected fu(): boolean;
    protected p5(a: any, b: string, c: any, d: any): void;
    private yh;
    private yd;
    private abw;
    private y9;
    private ye;
    private abq;
    private abo;
    private abr;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CalloutLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CalloutLayer);
    protected b7: CalloutLayer;
    private cc;
    au(): void;
    private b9;
    private cf;
    private ch;
    private cg;
    cb: HashPool$2<CalloutAnnotationWrapper, CalloutView>;
    cp(a: Brush): Brush;
    protected a8(a: RenderingContext, b: boolean): void;
    protected ca(): FontInfo;
    an(a: any): void;
    private cd;
    cr(a: TextBlock): Size;
    private ce;
    private b8;
    cq(a: any, b: Thickness): Size;
    cj(a: CalloutView, b: number, c: number): void;
    ck(a: CalloutView, b: CalloutAnnotationWrapper, c: any): void;
    cl(a: Series): Brush;
    co(): Brush;
    cn(a: Series): Brush;
    cm(a: Series): Brush;
    ci(): void;
}
/**
 * @hidden
 */
export declare class CalloutView extends Base {
    static $t: Type;
    constructor(a: CalloutLayerView);
    private a;
    y: Visibility;
    j(a: RenderingContext): void;
    private l;
    private t;
    private q;
    private s;
    get r(): Point;
    set r(a: Point);
    get p(): Brush;
    set p(a: Brush);
    get o(): Brush;
    set o(a: Brush);
    get n(): Brush;
    set n(a: Brush);
    get m(): Brush;
    set m(a: Brush);
    get e(): number;
    set e(a: number);
    private w;
    private v;
    get x(): Thickness;
    set x(a: Thickness);
    private c;
    get d(): number;
    set d(a: number);
    get h(): any;
    set h(a: any);
    f: number;
    g: number;
    u(): Size;
    private b;
    k(a: Series, b: CalloutAnnotationWrapper, c: any): void;
    i(a: CalloutLayer, b: FontInfo, c: any): void;
}
