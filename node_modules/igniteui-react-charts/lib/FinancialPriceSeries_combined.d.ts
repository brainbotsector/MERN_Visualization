import { FinancialSeries } from "./FinancialSeries";
import { ITrendLineSeries } from "./ITrendLineSeries";
import { TrendLineType } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { PriceDisplayType } from "./PriceDisplayType";
import { Series } from "./Series";
import { SeriesView } from "./SeriesView";
import { Type, Point } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { ITrendLineManager } from "./ITrendLineManager";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { Pool$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { SeriesPlotAreaMarginHorizontalMode } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode } from "./SeriesPlotAreaMarginVerticalMode";
import { GeometryGroup } from "igniteui-react-core";
import { LegendItemBadgeShape } from "igniteui-react-core";
import { ValueLayerValueMode } from "./ValueLayerValueMode";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class FinancialPriceSeries extends FinancialSeries implements ITrendLineSeries {
    static $t: Type;
    protected bb(): Series;
    protected get_eu(): boolean;
    protected i0(): number;
    protected ci(): SeriesView;
    px(a: SeriesView): void;
    zg: FinancialPriceSeriesView;
    constructor();
    trendLineType: TrendLineType;
    trendLineBrush: Brush;
    get aas(): Brush;
    set aas(a: Brush);
    static readonly aaa: DependencyProperty;
    trendLineThickness: number;
    aav: PenLineCap;
    aau: DoubleCollection;
    trendLinePeriod: number;
    zn: number;
    protected oc(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    zh: PriceDisplayType;
    protected bt(): SeriesHitTestMode;
    u5(a: Point): Rect;
    private zf;
    ak(a: Point): Rect[];
    gf(a: Point, b: boolean): boolean;
    protected gi(a: Point, b: boolean): boolean;
    protected p5(a: any, b: string, c: any, d: any): void;
    private z9;
    aq(a: Axis): AxisRange;
    ar(a: Rect): AxisRange;
    id(): number;
    fx(a: any): boolean;
    gw(a: Rect, b: Rect, c: SeriesView): boolean;
    yr(a: CategoryFrame, b: FinancialSeriesView): void;
    n7(a: boolean, b: SeriesView): void;
    protected rj(a: Rect, b: Rect): void;
    vb(a: SeriesPlotAreaMarginHorizontalMode, b: SeriesPlotAreaMarginVerticalMode): Thickness;
    protected get_d1(): boolean;
    yt(a: CategoryFrame, b: FinancialSeriesView): void;
    ib(): number;
    private z7;
    private zl;
    private z6;
    j9(a: any, b: Point): any;
    protected ra(): void;
    protected ow(a: any): void;
    aat: Brush;
    uf(): Brush;
    qw(a: Brush, b: Brush): void;
    protected a6(a: LegendItemBadgeShape): LegendItemBadgeShape;
    zx: string;
    zt: string;
    zo: string;
    z2: string;
    zz: string;
    zv: string;
    zq: string;
    z4: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    private zi;
    private zj;
    zk: number;
    private z8;
    am(a: ValueLayerValueMode): number[];
    ux(a: ValueLayerValueMode): Point;
    uy(a: number[]): Point;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class FinancialPriceSeriesView extends FinancialSeriesView {
    static $t: Type;
    protected b6: FinancialPriceSeries;
    constructor(a: FinancialPriceSeries);
    b9: Pool$1<Path>;
    cr(): Path;
    protected cc: List$1<Path>;
    ch(a: Path): void;
    cj(a: Path): void;
    ci(a: Path): void;
    protected b1(): FinancialBucketCalculator;
    au(): void;
    private cq;
    private cp;
    private b7;
    get b8(): ITrendLineManager;
    set b8(a: ITrendLineManager);
    get ca(): boolean;
    ck(): void;
    ce(): void;
    cd(): void;
    cn(): GeometryGroup;
    cm(): GeometryGroup;
    cl(): void;
    protected bd(): void;
    protected be(): void;
    protected ac(a: number): any;
    private co;
    protected ab(a: number): any;
    protected a8(a: RenderingContext, b: boolean): void;
    protected a7(a: RenderingContext, b: boolean): void;
    an(a: any): void;
    cf(): void;
    cb: boolean;
    cg(): void;
}
