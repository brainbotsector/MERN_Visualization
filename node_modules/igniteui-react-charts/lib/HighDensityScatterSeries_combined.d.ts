import { Series } from "./Series";
import { NumericXAxis } from "./NumericXAxis";
import { NumericYAxis } from "./NumericYAxis";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { Type, Point } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { Axis } from "./Axis";
import { SeriesView } from "./SeriesView";
import { ProgressiveLoadStatusEventArgs } from "./ProgressiveLoadStatusEventArgs";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { RenderSurface } from "./RenderSurface";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class HighDensityScatterSeries extends Series {
    static $t: Type;
    protected bb(): Series;
    protected get_e9(): boolean;
    protected i0(): number;
    constructor();
    protected get_fh(): boolean;
    vk: NumericXAxis;
    vm: NumericYAxis;
    xn: string;
    protected get vr(): IFastItemColumn$1<number>;
    protected set vr(a: IFastItemColumn$1<number>);
    private vq;
    xj: string;
    xr: string;
    xl: string;
    xt: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    j5(a: any, b: string): any;
    li(a: string): string;
    xv: string;
    protected get vt(): IFastItemColumn$1<number>;
    protected set vt(a: IFastItemColumn$1<number>);
    private vs;
    v0: boolean;
    vz: boolean;
    wv: number;
    wu: number;
    yt: Color;
    ys: Color;
    w7: number;
    private ya;
    protected p5(a: any, b: string, c: any, d: any): void;
    private x4;
    vy(a: any): boolean;
    vx(a: any): boolean;
    private x0;
    private w1;
    private vu;
    private wg;
    private wf;
    private we;
    private wd;
    private wc;
    private wb;
    private wa;
    private v9;
    private get wk();
    private get wj();
    private get wi();
    private get wh();
    private vi;
    private vn;
    private vo;
    private vj;
    private vl;
    private vw;
    gw(a: Rect, b: Rect, c: SeriesView): boolean;
    private w2;
    get w8(): number;
    set w8(a: number);
    qn(a: boolean): void;
    private x2;
    private w4;
    private wy;
    private wx;
    protected oc(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    private xz;
    private x5;
    private x3;
    progressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void;
    private xx;
    private x1;
    private v1;
    private yc;
    private v7;
    private v6;
    private v8;
    private wn;
    private wl;
    private wm;
    private wo;
    private wq;
    private ws;
    private wr;
    private wp;
    private v3;
    private v4;
    private v5;
    private v2;
    private x7;
    fx(a: any): boolean;
    private x9;
    private w5;
    private w6;
    private wt;
    private x8;
    private x6;
    private w0;
    private wz;
    private vf;
    private w3;
    private xy;
    protected ci(): SeriesView;
    px(a: SeriesView): void;
    protected vh: HighDensityScatterSeriesView;
    aq(a: Axis): AxisRange;
    private vv;
    protected rj(a: Rect, b: Rect): void;
    protected rk(a: Rect, b: Rect): void;
    private _itemIndexes;
    private vg;
    private vd;
    j2(a: Point): any;
    private w9;
    yb(a: number[], b: number, c: number): void;
    protected get_gq(): boolean;
    protected set_gq(a: boolean): void;
    n7(a: boolean, b: SeriesView): void;
    qo(a: Rect, b: RenderSurface): void;
    private vp;
    ql(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void;
    n4(): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class HighDensityScatterSeriesView extends SeriesView {
    static $t: Type;
    constructor(a: HighDensityScatterSeries);
    au(): void;
    cd(): void;
    protected b2: HighDensityScatterSeries;
    private b0;
    private b8;
    private b7;
    private b5;
    private b6;
    private b3;
    b9(): void;
    b1(): number[];
    cc(): void;
    cb(a: () => void): void;
    protected a8(a: RenderingContext, b: boolean): void;
    b4(a: Color, b: Color): boolean;
    ca(): void;
    an(a: any): void;
}
