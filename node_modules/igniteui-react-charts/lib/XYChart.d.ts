import { DomainChart } from "./DomainChart";
import { IEnumerable$1, Type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { HorizontalAlignment } from "igniteui-react-core";
import { VerticalAlignment } from "igniteui-react-core";
import { Visibility } from "igniteui-react-core";
import { YAxisLabelLocation } from "./YAxisLabelLocation";
import { XAxisLabelLocation } from "./XAxisLabelLocation";
import { Axis } from "./Axis";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { TitleSettings } from "./TitleSettings";
import { DataSeries } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { AxisLabelsLocation } from "./AxisLabelsLocation";
/**
 * @hidden
 */
export declare abstract class XYChart extends DomainChart {
    static $t: Type;
    provideContainer(a: any): void;
    protected ti(): void;
    protected t8(a: string, b: any, c: any): void;
    private xr;
    get xt(): (item: any) => string;
    set xt(a: (item: any) => string);
    private xs;
    get xu(): (item: any) => string;
    set xu(a: (item: any) => string);
    private x8;
    get za(): number;
    set za(a: number);
    private ya;
    get zc(): number;
    set zc(a: number);
    private x9;
    get zb(): number;
    set zb(a: number);
    private x7;
    get y9(): number;
    set y9(a: number);
    private yp;
    get zr(): number;
    set zr(a: number);
    private yr;
    get zt(): number;
    set zt(a: number);
    private yq;
    get zs(): number;
    set zs(a: number);
    private yo;
    get zq(): number;
    set zq(a: number);
    private adi;
    get ady(): Brush;
    set ady(a: Brush);
    private adp;
    get ad5(): Brush;
    set ad5(a: Brush);
    private adg;
    get adw(): Brush;
    set adw(a: Brush);
    private adh;
    get adx(): Brush;
    set adx(a: Brush);
    private yj;
    get zl(): number;
    set zl(a: number);
    private y0;
    get z2(): number;
    set z2(a: number);
    private yi;
    get zk(): number;
    set zk(a: number);
    private yz;
    get z1(): number;
    set z1(a: number);
    private yl;
    get zn(): number;
    set zn(a: number);
    private y2;
    get z4(): number;
    set z4(a: number);
    private yk;
    get zm(): number;
    set zm(a: number);
    private y1;
    get z3(): number;
    set z3(a: number);
    private yh;
    get zj(): number;
    set zj(a: number);
    private yy;
    get z0(): number;
    set z0(a: number);
    private ado;
    get ad4(): Brush;
    set ad4(a: Brush);
    private adv;
    get aeb(): Brush;
    set aeb(a: Brush);
    protected t9(a: string, b: any, c: any): void;
    private aaa;
    get aay(): string;
    set aay(a: string);
    private aae;
    get ab3(): string;
    set ab3(a: string);
    private aac;
    get abm(): string;
    set abm(a: string);
    private aag;
    get acr(): string;
    set acr(a: string);
    private acx;
    private acz;
    protected us(a: DataSeries): void;
    protected abstract xp(): Axis;
    protected abstract xq(): Axis;
    protected ac0(a: (arg1: Axis) => void): void;
    protected ac1(a: (arg1: Axis) => void, b: string): void;
    protected ac6(a: (arg1: Axis) => void, b: boolean): void;
    protected ac5(a: (arg1: Axis) => void): void;
    protected s2(a: (arg1: Axis) => void, b: boolean): void;
    protected ac4(a: (arg1: TitleSettings) => void): void;
    protected ac9(a: (arg1: TitleSettings) => void): void;
    protected ac7(a: (arg1: AxisLabelSettings) => void): void;
    protected ac2(a: (arg1: AxisLabelSettings) => void): void;
    y3(a: number): number;
    y5(a: number): number;
    y4(a: number): number;
    y6(a: number): number;
    protected up(a: XamDataChart): void;
    static aaj(a: CategoryAxisBase, b: IEnumerable$1<DataSeries>): string;
    protected td(a: XamDataChart): void;
    protected acw(a: Axis): void;
    protected acy(a: Axis): void;
    protected ta(): void;
    protected acu(a: Axis, b: (arg1: AxisLabelSettings) => void): void;
    protected acv(a: Axis, b: (arg1: TitleSettings) => void): void;
    protected t5(a: string, b: any, c: any): void;
    ac8(): void;
    ac3(): void;
    xw(a: YAxisLabelLocation): AxisLabelsLocation;
    xv(a: XAxisLabelLocation): AxisLabelsLocation;
    private z5;
    get z7(): any;
    set z7(a: any);
    private z6;
    get z8(): any;
    set z8(a: any);
    private adj;
    get adz(): Brush;
    set adz(a: Brush);
    private adq;
    get ad6(): Brush;
    set ad6(a: Brush);
    private yb;
    get zd(): number;
    set zd(a: number);
    private ys;
    get zu(): number;
    set zu(a: number);
    private yc;
    get ze(): number;
    set ze(a: number);
    private yt;
    get zv(): number;
    set zv(a: number);
    private adl;
    get ad1(): Brush;
    set ad1(a: Brush);
    private ads;
    get ad8(): Brush;
    set ad8(a: Brush);
    private adm;
    get ad2(): Brush;
    set ad2(a: Brush);
    private adt;
    get ad9(): Brush;
    set ad9(a: Brush);
    private yd;
    get zf(): number;
    set zf(a: number);
    private yu;
    get zw(): number;
    set zw(a: number);
    private ye;
    get zg(): number;
    set zg(a: number);
    private yv;
    get zx(): number;
    set zx(a: number);
    private adn;
    get ad3(): Brush;
    set ad3(a: Brush);
    private adu;
    get aea(): Brush;
    set aea(a: Brush);
    private yf;
    get zh(): number;
    set zh(a: number);
    private yw;
    get zy(): number;
    set zy(a: number);
    private aab;
    get abd(): string;
    set abd(a: string);
    private aaf;
    get aci(): string;
    set aci(a: string);
    private adk;
    get ad0(): Brush;
    set ad0(a: Brush);
    private adr;
    get ad7(): Brush;
    set ad7(a: Brush);
    private x6;
    get y8(): number;
    set y8(a: number);
    private yn;
    get zp(): number;
    set zp(a: number);
    private x5;
    get y7(): number;
    set y7(a: number);
    private ym;
    get zo(): number;
    set zo(a: number);
    private yg;
    get zi(): number;
    set zi(a: number);
    private yx;
    get zz(): number;
    set zz(a: number);
    private x1;
    get x3(): boolean;
    set x3(a: boolean);
    private x2;
    get x4(): boolean;
    set x4(a: boolean);
    private adb;
    get ade(): HorizontalAlignment;
    set ade(a: HorizontalAlignment);
    private aee;
    get aeh(): VerticalAlignment;
    set aeh(a: VerticalAlignment);
    private ada;
    get add(): HorizontalAlignment;
    set add(a: HorizontalAlignment);
    private adc;
    protected get_adf(): HorizontalAlignment;
    protected set_adf(a: HorizontalAlignment): void;
    get adf(): HorizontalAlignment;
    set adf(a: HorizontalAlignment);
    private aec;
    get aef(): VerticalAlignment;
    set aef(a: VerticalAlignment);
    private aed;
    get aeg(): VerticalAlignment;
    set aeg(a: VerticalAlignment);
    private aei;
    get aek(): Visibility;
    set aek(a: Visibility);
    private aej;
    get ael(): Visibility;
    set ael(a: Visibility);
    private xz;
    protected get_x0(): YAxisLabelLocation;
    protected set_x0(a: YAxisLabelLocation): void;
    get x0(): YAxisLabelLocation;
    set x0(a: YAxisLabelLocation);
    private xx;
    protected get_xy(): XAxisLabelLocation;
    protected set_xy(a: XAxisLabelLocation): void;
    get xy(): XAxisLabelLocation;
    set xy(a: XAxisLabelLocation);
    private z9;
    get aap(): string;
    set aap(a: string);
    private xl;
    get xn(): any[];
    set xn(a: any[]);
    private aad;
    get abu(): string;
    set abu(a: string);
    private xm;
    get xo(): any[];
    set xo(a: any[]);
}
