/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { EventArgs, Base, markType, typeCast, runOn, delegateCombine, enumGetBox, Point_$type, String_$type, Number_$type, fromEnum, toEnum, Date_$type, markDep, Delegate_$type } from "igniteui-react-core";
import { IBucketizer_$type } from "./IBucketizer";
import { ArgumentNullException } from "igniteui-react-core";
import { IFastItemColumn$1_$type } from "igniteui-react-core";
import { Series } from "./Series";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { ISortingAxis_$type } from "./ISortingAxis";
import { SeriesView } from "./SeriesView";
import { truncate, intDivide, isInfinity, isNaN_ } from "igniteui-react-core";
import { IHasCategoryAxis_$type } from "./IHasCategoryAxis";
import { IHasCategoryModePreference_$type } from "./IHasCategoryModePreference";
import { Brush } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { NumericYAxis } from "./NumericYAxis";
import { HighlightingInfo } from "igniteui-react-core";
import { CategoryTransitionInMode_$type } from "./CategoryTransitionInMode";
import { CategoryTransitionSourceFramePreparer } from "./CategoryTransitionSourceFramePreparer";
import { CategoryFrame } from "./CategoryFrame";
import { CategoryMode_$type } from "./CategoryMode";
import { ITimeRangeSelectorAxis_$type } from "./ITimeRangeSelectorAxis";
import { FastReflectionHelper } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { Dictionary$2 } from "igniteui-react-core";
import { CategorySeriesRenderManager } from "./CategorySeriesRenderManager";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { FinancialValueList } from "./FinancialValueList";
import { CategoryXAxis } from "./CategoryXAxis";
import { SafeSortedReadOnlyDoubleCollection } from "./SafeSortedReadOnlyDoubleCollection";
import { SafeReadOnlyDoubleCollection } from "./SafeReadOnlyDoubleCollection";
import { SafeEnumerable } from "./SafeEnumerable";
import { CalculatedColumn } from "./CalculatedColumn";
import { TrendCalculators } from "igniteui-react-core";
import { ColumnSupportingCalculation } from "./ColumnSupportingCalculation";
import { IDateTimeAxis_$type } from "./IDateTimeAxis";
import { PropertyMetadata } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { dateToStringFormat } from "igniteui-react-core";
import { SupportingCalculation$1 } from "./SupportingCalculation$1";
import { SRProvider } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
export let FinancialEventArgs = /*@__PURE__*/ (() => {
    class FinancialEventArgs extends EventArgs {
        constructor(a, b, c, d, e) {
            super();
            this._position = 0;
            this._count = 0;
            this._dataSource = null;
            this._supportingCalculations = null;
            this._basedOn = null;
            this.position = a;
            this.count = b;
            this.dataSource = c;
            this.supportingCalculations = d;
            if (c != null) {
                c.series = e;
            }
        }
        get position() {
            return this._position;
        }
        set position(a) {
            this._position = a;
        }
        get count() {
            return this._count;
        }
        set count(a) {
            this._count = a;
        }
        get dataSource() {
            return this._dataSource;
        }
        set dataSource(a) {
            this._dataSource = a;
        }
        get supportingCalculations() {
            return this._supportingCalculations;
        }
        set supportingCalculations(a) {
            this._supportingCalculations = a;
        }
        get basedOn() {
            return this._basedOn;
        }
        set basedOn(a) {
            this._basedOn = a;
        }
    }
    FinancialEventArgs.$t = /*@__PURE__*/ markType(FinancialEventArgs, 'FinancialEventArgs', EventArgs.$);
    return FinancialEventArgs;
})();
/**
 * @hidden
 */
export let FinancialBucketCalculator = /*@__PURE__*/ (() => {
    class FinancialBucketCalculator extends Base {
        constructor(a) {
            super();
            this.a = null;
            this.c = 0;
            this.d = 0;
            this.b = 0;
            if (a == null) {
                throw new ArgumentNullException(0, "view");
            }
            this.a = a;
            this.c = -1;
            this.d = this.d;
            this.b = 0;
        }
        getBucket(a) {
            return null;
        }
        getBucketWithoutUnknowns(a) {
            return this.getBucket(a);
        }
        getErrorBucket(a, b) {
            return NaN;
        }
        getBucketInfo(a, b, c, d) {
            a = this.c;
            b = this.d;
            c = this.b;
            d = this.a.b2.hu;
            return {
                p0: a,
                p1: b,
                p2: c,
                p3: d
            };
        }
        e(a) {
            let b = this.a.by;
            let c = this.a.bx;
            let d = this.a.bx;
            if (this.a.b2 != null) {
                d = this.a.b2.getEffectiveViewport1(this.a);
            }
            if (b.isEmpty || c.isEmpty || this.a.b2.vl == null) {
                this.b = 0;
                return;
            }
            let e = (this.a.b2.vl != null) ? this.a.b2.vl.ch : false;
            let f = new ScalerParams(0, b, c, e, d);
            let g = this.a.b2.u1(this.a);
            let h = typeCast(ISortingAxis_$type, this.a.b2.vl);
            if (h == null || h.i$b == null) {
                let i = Math.floor(this.a.b2.vl.em(g.left, f));
                let j = Math.ceil(this.a.b2.vl.em(g.right, f));
                if (this.a.b2.vl.ch) {
                    j = Math.ceil(this.a.b2.vl.em(g.left, f));
                    i = Math.floor(this.a.b2.vl.em(g.right, f));
                }
                let k = Math.floor((j - i + 1) * a / g.width);
                this.b = truncate(Math.max(1, k));
                this.c = truncate(Math.floor(i / this.b));
                this.d = truncate(Math.ceil(j / this.b));
            }
            else {
                this.c = h.i$e(b, c, d, g);
                this.d = h.i$g(b, c, d, g);
                this.b = 1;
            }
        }
        cacheValues() {
        }
        unCacheValues() {
        }
    }
    FinancialBucketCalculator.$t = /*@__PURE__*/ markType(FinancialBucketCalculator, 'FinancialBucketCalculator', Base.$, [IBucketizer_$type]);
    return FinancialBucketCalculator;
})();
/**
 * @hidden
 */
export let FinancialSeries = /*@__PURE__*/ (() => {
    class FinancialSeries extends Series {
        hb() {
            let a = super.hb();
            {
                let b = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.ad = "OpenMemberPath";
                    $ret.p = true;
                    $ret.y = "HighlightedOpenMemberPath";
                    $ret.q = true;
                    return $ret;
                })());
                b.valueResolving = delegateCombine(b.valueResolving, runOn(this, this.yo));
                a.add(b);
            }
            {
                let c = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.ad = "HighMemberPath";
                    $ret.p = true;
                    $ret.y = "HighlightedHighMemberPath";
                    $ret.q = true;
                    return $ret;
                })());
                c.valueResolving = delegateCombine(c.valueResolving, runOn(this, this.ym));
                a.add(c);
            }
            {
                let d = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.ad = "LowMemberPath";
                    $ret.p = true;
                    $ret.y = "HighlightedLowMemberPath";
                    $ret.q = true;
                    return $ret;
                })());
                d.valueResolving = delegateCombine(d.valueResolving, runOn(this, this.yn));
                a.add(d);
            }
            {
                let e = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.ad = "CloseMemberPath";
                    $ret.p = true;
                    $ret.y = "HighlightedCloseMemberPath";
                    $ret.q = true;
                    return $ret;
                })());
                e.valueResolving = delegateCombine(e.valueResolving, runOn(this, this.yl));
                a.add(e);
            }
            {
                let f = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.ad = "VolumeMemberPath";
                    $ret.p = true;
                    $ret.y = "HighlightedVolumeMemberPath";
                    $ret.q = true;
                    return $ret;
                })());
                f.valueResolving = delegateCombine(f.valueResolving, runOn(this, this.yp));
                a.add(f);
            }
            {
                let g = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.r = true;
                    $ret.ad = "Brush";
                    $ret.p = true;
                    $ret.y = "ActualBrush";
                    $ret.q = true;
                    return $ret;
                })());
                g.valueResolving = delegateCombine(g.valueResolving, runOn(this, this.qu));
                a.add(g);
            }
            {
                let h = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.r = true;
                    $ret.ad = "Outline";
                    $ret.p = true;
                    $ret.y = "ActualOutline";
                    $ret.q = true;
                    return $ret;
                })());
                h.valueResolving = delegateCombine(h.valueResolving, runOn(this, this.qu));
                a.add(h);
            }
            {
                let i = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.r = true;
                    $ret.ad = "NegativeBrush";
                    $ret.p = true;
                    $ret.q = true;
                    return $ret;
                })());
                i.valueResolving = delegateCombine(i.valueResolving, runOn(this, this.qu));
                a.add(i);
            }
            {
                let j = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.r = true;
                    $ret.ad = "NegativeOutline";
                    $ret.p = true;
                    $ret.q = true;
                    return $ret;
                })());
                j.valueResolving = delegateCombine(j.valueResolving, runOn(this, this.qu));
                a.add(j);
            }
            let k = ((() => {
                let $ret = new SeriesLayerPropertyOverlay();
                $ret.p = true;
                $ret.ad = "IsTransitionInEnabled";
                $ret.x = true;
                $ret.q = true;
                return $ret;
            })());
            a.add(k);
            let l = ((() => {
                let $ret = new SeriesLayerPropertyOverlay();
                $ret.p = true;
                $ret.ad = "TransitionInMode";
                $ret.x = enumGetBox(CategoryTransitionInMode_$type, 20);
                $ret.q = true;
                return $ret;
            })());
            a.add(l);
            return a;
        }
        yo(a, b) {
            if (this.xy != null) {
                b.value = this.xy;
                return;
            }
            b.value = this.yb;
        }
        ym(a, b) {
            if (this.xu != null) {
                b.value = this.xu;
                return;
            }
            b.value = this.x2;
        }
        yn(a, b) {
            if (this.xw != null) {
                b.value = this.xw;
                return;
            }
            b.value = this.x7;
        }
        yl(a, b) {
            if (this.xs != null) {
                b.value = this.xs;
                return;
            }
            b.value = this.xp;
        }
        yp(a, b) {
            if (this.x0 != null) {
                b.value = this.x0;
                return;
            }
            b.value = this.yf;
        }
        j7() {
            if (this.dr()) {
                return this.be.vr;
            }
            else {
                return this.be.vn;
            }
        }
        px(a) {
            super.px(a);
            this.v2 = a;
        }
        get_er() {
            return true;
        }
        ag() {
            return [this.vl, this.v4];
        }
        j5(a, b) {
            let c = this.mh(b);
            if (c == FinancialSeries.$$p[11]) {
                return this.j6(a, b, this.yb);
            }
            if (c == FinancialSeries.$$p[1]) {
                return this.j6(a, b, this.x2);
            }
            if (c == FinancialSeries.$$p[9]) {
                return this.j6(a, b, this.x7);
            }
            if (c == FinancialSeries.$$p[0]) {
                return this.j6(a, b, this.xp);
            }
            if (c == FinancialSeries.$$p[13]) {
                return this.j6(a, b, this.yf);
            }
            if (c == FinancialSeries.$$p[5]) {
                return this.j6(a, b, this.xy);
            }
            if (c == FinancialSeries.$$p[3]) {
                return this.j6(a, b, this.xu);
            }
            if (c == FinancialSeries.$$p[4]) {
                return this.j6(a, b, this.xw);
            }
            if (c == FinancialSeries.$$p[2]) {
                return this.j6(a, b, this.xs);
            }
            if (c == FinancialSeries.$$p[6]) {
                return this.j6(a, b, this.x0);
            }
            return super.j5(a, b);
        }
        li(a) {
            let b = this.mh(a);
            if (b == FinancialSeries.$$p[11]) {
                return this.yb;
            }
            if (b == FinancialSeries.$$p[1]) {
                return this.x2;
            }
            if (b == FinancialSeries.$$p[9]) {
                return this.x7;
            }
            if (b == FinancialSeries.$$p[0]) {
                return this.xp;
            }
            if (b == FinancialSeries.$$p[13]) {
                return this.yf;
            }
            if (b == FinancialSeries.$$p[5]) {
                return this.xy;
            }
            if (b == FinancialSeries.$$p[3]) {
                return this.xu;
            }
            if (b == FinancialSeries.$$p[4]) {
                return this.xw;
            }
            if (b == FinancialSeries.$$p[2]) {
                return this.xs;
            }
            if (b == FinancialSeries.$$p[6]) {
                return this.x0;
            }
            return super.li(a);
        }
        xl() {
            return 2;
        }
        xj() {
            return 4;
        }
        ah(a) {
            let b = this.aj(this.vl, this.vn.f, this.xi(this.cl), this.xk(this.cl), this.uz(a), true);
            if (b == null) {
                return null;
            }
            let c = b[0];
            let d = b[1];
            let e = new Array(1);
            let f = new Array(2);
            let g = this.xl();
            f[0] = { $type: Point_$type, x: c[0], y: c[g] };
            f[1] = { $type: Point_$type, x: d[0], y: d[g] };
            e[0] = f;
            return e;
        }
        ai(a) {
            let b = this.aj(this.vl, this.vn.f, this.xi(this.cl), this.xk(this.cl), this.uz(a), true);
            if (b == null) {
                return null;
            }
            let c = b[0];
            let d = b[1];
            let e = new Array(1);
            let f = new Array(2);
            f[0] = { $type: Point_$type, x: c[0], y: c[1] };
            f[1] = { $type: Point_$type, x: d[0], y: d[1] };
            e[0] = f;
            return e;
        }
        constructor() {
            super();
            this.wc = null;
            this.wa = null;
            this.wb = null;
            this.v9 = null;
            this.wd = null;
            this.wm = false;
            this.assigningCategoryStyle = null;
            this.vu = null;
            this.ww = new Dictionary$2(IFastItemColumn$1_$type.specialize(Number_$type), String_$type, 0);
            this.wx = new Dictionary$2(String_$type, String_$type, 0);
            this.wl = false;
            this.v8 = null;
            this.vp = null;
            this.vr = null;
            this.vn = null;
            this.vx = null;
            this.typical = null;
            this.typicalBasedOn = null;
            this.wk = false;
            this.w9 = null;
            this.w7 = null;
            this.w8 = null;
            this.w6 = null;
            this.xa = null;
            this.vq = null;
            this.vm = null;
            this.vs = 0;
            this.v3 = null;
            this.v5 = null;
            this.vu = new CategorySeriesRenderManager();
            this.wm = false;
            this.vx = new CategoryTransitionSourceFramePreparer();
            this.vq = new CategoryFrame(3);
            this.ab = FinancialSeries.$;
            this.vt = 0;
        }
        ue() {
            return this.zb;
        }
        uf() {
            return this.zb;
        }
        n4() {
            super.n4();
            this.vl = null;
            this.v4 = null;
        }
        get_d6() {
            return true;
        }
        get_fq() {
            return this.v4 != null && this.v4.ch;
        }
        get wh() {
            return this.wc;
        }
        set wh(a) {
            if (this.wc != a) {
                let b = this.wc;
                this.wc = a;
                this.raisePropertyChanged("OpenColumn", b, this.wc);
            }
        }
        get wf() {
            return this.wa;
        }
        set wf(a) {
            if (this.wa != a) {
                let b = this.wa;
                this.wa = a;
                this.raisePropertyChanged("HighColumn", b, this.wa);
            }
        }
        get wg() {
            return this.wb;
        }
        set wg(a) {
            if (this.wb != a) {
                let b = this.wb;
                this.wb = a;
                this.raisePropertyChanged("LowColumn", b, this.wb);
            }
        }
        get we() {
            return this.v9;
        }
        set we(a) {
            if (this.v9 != a) {
                let b = this.v9;
                this.v9 = a;
                this.raisePropertyChanged("CloseColumn", b, this.v9);
            }
        }
        get wj() {
            return this.wd;
        }
        set wj(a) {
            if (this.wd != a) {
                let b = this.wd;
                this.wd = a;
                this.raisePropertyChanged("VolumeColumn", b, this.wd);
            }
        }
        fv() {
            return this.highlightedItemsSource != null || (this.xy != null && this.xu != null && this.xw != null && this.xs != null);
        }
        wt() {
            return (this.assigningCategoryStyle != null && this.wm) || this.bo != 1 || this.cf != 1 || this.ce != 1;
        }
        ys(a) {
            if (this.assigningCategoryStyle != null && this.wm) {
                this.assigningCategoryStyle(this, a);
            }
        }
        yq(a, b, c, d, e, f, g) {
            let h = this.bo != 1;
            let i = this.cf != 1;
            let j = this.ce != 1;
            this.vu.a3(this.vu.b, d.cn, a, b, c, d, e, f, false, g);
            this.vu.ab(this.hs);
            let k = this.vu.ay;
            let l = null;
            let m = null;
            let n = null;
            let o = this.dd;
            if (h && this.c1 != null) {
                l = this.c1.dj.getHighlightingInfo(this, o, k.z, k.y, false);
                k.c = l;
            }
            if (i && this.c1 != null) {
                m = this.c1.dk.getHighlightingInfo(this, o, k.z, k.y, false);
                if (m == null && this.be != null) {
                    m = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, k.z, k.y, false);
                }
                k.d = m;
            }
            if (j && this.c1 != null) {
                n = this.c1.di.getHighlightingInfo(this, o, k.z, k.y, false);
                k.b = n;
            }
            k.h = f;
            this.ys(k);
            this.vu.z(this, l, m, n, f, h, i, j, b < 0);
        }
        xb(a) {
            return this.h8(a, this.vl);
        }
        jq(a, b) {
            return this.jr(a, b, this.vl, runOn(this, this.xb), new FinancialValueList(this.wh, this.wf, this.wg, this.we, this.wj));
        }
        jo(a, b) {
            return this.jp(a, b, this.vl, runOn(this, this.xb), new FinancialValueList(this.wh, this.wf, this.wg, this.we, this.wj));
        }
        h4(a, b, c, d, e) {
            if (c == null) {
                return Number.POSITIVE_INFINITY;
            }
            let f = this.vl.lf;
            return this.h5(a, b, this.vl, d, e, f, runOn(this, this.xb));
        }
        getOffsetValue() {
            return this.xc(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl));
        }
        getCategoryWidth() {
            return this.vl.getCategorySize(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl));
        }
        uu(a, b, c) {
            return this.uw(a, b, c, this.xc(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl)), this.v4, this.vl, null, null, null);
        }
        il(a, b, c) {
            let d = this.getEffectiveViewport1(this.cl);
            let e = this.xc(this.cl.by, this.cl.bx, d);
            let f = new ScalerParams(0, this.cl.by, this.cl.bx, this.vl.ch, d);
            return this.io(new FinancialValueList(this.wh, this.wf, this.wg, this.we, this.wj), a, this.vl, f, e, runOn(this, this.xb), b, c);
        }
        ih(a, b, c) {
            let d = this.getEffectiveViewport1(this.cl);
            let e = this.xc(this.cl.by, this.cl.bx, d);
            let f = new ScalerParams(0, this.cl.by, this.cl.bx, this.vl.ch, d);
            return this.io(this.wf, a, this.vl, f, e, runOn(this, this.xb), b, c);
        }
        ij(a, b, c) {
            let d = this.getEffectiveViewport1(this.cl);
            let e = this.xc(this.cl.by, this.cl.bx, d);
            let f = new ScalerParams(0, this.cl.by, this.cl.bx, this.vl.ch, d);
            return this.io(this.wg, a, this.vl, f, e, runOn(this, this.xb), b, c);
        }
        xd(a, b, c) {
            let d = this.getEffectiveViewport1(this.cl);
            let e = this.xc(this.cl.by, this.cl.bx, d);
            let f = new ScalerParams(0, this.cl.by, this.cl.bx, this.vl.ch, d);
            return this.io(this.we, a, this.vl, f, e, runOn(this, this.xb), b, c);
        }
        xe(a, b, c) {
            let d = this.getEffectiveViewport1(this.cl);
            let e = this.xc(this.cl.by, this.cl.bx, d);
            let f = new ScalerParams(0, this.cl.by, this.cl.bx, this.vl.ch, d);
            return this.io(this.wh, a, this.vl, f, e, runOn(this, this.xb), b, c);
        }
        xf(a, b, c) {
            let d = this.getEffectiveViewport1(this.cl);
            let e = this.xc(this.cl.by, this.cl.bx, d);
            let f = new ScalerParams(0, this.cl.by, this.cl.bx, this.vl.ch, d);
            return this.io(this.wj, a, this.vl, f, e, runOn(this, this.xb), b, c);
        }
        uq(a, b, c) {
            return this.uw(a, b, c, this.xc(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl)), this.v4, this.vl, runOn(this, this.ih), (d, e) => this.jr(d, e, this.vl, runOn(this, this.xb), this.wf), (d, e) => this.jp(d, e, this.vl, runOn(this, this.xb), this.wf));
        }
        us(a, b, c) {
            return this.uw(a, b, c, this.xc(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl)), this.v4, this.vl, runOn(this, this.ij), (d, e) => this.jr(d, e, this.vl, runOn(this, this.xb), this.wg), (d, e) => this.jp(d, e, this.vl, runOn(this, this.xb), this.wg));
        }
        zd(a, b, c) {
            return this.uw(a, b, c, this.xc(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl)), this.v4, this.vl, runOn(this, this.xe), (d, e) => this.jr(d, e, this.vl, runOn(this, this.xb), this.wh), (d, e) => this.jp(d, e, this.vl, runOn(this, this.xb), this.wh));
        }
        zc(a, b, c) {
            return this.uw(a, b, c, this.xc(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl)), this.v4, this.vl, runOn(this, this.xd), (d, e) => this.jr(d, e, this.vl, runOn(this, this.xb), this.we), (d, e) => this.jp(d, e, this.vl, runOn(this, this.xb), this.we));
        }
        ze(a, b, c) {
            return this.uw(a, b, c, this.xc(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl)), this.v4, this.vl, runOn(this, this.xf), (d, e) => this.jr(d, e, this.vl, runOn(this, this.xb), this.wj), (d, e) => this.jp(d, e, this.vl, runOn(this, this.xb), this.wj));
        }
        o6() {
            super.o6();
            if (this.vl != null) {
                this.vl.h8(false);
            }
            if (this.v4 != null) {
                this.v4.h8(false);
            }
        }
        rk(a, b) {
            this.v2.b0.e(this.hu);
            this.qm(false);
        }
        rj(a, b) {
            if (this.gk && this.i6 < 0.05) {
                this.gl = true;
                this.go = false;
                this.f4 = false;
            }
            this.v2.b0.e(this.hu);
            this.qm(false);
        }
        wi(a, b, c) {
            let d = this.da(b);
            this.ww.addItem(d, b);
            this.wx.addItem(b, c);
            return d;
        }
        yk(a, b) {
            if (b == null) {
                return;
            }
            a.deregisterColumn(b);
            let c = this.ww.item(b);
            this.wx.removeItem(c);
            this.ww.removeItem(b);
        }
        p5(a, b, c, d) {
            super.p5(a, b, c, d);
            switch (b) {
                case "SyncLink":
                    if (this.ct != null && this.c1 != null) {
                        this.v2.b0.e(this.hu);
                        this.qm(false);
                    }
                    break;
                case "SeriesViewer":
                    if (c != null && d == null) {
                        if (this.vl != null) {
                            this.vl.b0(this);
                        }
                        if (this.v4 != null) {
                            this.v4.b0(this);
                        }
                    }
                    if (c == null && d != null) {
                        if (this.vl != null) {
                            this.vl.ct(this);
                        }
                        if (this.v4 != null) {
                            this.v4.ct(this);
                        }
                    }
                    this.v2.b0.e(this.hu);
                    this.qm(false);
                    break;
                case "FastItemsSource":
                    this.wl = true;
                    if (typeCast(IFastItemsSource_$type, c) != null) {
                        this.yk(typeCast(IFastItemsSource_$type, c), this.wh);
                        this.yk(typeCast(IFastItemsSource_$type, c), this.wf);
                        this.yk(typeCast(IFastItemsSource_$type, c), this.wg);
                        this.yk(typeCast(IFastItemsSource_$type, c), this.we);
                        this.yk(typeCast(IFastItemsSource_$type, c), this.wj);
                        this.wh = null;
                        this.wf = null;
                        this.wg = null;
                        this.we = null;
                        this.wj = null;
                    }
                    if (typeCast(IFastItemsSource_$type, d) != null) {
                        if (stringIsNullOrEmpty(this.yb) == false) {
                            this.wh = this.wi(typeCast(IFastItemsSource_$type, d), this.yb, "OpenColumn");
                        }
                        if (stringIsNullOrEmpty(this.x2) == false) {
                            this.wf = this.wi(typeCast(IFastItemsSource_$type, d), this.x2, "HighColumn");
                        }
                        if (stringIsNullOrEmpty(this.x7) == false) {
                            this.wg = this.wi(typeCast(IFastItemsSource_$type, d), this.x7, "LowColumn");
                        }
                        if (stringIsNullOrEmpty(this.xp) == false) {
                            this.we = this.wi(typeCast(IFastItemsSource_$type, d), this.xp, "CloseColumn");
                        }
                        if (stringIsNullOrEmpty(this.yf) == false) {
                            this.wj = this.wi(typeCast(IFastItemsSource_$type, d), this.yf, "VolumeColumn");
                        }
                    }
                    this.wl = false;
                    if (this.v4 != null && !this.v4.c1()) {
                        this.v2.b0.e(this.hu);
                        this.qm(this.f0 && c != null);
                    }
                    break;
                case FinancialSeries.$$p[11]:
                    if (this.dd != null) {
                        this.yk(this.dd, this.wh);
                        this.wh = this.wi(this.dd, this.yb, "OpenColumn");
                    }
                    break;
                case "OpenColumn":
                    if (this.v4 != null && !this.v4.c1() && !this.wl) {
                        this.v2.b0.e(this.hu);
                        this.qm(this.f0 && this.dv);
                    }
                    break;
                case FinancialSeries.$$p[1]:
                    if (this.dd != null) {
                        this.yk(this.dd, this.wf);
                        this.wf = this.wi(this.dd, this.x2, "HighColumn");
                    }
                    break;
                case "HighColumn":
                    if (this.v4 != null && !this.v4.c1() && !this.wl) {
                        this.v2.b0.e(this.hu);
                        this.qm(this.f0 && this.dv);
                    }
                    break;
                case FinancialSeries.$$p[9]:
                    if (this.dd != null) {
                        this.yk(this.dd, this.wg);
                        this.wg = this.wi(this.dd, this.x7, "LowColumn");
                    }
                    break;
                case "LowColumn":
                    if (this.v4 != null && !this.v4.c1() && !this.wl) {
                        this.v2.b0.e(this.hu);
                        this.qm(this.f0 && this.dv);
                    }
                    break;
                case FinancialSeries.$$p[0]:
                    if (this.dd != null) {
                        this.yk(this.dd, this.we);
                        this.we = this.wi(this.dd, this.xp, "CloseColumn");
                    }
                    break;
                case "CloseColumn":
                    if (this.v4 != null && !this.v4.c1() && !this.wl) {
                        this.v2.b0.e(this.hu);
                        this.qm(this.f0 && this.dv);
                    }
                    this.yu();
                    break;
                case FinancialSeries.$$p[13]:
                    if (this.dd != null) {
                        this.yk(this.dd, this.wj);
                        this.wj = this.wi(this.dd, this.yf, "VolumeColumn");
                    }
                    break;
                case "VolumeColumn":
                    if (this.v4 != null && !this.v4.c1() && !this.wl) {
                        this.v2.b0.e(this.hu);
                        this.qm(this.f0 && this.dv);
                    }
                    break;
                case FinancialSeries.$$p[14]:
                    if (c != null) {
                        c.b0(this);
                    }
                    if (d != null) {
                        d.ct(this);
                    }
                    this.v2.b0.e(this.hu);
                    this.qm(false);
                    this.ph();
                    this.v3 = typeCast(ITimeRangeSelectorAxis_$type, this.vl);
                    break;
                case FinancialSeries.$$p[15]:
                    if (c != null) {
                        c.b0(this);
                    }
                    if (d != null) {
                        d.ct(this);
                    }
                    this.v2.b0.e(this.hu);
                    if (this.v4 != null) {
                        this.v4.c1();
                    }
                    {
                        this.qm(false);
                    }
                    this.ph();
                    break;
                case "TransitionProgress":
                    this.vr.c(this.i6, this.vp, this.vn);
                    if (this.dt(this.cl)) {
                        return;
                    }
                    if (this.i6 == 1) {
                        this.vn.w();
                        this.yt(this.vn, this.v2);
                        if (this.gk) {
                            this.gk = false;
                            this.n8();
                            this.c2.r = truncate(this.iq());
                            this.c2.b = this.c3;
                        }
                        if (this.gn) {
                            this.gn = false;
                            this.n8();
                            this.c2.r = truncate(this.iq());
                            this.c2.b = this.c3;
                            this.pw();
                        }
                        this.pk();
                    }
                    else {
                        this.yt(this.vr, this.v2);
                    }
                    if (this.c1 != null) {
                        this.c1.p6(this);
                    }
                    break;
                case FinancialSeries.$$p[10]:
                    this.qm(false);
                    break;
                case "IsCustomCategoryStyleAllowed":
                    this.wm = this.wp();
                    this.qm(false);
                    break;
                case "CategoryMode":
                    if (this.vl != null) {
                        this.vl.l5(true);
                    }
                    break;
            }
        }
        wo(a) {
            if (typeCast(NumericYAxis.$, a) !== null) {
                return true;
            }
            return false;
        }
        wn(a) {
            if (typeCast(CategoryXAxis.$, a) !== null || a.ce) {
                return true;
            }
            return false;
        }
        ve(a, b, c) {
            if (b < a || a < 0 || a > this.dd.count || b < 0 || b > this.dd.count || c == null) {
                return null;
            }
            let d = new Array((b - a) + 1);
            let e = c.cn;
            let f = null;
            if (e) {
                f = c.i$b;
            }
            for (let g = a; g <= b; g++) {
                let h = g;
                if (e) {
                    h = f._inner[h];
                }
                d[g - a] = this.dd.item(g);
            }
            return d;
        }
        xi(a) {
            return a.b0.b;
        }
        xk(a) {
            return a.b0.c;
        }
        vd(a, b) {
            return this.ve(a, b, this.v4);
        }
        get_ez() {
            return true;
        }
        n5() {
            super.n5();
            this.v8 = null;
        }
        c6(a, b, c) {
            if (this.d1 && this.fk(this.bo) && !c) {
                let d = this.v7(a, b, this.v8);
                this.v8 = d;
                return d;
            }
            else {
                let e = this.v6(a, b, this.v8);
                this.v8 = e;
                return e;
            }
        }
        xm(a) {
            let b = this.vo();
            let c = this.cl.bx;
            let d = this.cl.by;
            let e = this.vl;
            let f = 0;
            if (e.cp) {
                let g = (a.y - d.top) / d.height;
                f = g * c.height + c.top;
            }
            else {
                let h = (a.x - d.left) / d.width;
                f = h * c.width + c.left;
            }
            let i = b.f.count;
            let j = 0;
            for (j = 0; j < i; j++) {
                let k = b.f._inner[j];
                let l = null;
                if (j < i - 1) {
                    l = b.f._inner[j + 1];
                }
                if (k[0] <= f && l == null || l[0] >= f) {
                    if (l != null) {
                        if (Math.abs(k[0] - f) < Math.abs(l[0] - f)) {
                            return j;
                        }
                        else {
                            return j + 1;
                        }
                    }
                    else {
                        return j;
                    }
                }
            }
            return j;
        }
        v7(a, b, c) {
            let d = this.dd.count;
            let e = this.v2.b0.c;
            let f = this.v2.b0.d;
            let g = this.v2.b0.b;
            let h = this.vl;
            let i = -1;
            let j = -1;
            if (h.cn) {
                let k = this.vo();
                let l = this.xm(b);
                if (k.m != null && l >= 0 && l < k.m.count) {
                    l = truncate(Math.round(k.m._inner[l]));
                }
                i = l;
                j = l;
            }
            else {
                let m = this.jj(b);
                i = truncate(Math.floor((intDivide(m, g)))) * g;
                j = i + (g - 1);
            }
            if (c != null && c.g == i && c.f == j) {
                return c;
            }
            let n = new HighlightingInfo();
            n.i = this;
            n.g = i;
            n.f = j;
            return n;
        }
        v6(a, b, c) {
            let d = new HighlightingInfo();
            d.i = this;
            d.g = 0;
            d.f = this.dd.count - 1;
            d.c = true;
            if (c != null && c.g == d.g && c.f == d.f) {
                return c;
            }
            return d;
        }
        wp() {
            return this.wr;
        }
        h6(a) {
            let b = this.cl.by;
            let c = this.cl.bx;
            let d = -1;
            if (!b.isEmpty && !c.isEmpty && this.vl != null) {
                let e = this.getEffectiveViewport1(this.cl);
                let f = new ScalerParams(0, b, c, this.vl.ch, e);
                let g = this.u1(this.cl);
                let h = this.vl.em(g.left, f);
                let i = this.vl.em(g.right, f);
                let j = (a.x - b.left) / b.width;
                let k = h + (j * (i - h));
                if (this.vl.categoryMode != 0) {
                    k -= 0.5;
                }
                d = k;
            }
            return d;
        }
        jj(a) {
            return truncate(Math.round(this.h6(a)));
        }
        get_fd() {
            return typeCast(ISortingAxis_$type, this.vl) !== null;
        }
        as() {
            return this.vl;
        }
        jl(a) {
            let b = this.cl.by;
            let c = this.cl.bx;
            let d = this.getEffectiveViewport1(this.cl);
            if (b.isEmpty || c.isEmpty) {
                return -1;
            }
            let e = new Rect(0, 0, 0, 1, 1);
            let f = new ScalerParams(0, b, c, this.vl.ch, d);
            let g = typeCast(ISortingAxis_$type, this.vl);
            let h = this.u1(this.cl);
            let i = h.left;
            let j = h.right;
            let k = this.up(a).x;
            let l = this.vl.em(k, f);
            let m = this.vl.em(i, f);
            let n = this.vl.em(j, f);
            l = Math.max(m, Math.min(n, l));
            let o = g.i$f(l);
            return o;
        }
        j2(a) {
            let b = 0;
            if (typeCast(ISortingAxis_$type, this.vl) !== null) {
                b = this.jl(a);
                if (b == -1) {
                    return null;
                }
            }
            else {
                b = this.jj(a);
            }
            return b >= 0 && this.dd != null && b < this.dd.count ? this.dd.item(b) : null;
        }
        vo() {
            let a = this.vn;
            if (this.dr()) {
                if (this.c2.g) {
                    this.c2.t();
                }
                a = this.vr;
            }
            return a;
        }
        xc(a, b, c) {
            if (this.vl == null) {
                return 0;
            }
            return this.vl.k5(a, b, c, this.index);
        }
        f7() {
            return this.ws;
        }
        vv() {
            return 11;
        }
        cu() {
            return 3;
        }
        cx() {
            return 3;
        }
        yt(a, b) {
            this.pt();
            this.u0 = a.ab;
            b.aw();
        }
        yr(a, b) {
            a.v();
        }
        gw(a, b, c) {
            let d = super.gw(a, b, c);
            let e = c;
            if (this.dd == null || this.dd.count == 0 || !c.o() || b.isEmpty || a.isEmpty || this.vl == null || this.v4 == null || e.b0.b < 1 || this.vl.bi == null || this.v4.bi == null || this.v4.lx == this.v4.lw || this.vl.itemsSource == null || this.vl.lf < 1) {
                e.b0.b = 0;
                d = false;
            }
            return d;
        }
        getViewInfo(a, b) {
            b = this.cl.by;
            a = this.cl.bx;
            return {
                p0: a,
                p1: b
            };
        }
        xg(a) {
            let b = 0;
            let c = a.by;
            let d = a.bx;
            let e = this.getEffectiveViewport1(this.cl);
            if (!c.isEmpty && !d.isEmpty && this.v4 != null) {
                let f = new ScalerParams(0, c, d, this.v4.ch, e);
                f.b = this.id();
                b = this.v4.ej(this.v4.l7, f);
            }
            return b;
        }
        n8() {
            super.n8();
            this.vp.w();
            this.vn.w();
            this.vr.w();
        }
        qn(a) {
            super.qn(a);
            this.v2.b0.e(this.hu);
            if (this.dt(this.cl)) {
                return;
            }
            if (this.gb) {
                if (this.dr()) {
                    this.yt(this.vr, this.v2);
                }
                else {
                    this.yt(this.vn, this.v2);
                }
                return;
            }
            if (this.fz(a)) {
                let b = this.vp;
                if (this.dr()) {
                    if (this.c2.g) {
                        this.c2.t();
                    }
                    this.vp = this.vr;
                    this.vr = b;
                }
                else {
                    this.vp = this.vn;
                    this.vn = b;
                }
                this.yr(this.vn, this.v2);
                let c = false;
                if (this.gm) {
                    this.c2.w();
                    this.c2.r = truncate(this.ir());
                    this.c2.b = this.c4 != null ? this.c4 : this.c3;
                    if (this.gn) {
                        let d = this.vr;
                        this.vr = this.vp;
                        this.vp = d;
                        c = true;
                    }
                    this.vx.s(this, this.vp, this.vn, this.isVertical, this.vl, this.v4, this.vw, this.vv(), this.cv, this.cu(), () => this.xg(this.v2), this.v2.bx);
                    if (this.gn) {
                        let e = this.vr;
                        this.vr = this.vp;
                        this.vp = e;
                    }
                    this.gn = false;
                }
                if (this.gp) {
                    this.c2.w();
                    this.c2.r = truncate(this.is());
                    this.c2.b = this.c5 != null ? this.c5 : this.c3;
                    if (this.gk) {
                        let f = this.vr;
                        this.vr = this.vp;
                        this.vp = f;
                        c = true;
                    }
                    this.vx.s(this, this.vp, this.vn, this.isVertical, this.vl, this.v4, this.vw, this.vv(), this.cv, this.cu(), () => this.xg(this.v2), this.v2.bx);
                    let g = this.vn;
                    this.vn = this.vp;
                    this.vp = g;
                    if (this.gk) {
                        let h = this.vr;
                        this.vr = this.vp;
                        this.vp = h;
                    }
                    this.gk = false;
                }
                this.dx = false;
                if (!c) {
                    this.n3();
                }
                this.q0();
                if (this.gm) {
                    this.gl = false;
                    this.go = false;
                    this.f4 = false;
                    this.gk = true;
                }
                if (this.gp) {
                    this.go = false;
                    this.gn = true;
                }
            }
            else {
                this.yr(this.vn, this.v2);
                this.yt(this.vn, this.v2);
            }
        }
        f8() {
            return true;
        }
        wu(a) {
            for (let b of fromEnum(a)) {
                switch (b) {
                    case "HighColumn":
                        if (this.wf == null) {
                            return false;
                        }
                        break;
                    case "LowColumn":
                        if (this.wg == null) {
                            return false;
                        }
                        break;
                    case "OpenColumn":
                        if (this.wh == null) {
                            return false;
                        }
                        break;
                    case "CloseColumn":
                        if (this.we == null) {
                            return false;
                        }
                        break;
                    case "VolumeColumn":
                        if (this.wj == null) {
                            return false;
                        }
                        break;
                }
            }
            return true;
        }
        get wv() {
            return this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null;
        }
        wq() {
            return this.typical != null;
        }
        yj(a) {
            this.typical(this, a);
        }
        get w3() {
            return this.w0();
        }
        *_w0() {
            let a = false;
            if (this.wq()) {
                let b = this.vy(0, this.dd.count);
                this.yj(new FinancialEventArgs(0, this.dd.count, b, this.vz(b), this));
                if (b.typicalColumn != null) {
                    a = true;
                    for (let c of fromEnum(b.typicalColumn)) {
                        yield c;
                    }
                }
            }
            if (!a) {
                if (this.wv && this.vl.i$b != null) {
                    let d = this.dd.count;
                    let e = this.vl.i$b;
                    for (let f = 0; f < d; ++f) {
                        yield (this.wf.item(e.item(f)) + this.wg.item(e.item(f)) + this.we.item(e.item(f))) / 3;
                    }
                }
                else {
                    let g = this.dd.count;
                    for (let h = 0; h < g; ++h) {
                        yield (this.wf.item(h) + this.wg.item(h) + this.we.item(h)) / 3;
                    }
                }
            }
        }
        w0() {
            return toEnum(() => this._w0());
        }
        get w2() {
            return this.wz();
        }
        *_wz() {
            if (this.wv && this.vl.i$b != null) {
                let a = this.wf.count;
                let b = this.vl.i$b;
                if (a > 0) {
                    yield this.xh(this.wf.item(b.item(0)) - this.wg.item(b.item(0)));
                }
                for (let c = 1; c < a; ++c) {
                    yield Math.max(this.xh(this.wf.item(b.item(c)) - this.wg.item(b.item(c))), Math.max(this.xh(Math.abs(this.wf.item(b.item(c)) - this.we.item(b.item(c - 1)))), this.xh(Math.abs(this.wg.item(b.item(c)) - this.we.item(b.item(c - 1))))));
                }
            }
            else {
                let d = this.wf.count;
                if (d > 0) {
                    yield this.xh(this.wf.item(0) - this.wg.item(0));
                }
                for (let e = 1; e < d; ++e) {
                    yield Math.max(this.xh(this.wf.item(e) - this.wg.item(e)), Math.max(this.xh(Math.abs(this.wf.item(e) - this.we.item(e - 1))), this.xh(Math.abs(this.wg.item(e) - this.we.item(e - 1)))));
                }
            }
        }
        wz() {
            return toEnum(() => this._wz());
        }
        get w1() {
            return this.wy();
        }
        *_wy() {
            if (this.wv && this.vl.i$b != null) {
                let a = this.wg.count;
                let b = this.vl.i$b;
                if (a > 0) {
                    yield this.xh(this.wg.item(b.item(0)));
                }
                for (let c = 1; c < a; c++) {
                    yield Math.min(this.xh(this.wg.item(b.item(c))), this.xh(this.we.item(b.item(c - 1))));
                }
            }
            else {
                let d = this.wg.count;
                if (d > 0) {
                    yield this.xh(this.wg.item(0));
                }
                for (let e = 1; e < d; e++) {
                    yield Math.min(this.xh(this.wg.item(e)), this.xh(this.we.item(e - 1)));
                }
            }
        }
        wy() {
            return toEnum(() => this._wy());
        }
        w5(a) {
            if (a == null) {
                return null;
            }
            if (this.wv && this.vl.i$b != null) {
                return new SafeSortedReadOnlyDoubleCollection(0, a, this.vl.i$b);
            }
            return new SafeReadOnlyDoubleCollection(0, a);
        }
        w4() {
            let a = new List$1(String_$type, 0);
            a.add("HighColumn");
            a.add("LowColumn");
            a.add("CloseColumn");
            if (this.typicalBasedOn != null && this.dd != null && !this.wk) {
                this.wk = true;
                let b = this.vy(0, this.dd.count);
                this.wk = false;
                let c = new FinancialEventArgs(0, this.dd.count, b, this.vz(b), this);
                this.typicalBasedOn(this, c);
                if (c.basedOn != null && c.basedOn.count > 0) {
                    return c.basedOn;
                }
            }
            return a;
        }
        getOpenColumnAsArray() {
            if (this.wh == null) {
                return null;
            }
            if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
                if (this.w9 != null) {
                    return this.w9.asArray();
                }
                let a = new List$1(Number_$type, 2, this.wh.count);
                let b = this.vl.i$b;
                let c = this.wh.asArray();
                for (let d = 0; d < b.count; d++) {
                    a.add(c[b._inner[d]]);
                }
                this.w9 = a;
                return this.w9.asArray();
            }
            else {
                return this.wh.asArray();
            }
        }
        getHighColumnAsArray() {
            if (this.wf == null) {
                return null;
            }
            if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
                if (this.w7 != null) {
                    return this.w7.asArray();
                }
                let a = new List$1(Number_$type, 2, this.wf.count);
                let b = this.vl.i$b;
                let c = this.wf.asArray();
                for (let d = 0; d < b.count; d++) {
                    a.add(c[b._inner[d]]);
                }
                this.w7 = a;
                return this.w7.asArray();
            }
            else {
                return this.wf.asArray();
            }
        }
        getLowColumnAsArray() {
            if (this.wg == null) {
                return null;
            }
            if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
                if (this.w8 != null) {
                    return this.w8.asArray();
                }
                let a = new List$1(Number_$type, 2, this.wg.count);
                let b = this.vl.i$b;
                let c = this.wg.asArray();
                for (let d = 0; d < b.count; d++) {
                    a.add(c[b._inner[d]]);
                }
                this.w8 = a;
                return this.w8.asArray();
            }
            else {
                return this.wg.asArray();
            }
        }
        getCloseColumnAsArray() {
            if (this.we == null) {
                return null;
            }
            if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
                if (this.w6 != null) {
                    return this.w6.asArray();
                }
                let a = new List$1(Number_$type, 2, this.we.count);
                let b = this.vl.i$b;
                let c = this.we.asArray();
                for (let d = 0; d < b.count; d++) {
                    a.add(c[b._inner[d]]);
                }
                this.w6 = a;
                return this.w6.asArray();
            }
            else {
                return this.we.asArray();
            }
        }
        getVolumeColumnAsArray() {
            if (this.wj == null) {
                return null;
            }
            if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
                if (this.xa != null) {
                    return this.xa.asArray();
                }
                let a = new List$1(Number_$type, 2, this.wj.count);
                let b = this.vl.i$b;
                let c = this.wj.asArray();
                for (let d = 0; d < b.count; d++) {
                    a.add(c[b._inner[d]]);
                }
                this.xa = a;
                return this.xa.asArray();
            }
            else {
                return this.wj.asArray();
            }
        }
        oc(a, b, c, d) {
            super.oc(a, b, c, d);
            if (this.vl == null || !(typeCast(ISortingAxis_$type, this.vl) !== null)) {
                return;
            }
            let e = this.vl.i$b;
            switch (a) {
                case 1:
                    for (let f = b; f < c; f++) {
                        let g = e._inner[f];
                        if (this.w9 != null) {
                            this.w9.insert(f, this.wh.item(g));
                        }
                        if (this.w7 != null) {
                            this.w7.insert(f, this.wf.item(g));
                        }
                        if (this.w8 != null) {
                            this.w8.insert(f, this.wg.item(g));
                        }
                        if (this.w6 != null) {
                            this.w6.insert(f, this.we.item(g));
                        }
                        if (this.xa != null) {
                            this.xa.insert(f, this.wj.item(g));
                        }
                    }
                    break;
                case 0:
                    if (this.w9 != null) {
                        this.w9.v(b, c);
                    }
                    if (this.w7 != null) {
                        this.w7.v(b, c);
                    }
                    if (this.w8 != null) {
                        this.w8.v(b, c);
                    }
                    if (this.w6 != null) {
                        this.w6.v(b, c);
                    }
                    if (this.xa != null) {
                        this.xa.v(b, c);
                    }
                    break;
                case 4:
                    if (this.w9 != null) {
                        this.w9 = new List$1(Number_$type, 0);
                    }
                    if (this.w7 != null) {
                        this.w7 = new List$1(Number_$type, 0);
                    }
                    if (this.w8 != null) {
                        this.w8 = new List$1(Number_$type, 0);
                    }
                    if (this.w6 != null) {
                        this.w6 = new List$1(Number_$type, 0);
                    }
                    if (this.xa != null) {
                        this.xa = new List$1(Number_$type, 0);
                    }
                    break;
                case 3:
                case 2:
                    for (let h = b; h < c; h++) {
                        let i = e._inner[h];
                        if (this.w9 != null) {
                            this.w9._inner[h] = this.wh.item(i);
                        }
                        if (this.w7 != null) {
                            this.w7._inner[h] = this.wf.item(i);
                        }
                        if (this.w8 != null) {
                            this.w8._inner[h] = this.wg.item(i);
                        }
                        if (this.w6 != null) {
                            this.w6._inner[h] = this.we.item(i);
                        }
                        if (this.xa != null) {
                            this.xa._inner[h] = this.wj.item(i);
                        }
                    }
                    break;
            }
            this.yu();
            this.rg();
        }
        vy(a, b) {
            let c = this.w5(this.wh);
            let d = this.w5(this.we);
            let e = this.w5(this.wf);
            let f = this.w5(this.wg);
            let g = this.w5(this.wj);
            let h = ((() => {
                let $ret = new FinancialCalculationDataSource();
                $ret.typicalColumn = new CalculatedColumn(1, new SafeEnumerable(this.w3), this.w4());
                $ret.trueRange = new CalculatedColumn(1, new SafeEnumerable(this.w2), ((() => {
                    let $ret = new List$1(String_$type, 0);
                    $ret.add("HighColumn");
                    $ret.add("LowColumn");
                    $ret.add("CloseColumn");
                    return $ret;
                })()));
                $ret.trueLow = new CalculatedColumn(1, new SafeEnumerable(this.w1), ((() => {
                    let $ret = new List$1(String_$type, 0);
                    $ret.add("LowColumn");
                    $ret.add("CloseColumn");
                    return $ret;
                })()));
                $ret.openColumn = c;
                $ret.closeColumn = d;
                $ret.highColumn = e;
                $ret.lowColumn = f;
                $ret.volumeColumn = g;
                $ret.calculateFrom = a;
                $ret.calculateCount = b;
                $ret.minimumValue = NaN;
                $ret.maximumValue = NaN;
                $ret.count = this.dd != null ? this.dd.count : 0;
                return $ret;
            })());
            return h;
        }
        xh(a) {
            if (isInfinity(a) || isNaN_(a)) {
                return 0;
            }
            return a;
        }
        vz(a) {
            return ((() => {
                let $ret = new FinancialCalculationSupportingCalculations();
                $ret.a = new ColumnSupportingCalculation(1, TrendCalculators.b, new List$1(String_$type, 0));
                $ret.c = new ColumnSupportingCalculation(1, TrendCalculators.e, new List$1(String_$type, 0));
                $ret.d = new ColumnSupportingCalculation(1, TrendCalculators.f, new List$1(String_$type, 0));
                $ret.b = new ColumnSupportingCalculation(1, TrendCalculators.d, new List$1(String_$type, 0));
                $ret.h = new DataSourceSupportingCalculation(1, (b) => TrendCalculators.b(b.volumeColumn, b.shortPeriod), ((() => {
                    let $ret = new List$1(String_$type, 0);
                    $ret.add("VolumeColumn");
                    return $ret;
                })()));
                $ret.f = new DataSourceSupportingCalculation(1, (b) => TrendCalculators.b(b.volumeColumn, b.longPeriod), ((() => {
                    let $ret = new List$1(String_$type, 0);
                    $ret.add("VolumeColumn");
                    return $ret;
                })()));
                $ret.g = new DataSourceSupportingCalculation(1, (b) => TrendCalculators.b(b.typicalColumn, b.shortPeriod), a.typicalColumn.basedOn);
                $ret.e = new DataSourceSupportingCalculation(1, (b) => TrendCalculators.b(b.typicalColumn, b.longPeriod), a.typicalColumn.basedOn);
                $ret.k = Series.g8;
                $ret.j = Series.g7;
                $ret.i = runOn(this, this.xh);
                return $ret;
            })());
        }
        get categoryAxis() {
            return this.vl;
        }
        qo(a, b) {
            super.qo(a, b);
            if (!this.gj) {
                this.cl.a4(b);
                return;
            }
            let c = typeCast(FinancialSeriesView.$, this.ck);
            this.cl.a4(b);
            c.b0.e(this.hu);
            if (this.dt(this.ck)) {
                return;
            }
            if (!this.gc) {
                this.yr(this.vq, c);
            }
            this.gc = false;
            this.yt(this.vq, c);
            this.gj = false;
        }
        ql(a, b, c, d, e) {
            super.ql(a, b, c, d, e);
            let f = this.a2.a$i.item(d);
            let g = f;
            g.b0.e(this.hu);
            f.a3(c);
            if (this.dt(g)) {
                return;
            }
            if (this.vm == null) {
                this.vm = new CategoryFrame(3);
            }
            this.vm.v();
            this.yr(this.vm, g);
            this.yt(this.vm, g);
        }
        ao(a) {
            if (this.vl == a) {
                return this.v4;
            }
            if (this.v4 == a) {
                return this.vl;
            }
            return null;
        }
        preferredCategoryMode(a) {
            let b = typeCast(IDateTimeAxis_$type, this.vl);
            return b != null ? b.preferredCategoryMode(this) : this.vt;
        }
        get vt() {
            return this.vs;
        }
        set vt(a) {
            let b = this.vt;
            if (a != b) {
                this.vs = a;
                this.raisePropertyChanged("CategoryMode", enumGetBox(CategoryMode_$type, b), enumGetBox(CategoryMode_$type, this.vt));
            }
        }
        get_e7() {
            return true;
        }
        qw(a, b) {
            super.qw(a, b);
            this.zb = a;
        }
        yu() {
            this.h2 = this.we == null || this.we.count == 0 ? NaN : this.we.item(this.we.count - 1);
        }
        j4(a) {
            if (this.v3 != null && a != null) {
                if (this.v5 == null || this.v5.propertyName != this.v3.dateTimeMemberPath) {
                    this.v5 = new FastReflectionHelper(false, this.v3.dateTimeMemberPath);
                }
                let b = this.v5.getPropertyValue(a);
                if (typeCast(Date_$type, b) !== null) {
                    return dateToStringFormat(b, this.v3.itemLabelFormat());
                }
            }
            return super.j4(a);
        }
    }
    FinancialSeries.$t = /*@__PURE__*/ markType(FinancialSeries, 'FinancialSeries', Series.$, [IHasCategoryAxis_$type, IHasCategoryModePreference_$type]);
    FinancialSeries.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, FinancialSeries, 'raisePropertyChanged', ['CloseMemberPath:xp:yv', [2, null], 'HighMemberPath:x2:y1', [2, null], 'HighlightedCloseMemberPath:xs:yw', [2, null], 'HighlightedHighMemberPath:xu:yx', [2, null], 'HighlightedLowMemberPath:xw:yy', [2, null], 'HighlightedOpenMemberPath:xy:yz', [2, null], 'HighlightedVolumeMemberPath:x0:y0', [2, null], 'IsCustomCategoryStyleAllowed:wr:y2', [0, false], 'IsTransitionInEnabled:ws:y3', [0, false], 'LowMemberPath:x7:y4', [2, null], 'NegativeBrush:zb:y5', [Brush.$, null], 'OpenMemberPath:yb:y6', [2, null], 'TransitionInMode:vw:y7', [CategoryTransitionInMode_$type, /*@__PURE__*/ enumGetBox(CategoryTransitionInMode_$type, 0)], 'VolumeMemberPath:yf:y8', [2, null], 'XAxis:vl:y9', [CategoryAxisBase.$, null], 'YAxis:v4:za', [NumericYAxis.$, null]]);
    return FinancialSeries;
})();
/**
 * @hidden
 */
export let FinancialCalculationSupportingCalculations = /*@__PURE__*/ (() => {
    class FinancialCalculationSupportingCalculations extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
            this.c = null;
            this.d = null;
            this.b = null;
            this.h = null;
            this.f = null;
            this.g = null;
            this.e = null;
            this.k = null;
            this.j = null;
            this.i = null;
        }
    }
    FinancialCalculationSupportingCalculations.$t = /*@__PURE__*/ markType(FinancialCalculationSupportingCalculations, 'FinancialCalculationSupportingCalculations');
    return FinancialCalculationSupportingCalculations;
})();
/**
 * @hidden
 */
export let DataSourceSupportingCalculation = /*@__PURE__*/ (() => {
    class DataSourceSupportingCalculation extends SupportingCalculation$1 {
        constructor(a, ..._rest) {
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        let c = _rest[0];
                        super(Delegate_$type, 0, c);
                    }
                    break;
                case 1:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        super(Delegate_$type, 1, c, d);
                    }
                    break;
            }
        }
    }
    DataSourceSupportingCalculation.$t = /*@__PURE__*/ markType(DataSourceSupportingCalculation, 'DataSourceSupportingCalculation', /*@__PURE__*/ SupportingCalculation$1.$.specialize(Delegate_$type));
    return DataSourceSupportingCalculation;
})();
/**
 * @hidden
 */
export let FinancialCalculationDataSource = /*@__PURE__*/ (() => {
    class FinancialCalculationDataSource extends Base {
        constructor() {
            super(...arguments);
            this._openColumn = null;
            this._closeColumn = null;
            this._highColumn = null;
            this._lowColumn = null;
            this._volumeColumn = null;
            this._indicatorColumn = null;
            this._typicalColumn = null;
            this._trueRange = null;
            this._trueLow = null;
            this._period = 0;
            this._shortPeriod = 0;
            this._longPeriod = 0;
            this._count = 0;
            this._calculateFrom = 0;
            this._calculateCount = 0;
            this._multiplier = 0;
            this._minimumValue = 0;
            this._maximumValue = 0;
            this._specifiesRange = false;
            this._series = null;
        }
        get openColumn() {
            return this._openColumn;
        }
        set openColumn(a) {
            this._openColumn = a;
        }
        get closeColumn() {
            return this._closeColumn;
        }
        set closeColumn(a) {
            this._closeColumn = a;
        }
        get highColumn() {
            return this._highColumn;
        }
        set highColumn(a) {
            this._highColumn = a;
        }
        get lowColumn() {
            return this._lowColumn;
        }
        set lowColumn(a) {
            this._lowColumn = a;
        }
        get volumeColumn() {
            return this._volumeColumn;
        }
        set volumeColumn(a) {
            this._volumeColumn = a;
        }
        get indicatorColumn() {
            return this._indicatorColumn;
        }
        set indicatorColumn(a) {
            this._indicatorColumn = a;
        }
        get typicalColumn() {
            return this._typicalColumn;
        }
        set typicalColumn(a) {
            this._typicalColumn = a;
        }
        get trueRange() {
            return this._trueRange;
        }
        set trueRange(a) {
            this._trueRange = a;
        }
        get trueLow() {
            return this._trueLow;
        }
        set trueLow(a) {
            this._trueLow = a;
        }
        get period() {
            return this._period;
        }
        set period(a) {
            this._period = a;
        }
        get shortPeriod() {
            return this._shortPeriod;
        }
        set shortPeriod(a) {
            this._shortPeriod = a;
        }
        get longPeriod() {
            return this._longPeriod;
        }
        set longPeriod(a) {
            this._longPeriod = a;
        }
        get count() {
            return this._count;
        }
        set count(a) {
            this._count = a;
        }
        get calculateFrom() {
            return this._calculateFrom;
        }
        set calculateFrom(a) {
            this._calculateFrom = a;
        }
        get calculateCount() {
            return this._calculateCount;
        }
        set calculateCount(a) {
            this._calculateCount = a;
        }
        get multiplier() {
            return this._multiplier;
        }
        set multiplier(a) {
            this._multiplier = a;
        }
        get minimumValue() {
            return this._minimumValue;
        }
        set minimumValue(a) {
            this._minimumValue = a;
        }
        get maximumValue() {
            return this._maximumValue;
        }
        set maximumValue(a) {
            this._maximumValue = a;
        }
        get specifiesRange() {
            return this._specifiesRange;
        }
        set specifiesRange(a) {
            this._specifiesRange = a;
        }
        get series() {
            return this._series;
        }
        set series(a) {
            this._series = a;
        }
    }
    FinancialCalculationDataSource.$t = /*@__PURE__*/ markType(FinancialCalculationDataSource, 'FinancialCalculationDataSource');
    return FinancialCalculationDataSource;
})();
/**
 * @hidden
 */
export let FinancialSeriesView = /*@__PURE__*/ (() => {
    class FinancialSeriesView extends SeriesView {
        b3(a) {
            if (this.b4 != a.u) {
                return true;
            }
            return false;
        }
        b5(a) {
            this.b4 = a.u;
        }
        constructor(a) {
            super(a);
            this.b2 = null;
            this.b0 = null;
            this.b4 = 0;
            this.b4 = -1;
            this.b2 = a;
            this.b0 = this.b1();
        }
        au() {
            super.au();
            if (!this.q) {
            }
        }
        getDefaultTooltipTemplate() {
            let a = "<div class='ui-chart-default-tooltip-content'>";
            if (this.b2.vl.ce) {
                a += "<span>${itemLabel}</span><br/>";
            }
            else if (this.b2.vl.f0 != null) {
                a += "<span>${item." + this.b2.vl.f0 + "}</span><br/>";
            }
            a += "<span class='ui-priority-primary'";
            let b = this.e.a2.a$t(this.e);
            if (!stringIsNullOrEmpty(b)) {
                a += " style='color:" + b + "'";
            }
            let c = new SRProvider(this.w);
            let d = c.b1("financialSeries_Open");
            let e = c.b1("financialSeries_High");
            let f = c.b1("financialSeries_Low");
            let g = c.b1("financialSeries_Close");
            d = stringIsNullOrEmpty(d) ? "Open" : d;
            e = stringIsNullOrEmpty(e) ? "High" : e;
            f = stringIsNullOrEmpty(f) ? "Low" : f;
            g = stringIsNullOrEmpty(g) ? "Close" : g;
            a += ">" + this.b2.title + "</span><table><tr><td>" + d + ":</td><td>" + "${item." + this.b2.yb + "}</td></tr><tr><td>" + e + ":</td><td>" + "${item." + this.b2.x2 + "}</td></tr><tr><td>" + f + ":</td><td>" + "${item." + this.b2.x7 + "}</td></tr><tr><td>" + g + ":</td><td>" + "${item." + this.b2.xp + "}</td></tr>";
            if (!stringIsNullOrEmpty(this.b2.yf)) {
                let h = c.b1("financialSeries_Volume");
                h = stringIsNullOrEmpty(h) ? "Volume" : h;
                a += "<tr><td>" + h + ":</td><td>" + "${item." + this.b2.yf + "}</td></tr>";
            }
            a += "</table></div>";
            return a;
        }
        af() {
            let a = new Color();
            a.colorString = "rgba(95,95,95,0.5)";
            this.e.uj = a;
            this.e.i2 = 5;
            this.e.i3 = 2;
            this.e.i4 = 2;
        }
    }
    FinancialSeriesView.$t = /*@__PURE__*/ markType(FinancialSeriesView, 'FinancialSeriesView', SeriesView.$);
    return FinancialSeriesView;
})();
