/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayer } from "./AnnotationLayer";
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-react-core";
import { CategoryItemHighlightType_$type } from "./CategoryItemHighlightType";
import { MarkerType_$type } from "./MarkerType";
import { Brush } from "igniteui-react-core";
import { DataTemplate } from "igniteui-react-core";
import { CategoryItemHighlightLayerFrame } from "./CategoryItemHighlightLayerFrame";
import { Base, enumGetBox, fromEnum, typeCast, Point_$type, markType, markDep, runOn } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { ItemHighlightFrameRect } from "./ItemHighlightFrameRect";
import { List$1 } from "igniteui-react-core";
import { IHasCategoryModePreference_$type } from "./IHasCategoryModePreference";
import { Rect } from "igniteui-react-core";
import { MarkerSeries } from "./MarkerSeries";
import { DataContext } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { ContentControl } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_, isInfinity, truncate } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { Marker } from "./Marker";
import { BrushUtil } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { DataTemplatePassInfo } from "igniteui-react-core";
import { DataTemplateRenderInfo } from "igniteui-react-core";
import { DataTemplateMeasureInfo } from "igniteui-react-core";
/**
 * @hidden
 */
export let CategoryItemHighlightLayer = /*@__PURE__*/ (() => {
    class CategoryItemHighlightLayer extends AnnotationLayer {
        bb() {
            return new CategoryItemHighlightLayer();
        }
        get_ec() {
            return true;
        }
        constructor() {
            super();
            this.yi = false;
            this.yh = true;
            this.yl = 10;
            let a = new CategoryItemHighlightLayerFrame();
            let b = new CategoryItemHighlightLayerFrame();
            let c = new CategoryItemHighlightLayerFrame();
            this.vr = a;
            this.vq = b;
            this.vs = c;
            this.ab = CategoryItemHighlightLayer.$;
        }
        ci() {
            return new CategoryItemHighlightLayerView(this);
        }
        px(a) {
            super.px(a);
            this.yc = a;
        }
        w4(a, b) {
            if (this.yg == null || this.yg == a) {
                if (!this.at.c) {
                    this.qm(b);
                }
            }
        }
        vx(a) {
            if (!super.vx(a)) {
                return false;
            }
            if (this.yu != null) {
                if (a.ew) {
                    let b = a.mg();
                    if (!Base.equalsStatic(this.yu, b)) {
                        return false;
                    }
                }
                else {
                    if (!Base.equalsStatic(this.yu, a.name)) {
                        return false;
                    }
                }
            }
            let c = this.wz(a);
            if (!c.c) {
                return false;
            }
            return true;
        }
        w6(a, b) {
            super.w6(a, b);
            let c = a;
            let d = this.yk;
            c.g.clear();
            if (isNaN_(this.x9.x) && isNaN_(this.x9.y)) {
                return;
            }
            if (this.vx(this.yg)) {
                this.y0(this.yg, c, d);
            }
            else {
                for (let e of fromEnum(this.c1.series)) {
                    if (this.vx(e)) {
                        this.y0(e, c, d);
                    }
                    if (e.isStacked) {
                        e.o0((f) => {
                            if (this.vx(f)) {
                                this.y0(f, c, d);
                            }
                            if (f.d2) {
                                f.oy((g) => {
                                    if (this.vx(g)) {
                                        this.y0(g, c, d);
                                    }
                                    return true;
                                });
                            }
                            return true;
                        });
                    }
                    if (e.d2) {
                        e.oy((f) => {
                            if (this.vx(f)) {
                                this.y0(f, c, d);
                            }
                            return true;
                        });
                    }
                }
            }
        }
        p5(a, b, c, d) {
            super.p5(a, b, c, d);
            switch (b) {
                case CategoryItemHighlightLayer.$$p[4]:
                case CategoryItemHighlightLayer.$$p[5]:
                case CategoryItemHighlightLayer.$$p[2]:
                case CategoryItemHighlightLayer.$$p[3]:
                    this.qm(true);
                    break;
                case CategoryItemHighlightLayer.$$p[7]:
                case CategoryItemHighlightLayer.$$p[8]:
                    this.qm(true);
                    break;
                case CategoryItemHighlightLayer.$$p[9]:
                    this.yi = d;
                    this.qm(true);
                    break;
                case CategoryItemHighlightLayer.$$p[1]:
                    this.qm(true);
                    break;
                case CategoryItemHighlightLayer.$$p[0]:
                    this.yl = this.ym;
                    this.qm(true);
                    break;
                case CategoryItemHighlightLayer.$$p[6]:
                    this.yh = d;
                    this.qm(true);
                    break;
            }
        }
        y0(a, b, c) {
            if (this.cl == null || this.cl.by.isEmpty || this.cl.bx.isEmpty) {
                return;
            }
            if (!a.ej && !a.er) {
                return;
            }
            let d = a;
            if (d.categoryAxis == null) {
                return;
            }
            let e = this.x9.x;
            e = this.cl.bx.left + this.cl.bx.width * (e - this.cl.by.left) / this.cl.by.width;
            let f = this.x9.y;
            f = this.cl.bx.top + this.cl.bx.height * (f - this.cl.by.top) / this.cl.by.height;
            let g = this.yj;
            let h = true;
            let i = typeCast(IHasCategoryModePreference_$type, a);
            let j = 0;
            if (i != null) {
                j = i.preferredCategoryMode(d.categoryAxis);
                if (j == 2) {
                    h = false;
                }
            }
            let k = true;
            if (!h || this.yd == 2) {
                k = false;
            }
            if (this.yd == 1) {
                k = true;
            }
            let l = this.wz(a);
            if (!l.c) {
                return;
            }
            if (k) {
                let m = a.uu(l.d, this.yk, g);
                if (j != 0 && !d.categoryAxis.cn) {
                    let n = m.x;
                    if (a.er) {
                        n -= a.getOffsetValue();
                        n += a.getCategoryWidth() * 0.5;
                        m = { $type: Point_$type, x: n, y: m.y };
                    }
                    else if (a.ej) {
                        n -= a.getOffsetValue();
                        n += a.getCategoryWidth() * 0.5;
                        m = { $type: Point_$type, x: n, y: m.y };
                    }
                }
                if (!isNaN_(m.x) && !isNaN_(m.y)) {
                    m = this.uz(m);
                }
                this.yy(m, b, a);
            }
            else {
                let o = a.uu(l.d, this.yk, g);
                let p;
                let q = this.getEffectiveViewport1(this.cl);
                if (a.isVertical) {
                    let r = o.y;
                    let s = d.categoryAxis;
                    let t = this.yl;
                    if (j != 0) {
                        t = s.k4(this.cl.by, this.cl.bx, q);
                    }
                    if (isNaN_(t) || isInfinity(t)) {
                        return;
                    }
                    p = new Rect(0, this.u9.left, r - t / 2, this.u9.width, t);
                }
                else {
                    let u = o.x;
                    let v = d.categoryAxis;
                    let w = this.yl;
                    if (j != 0) {
                        w = v.k4(this.cl.by, this.cl.bx, q);
                    }
                    if (isNaN_(w) || isInfinity(w)) {
                        return;
                    }
                    p = new Rect(0, u - w / 2, this.u9.top, w, this.u9.height);
                }
                p.intersect(this.cl.bx);
                this.yz(p, b, a);
            }
        }
        yy(a, b, c) {
            let d = new ItemHighlightFrameRect();
            d.b = a.x;
            d.e = a.y;
            d.i = this.xz();
            if (this.ze != null) {
                d.i = this.ze;
            }
            d.j = this.x0();
            if (this.zf != null) {
                d.j = this.zf;
            }
            if (d.i == null) {
                if (c.hasMarkers) {
                    d.i = this.yc.cl(c.t8());
                }
                else {
                    d.i = this.yc.cl(c.tw);
                }
            }
            if (d.j == null) {
                if (c.hasMarkers) {
                    d.j = this.yc.cl(c.t9());
                }
                else {
                    d.j = this.yc.cl(c.t0);
                }
            }
            d.d = this.hv;
            d.f = Base.getHashCodeStatic(c);
            d.g = this.ye(c, a);
            let e = (typeCast(MarkerSeries.$, c) !== null) ? c.wa : null;
            if (e == null || e == MarkerSeries.wd || (this.yf != 2 && this.yf != 0)) {
                let f = MarkerSeries.vq(c, 2);
                if (this.yf != 2 && this.yf != 0) {
                    f = this.yf;
                }
                switch (f) {
                    case 3:
                    case 13:
                        e = this.c1.rj;
                        break;
                    case 4:
                        e = this.c1.rs;
                        break;
                    case 5:
                        e = this.c1.rp;
                        break;
                    case 6:
                        e = this.c1.rq;
                        break;
                    case 7:
                        e = this.c1.rk;
                        break;
                    case 8:
                        e = this.c1.rn;
                        break;
                    case 9:
                        e = this.c1.rl;
                        break;
                    case 10:
                        e = this.c1.rr;
                        break;
                    case 11:
                        e = this.c1.ro;
                        break;
                    case 12:
                        e = this.c1.rm;
                        break;
                }
            }
            d.h = this.y3 != null ? this.y3 : e;
            if (!isNaN_(d.b) && !isNaN_(d.e)) {
                b.g.addItem(d.f, d);
            }
        }
        ye(a, b) {
            let c = a.j2(b);
            let d = a.h6(b);
            if (this.yk && d != Math.floor(d)) {
                c = null;
            }
            return ((() => {
                let $ret = new DataContext();
                $ret.series = a;
                $ret.item = c;
                return $ret;
            })());
        }
        yz(a, b, c) {
            let d = new ItemHighlightFrameRect();
            d.b = a.left;
            d.e = a.top;
            d.c = a.right;
            d.a = a.bottom;
            d.i = this.xz();
            d.j = this.x0();
            if (d.i == null) {
                if (c != null) {
                    d.i = this.yc.cm(c.tw);
                }
            }
            if (d.j == null) {
                if (c != null) {
                    d.j = this.yc.cm(c.t0);
                }
            }
            d.d = this.hv;
            d.f = Base.getHashCodeStatic(c);
            if (!a.isEmpty) {
                b.g.addItem(d.f, d);
            }
        }
        w9(a, b) {
            super.w9(a, b);
            let c = this.yc.b9;
            let d = this.yc.b8;
            let e = 0;
            let f = 0;
            let g = a;
            for (let h of fromEnum(g.g.values)) {
                if (h.h != null) {
                    let i = d.item(f);
                    this.y1(h, i);
                    f++;
                }
                else {
                    let j = c.item(e);
                    this.y2(h, j);
                    e++;
                }
            }
            c.count = e;
            d.count = f;
        }
        y1(a, b) {
            if (isNaN_(a.b) || isNaN_(a.e) || isNaN_(a.d) || a.g == null) {
                b._visibility = 1;
                return;
            }
            let c = { $type: Point_$type, x: a.b, y: a.e };
            let d = a.g;
            d.itemBrush = a.i;
            let e = d.series.uu(c, this.dr() || this.yi, this.yh);
            if (isNaN_(e.x) || isNaN_(e.y)) {
                b._visibility = 1;
                return;
            }
            this.yc.cf(b, e.x, e.y);
            b.ah = a.h;
            b.content = a.g;
        }
        y2(a, b) {
            if (isNaN_(a.b) || isNaN_(a.e) || isNaN_(a.a) || isNaN_(a.c) || isNaN_(a.d)) {
                b._visibility = 1;
                return;
            }
            this.yc.cg(b, a.b, a.e, a.c - a.b, a.a - a.e);
            b._fill = a.i;
            b._stroke = a.j;
            b.ad = a.d;
            if (this.uk != null) {
                b.ai = this.uk;
            }
            else {
                b.ai = null;
            }
            b.aj = this.ul;
            b.am = this.un;
            b.al = this.um;
            b.ak = this.um;
            b.ac = this.ix;
        }
        fu() {
            return true;
        }
    }
    CategoryItemHighlightLayer.$t = /*@__PURE__*/ markType(CategoryItemHighlightLayer, 'CategoryItemHighlightLayer', AnnotationLayer.$);
    CategoryItemHighlightLayer.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, CategoryItemHighlightLayer, 'raisePropertyChanged', ['BandHighlightWidth:ym:y4', [1, 10], 'HighlightType:yd:y5', [CategoryItemHighlightType_$type, /*@__PURE__*/ enumGetBox(CategoryItemHighlightType_$type, 0)], 'MarkerBrush:ze:y6', [Brush.$, null], 'MarkerOutline:zf:y7', [Brush.$, null], 'MarkerTemplate:y3:y8', [DataTemplate.$, null], 'MarkerType:yf:y9', [MarkerType_$type, /*@__PURE__*/ enumGetBox(MarkerType_$type, 2)], 'SkipUnknownValues:yj:za', [0, true], 'TargetSeriesName:yu:zb', [2, null], 'TargetSeries:yg:zc', [Series.$, null], 'UseInterpolation:yk:zd', [0, false]]);
    return CategoryItemHighlightLayer;
})();
/**
 * @hidden
 */
export let CategoryItemHighlightLayerView = /*@__PURE__*/ (() => {
    class CategoryItemHighlightLayerView extends AnnotationLayerView {
        constructor(a) {
            super(a);
            this.b7 = null;
            this.b9 = null;
            this.b8 = null;
            this.ca = null;
            this.cb = null;
            this.b7 = a;
            this.ca = new List$1(ContentControl.$, 0);
            this.cb = new List$1(Rectangle.$, 0);
        }
        au() {
            super.au();
            this.b9 = ((() => {
                let $ret = new Pool$1(Rectangle.$);
                $ret.create = runOn(this, this.cn);
                $ret.activate = runOn(this, this.ch);
                $ret.disactivate = runOn(this, this.cj);
                $ret.destroy = runOn(this, this.ci);
                return $ret;
            })());
            this.b8 = ((() => {
                let $ret = new Pool$1(ContentControl.$);
                $ret.create = runOn(this, this.ck);
                $ret.activate = runOn(this, this.cc);
                $ret.disactivate = runOn(this, this.ce);
                $ret.destroy = runOn(this, this.cd);
                return $ret;
            })());
        }
        cn() {
            let a = new Rectangle();
            a.ab = false;
            this.cb.add(a);
            return a;
        }
        ch(a) {
            a._visibility = 0;
        }
        cj(a) {
            a._visibility = 1;
        }
        ci(a) {
            this.cb.remove(a);
        }
        ck() {
            let a = new Marker();
            this.ca.add(a);
            return a;
        }
        cc(a) {
            a._visibility = 0;
        }
        ce(a) {
            a._visibility = 1;
        }
        cd(a) {
            this.ca.remove(a);
        }
        cl(a) {
            if (a == null) {
                return a;
            }
            return BrushUtil.m(a, 0.3);
        }
        cm(a) {
            if (a != null) {
                let b = BrushUtil.m(a, 0.3);
                if (b.isGradient) {
                    let c = b;
                    if (c.gradientStops != null) {
                        for (let d = 0; d < c.gradientStops.length; d++) {
                            let e = c.gradientStops[d];
                            e.color = Color.u(truncate(Math.round((e.color.l) * 0.3)), e.color.o, e.color.n, e.color.m);
                            e.color = e.color;
                        }
                    }
                }
                else {
                    b.color = Color.u(truncate(Math.round((b.color.l & 255) * 0.3)), b.color.o, b.color.n, b.color.m);
                    b.color = b.color;
                }
                return b;
            }
            else {
                return null;
            }
        }
        cg(a, b, c, d, e) {
            a._visibility = 0;
            a.n = b;
            a.o = c;
            a.width = d;
            a.height = e;
        }
        cf(a, b, c) {
            a.n = b;
            a.o = c;
        }
        bj(a, b) {
            super.bj(a, b);
            let c = a;
            let d = c.content;
            if (d != null) {
                if (d.itemBrush != null) {
                    d.actualItemBrush = d.itemBrush;
                }
                let e = d.series;
                if (e.hasMarkers) {
                    d.outline = e.t9();
                }
                d.thickness = e.h3();
            }
        }
        a8(a, b) {
            super.a8(a, b);
            if (a.d && !b) {
                for (let c = 0; c < this.cb.count; c++) {
                    let d = this.cb._inner[c];
                    if (d._visibility == 0) {
                        a.w(d);
                    }
                }
                if (this.ca.count > 0) {
                    let e = new DataTemplatePassInfo();
                    e.isHitTestRender = b;
                    e.context = a.h();
                    e.viewportTop = this.bx.top;
                    e.viewportLeft = this.bx.left;
                    e.viewportWidth = this.bx.width;
                    e.viewportHeight = this.bx.height;
                    e.passID = "ItemMarkers";
                    let f = new DataTemplateRenderInfo();
                    f.isHitTestRender = b;
                    f.passInfo = e;
                    let g = new DataTemplateMeasureInfo();
                    g.passInfo = e;
                    let h = false;
                    let i = a.h();
                    g.context = i;
                    f.context = i;
                    g.renderContext = a;
                    f.renderContext = a;
                    let j = 0;
                    let k = 0;
                    let l = new Dictionary$2(DataTemplate.$, DataTemplate.$, 0);
                    for (let m = 0; m < this.ca.count; m++) {
                        let n = this.ca._inner[m];
                        if (n == null || n.ah == null) {
                            continue;
                        }
                        let o = n.ah;
                        if (!l.containsKey(o)) {
                            l.addItem(o, o);
                            if (o != null && o.passStarting != null) {
                                o.passStarting(e);
                            }
                        }
                        if (n._visibility == 1) {
                            continue;
                        }
                        this.bi(n, m, b);
                        if (!h) {
                            g.data = n.content;
                            g.width = n.width;
                            g.height = n.height;
                            if (o.measure != null) {
                                g.data = n.content;
                                o.measure(g);
                                h = g.isConstant;
                                if (h) {
                                    j = g.width;
                                    k = g.height;
                                }
                            }
                            f.availableWidth = g.width;
                            f.availableHeight = g.height;
                        }
                        else {
                            f.availableWidth = j;
                            f.availableHeight = k;
                        }
                        if (!isNaN_(n.width) && !isInfinity(n.width)) {
                            f.availableWidth = n.width;
                        }
                        if (!isNaN_(n.height) && !isInfinity(n.height)) {
                            f.availableHeight = n.height;
                        }
                        a.q(f, n);
                        n.m = f.availableWidth;
                        n.l = f.availableHeight;
                    }
                    for (let p of fromEnum(l.keys)) {
                        if (p != null && p.passCompleted != null) {
                            p.passCompleted(e);
                        }
                    }
                }
            }
        }
        an(a) {
            super.an(a);
            for (let b = 0; b < this.cb.count; b++) {
                this.e.a4.exportRectangleData(a, this.cb._inner[b], "catItemRect", ["Main", "CategoryItem"]);
            }
            for (let c = 0; c < this.ca.count; c++) {
                this.e.a4.exportMarkerVisualDataFromMarker(this.e, a, this.ca._inner[c]);
            }
        }
    }
    CategoryItemHighlightLayerView.$t = /*@__PURE__*/ markType(CategoryItemHighlightLayerView, 'CategoryItemHighlightLayerView', AnnotationLayerView.$);
    return CategoryItemHighlightLayerView;
})();
