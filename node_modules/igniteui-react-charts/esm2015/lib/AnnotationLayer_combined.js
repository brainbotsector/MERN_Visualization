/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-react-core";
import { Point_$type, Boolean_$type, enumGetBox, runOn, delegateRemove, typeCast, delegateCombine, fromEnum, fromEn, markType, markDep } from "igniteui-react-core";
import { AnnotationAppearanceMode_$type } from "./AnnotationAppearanceMode";
import { DoubleCollection } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { XamDataChart } from "./XamDataChart";
import { Tuple$2 } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let AnnotationLayer = /*@__PURE__*/ (() => {
    class AnnotationLayer extends Series {
        constructor() {
            super();
            this.yb = null;
            this.vr = null;
            this.vq = null;
            this.vs = null;
            this.x9 = { $type: Point_$type, x: NaN, y: NaN };
            this.vt = false;
            this.yb = { $type: Point_$type, x: NaN, y: NaN };
            this.xe();
        }
        ci() {
            return new AnnotationLayerView(this);
        }
        px(a) {
            super.px(a);
            this.vp = a;
        }
        vx(a) {
            if (a == null) {
                return false;
            }
            if (a.ed) {
                return false;
            }
            if (a.isValueOverlay) {
                return false;
            }
            if (a == this) {
                return false;
            }
            return a.gw(a.cl.bx, a.cl.by, a.cl);
        }
        get_em() {
            return this.vu;
        }
        bt() {
            if (this.bu == 0) {
                return 1;
            }
            else {
                return super.bt();
            }
        }
        get_e1() {
            return this.vz || this.v0;
        }
        get_isUsableInLegend() {
            return this.v0;
        }
        p5(a, b, c, d) {
            super.p5(a, b, c, d);
            switch (b) {
                case "SeriesViewer":
                    let e = c;
                    let f = d;
                    if (e != null) {
                        this.xd(e.series);
                        let g = e.series;
                        g.collectionChanged = delegateRemove(g.collectionChanged, runOn(this, this.xa));
                        if (typeCast(XamDataChart.$, e) !== null) {
                            let h = e;
                            this.xc(h.axes);
                            let i = h.axes;
                            i.collectionChanged = delegateRemove(i.collectionChanged, runOn(this, this.w0));
                        }
                    }
                    if (f != null) {
                        this.w8(f.series);
                        let j = f.series;
                        j.collectionChanged = delegateCombine(j.collectionChanged, runOn(this, this.xa));
                        if (typeCast(XamDataChart.$, f) !== null) {
                            let k = f;
                            this.w7(k.axes);
                            let l = k.axes;
                            l.collectionChanged = delegateCombine(l.collectionChanged, runOn(this, this.w0));
                        }
                    }
                    break;
                case AnnotationLayer.$$p[16]:
                case AnnotationLayer.$$p[15]:
                    if (this.e1) {
                        if (this.index == -1) {
                            this.index = XamDataChart.x3(this);
                        }
                    }
                    else {
                        this.index = -1;
                        this.tw = null;
                        this.t0 = null;
                    }
                    if (this.c1 != null) {
                        this.c1.ow();
                    }
                    this.qm(true);
                    break;
                case "TransitionProgress":
                    this.vs.c(this.i6, this.vr, this.vq);
                    if (this.dt(this.cl)) {
                        return;
                    }
                    if (this.i6 == 1) {
                        this.w9(this.vq, this.cl);
                        this.pk();
                    }
                    else {
                        this.w9(this.vs, this.cl);
                    }
                    if (this.c1 != null) {
                        this.c1.p6(this);
                    }
                    break;
                case AnnotationLayer.$$p[13]:
                    if (this.c1 != null) {
                        this.c1.oq();
                    }
                    break;
                case AnnotationLayer.$$p[9]:
                    this.yb = this.ya;
                    this.pn(this.ya);
                    break;
                case "ShouldRenderAsOverlay":
                    if (this.c1 != null) {
                        this.cl.al(this.c1);
                        this.cl.ag(this.c1);
                    }
                    break;
                case AnnotationLayer.$$p[8]:
                case AnnotationLayer.$$p[14]:
                case "DashArray":
                case AnnotationLayer.$$p[10]:
                case AnnotationLayer.$$p[17]:
                case AnnotationLayer.$$p[12]:
                case AnnotationLayer.$$p[19]:
                case AnnotationLayer.$$p[11]:
                case AnnotationLayer.$$p[18]:
                    this.xe();
                    break;
                case AnnotationLayer.$$p[0]:
                case AnnotationLayer.$$p[4]:
                case AnnotationLayer.$$p[1]:
                case AnnotationLayer.$$p[5]:
                case AnnotationLayer.$$p[3]:
                case AnnotationLayer.$$p[7]:
                case AnnotationLayer.$$p[2]:
                case AnnotationLayer.$$p[6]:
                    this.qm(true);
                    break;
            }
        }
        xd(a) {
            for (let b of fromEnum(a)) {
                if (!(b == this)) {
                    b.renderRequested = delegateRemove(b.renderRequested, runOn(this, this.xb));
                }
            }
            this.qm(true);
        }
        xc(a) {
            for (let b of fromEnum(a)) {
                b.renderRequested = delegateRemove(b.renderRequested, runOn(this, this.w1));
            }
            this.qm(true);
        }
        w8(a) {
            for (let b of fromEnum(a)) {
                if (!(b == this)) {
                    b.renderRequested = delegateCombine(b.renderRequested, runOn(this, this.xb));
                }
            }
            this.qm(true);
        }
        w7(a) {
            for (let b of fromEnum(a)) {
                b.renderRequested = delegateCombine(b.renderRequested, runOn(this, this.w1));
            }
            this.qm(true);
        }
        vv(a) {
            if (a == null) {
                return false;
            }
            return true;
        }
        w1(a, b) {
            if (this.vv(a)) {
                this.w3(a, b.animate);
            }
        }
        vw(a) {
            if (a == null) {
                return false;
            }
            if (a.ed) {
                return false;
            }
            return true;
        }
        xb(a, b) {
            if (this.vw(a)) {
                this.w4(a, b.animate);
            }
        }
        w3(a, b) {
        }
        w4(a, b) {
        }
        xa(a, b) {
            this.w5(b);
        }
        w0(a, b) {
            this.w2(b);
        }
        xz() {
            if (this.tw != null) {
                return this.tw;
            }
            return this.t2;
        }
        x0() {
            if (this.t0 != null) {
                return this.t0;
            }
            return this.ud;
        }
        w2(a) {
            if (a.oldItems != null) {
                for (let b of fromEn(a.oldItems)) {
                    b.renderRequested = delegateRemove(b.renderRequested, runOn(this, this.w1));
                }
            }
            if (a.newItems != null) {
                for (let c of fromEn(a.newItems)) {
                    c.renderRequested = delegateCombine(c.renderRequested, runOn(this, this.w1));
                }
            }
            this.qm(true);
        }
        w5(a) {
            if (a.oldItems != null) {
                for (let b of fromEn(a.oldItems)) {
                    b.renderRequested = delegateRemove(b.renderRequested, runOn(this, this.xb));
                }
            }
            if (a.newItems != null) {
                for (let c of fromEn(a.newItems)) {
                    c.renderRequested = delegateCombine(c.renderRequested, runOn(this, this.xb));
                }
            }
            this.qm(true);
        }
        rk(a, b) {
            this.qm(false);
        }
        rj(a, b) {
            this.qm(true);
        }
        qn(a) {
            super.qn(a);
            if (this.dt(this.cl)) {
                return;
            }
            if (this.fz(a) && !this.gb) {
                let b = this.vr;
                if (this.dr()) {
                    if (this.c2.g) {
                        this.c2.t();
                    }
                    this.vr = this.vs;
                    this.vs = b;
                }
                else {
                    this.vr = this.vq;
                    this.vq = b;
                }
                this.w6(this.vq, this.cl);
                this.q0();
            }
            else {
                if (!this.gb) {
                    this.w6(this.vq, this.cl);
                }
                this.w9(this.vq, this.cl);
            }
        }
        get_ed() {
            return true;
        }
        w6(a, b) {
        }
        w9(a, b) {
            this.pt();
            this.vp.b4();
        }
        wz(a) {
            let b = { $type: Point_$type, x: this.x9.x, y: this.x9.y };
            if (a.isVertical) {
                if (isNaN_(this.x9.y)) {
                    return new Tuple$2(Boolean_$type, Point_$type, false, b);
                }
                if (isNaN_(this.x9.x)) {
                    b.x = 0;
                    return new Tuple$2(Boolean_$type, Point_$type, true, b);
                }
            }
            else {
                if (isNaN_(this.x9.x)) {
                    return new Tuple$2(Boolean_$type, Point_$type, false, b);
                }
                if (isNaN_(this.x9.y)) {
                    b.y = 0;
                    return new Tuple$2(Boolean_$type, Point_$type, true, b);
                }
            }
            return new Tuple$2(Boolean_$type, Point_$type, true, b);
        }
        pn(a) {
            super.pn(a);
            if (isNaN_(this.yb.x) && isNaN_(this.yb.y)) {
                if (isNaN_(a.x) && isNaN_(a.y)) {
                    this.vp.b3();
                    return;
                }
                else {
                    this.vp.b5();
                    this.x9 = a;
                }
            }
            else {
                this.vp.b5();
                this.x9 = this.yb;
            }
            this.qm(true);
        }
        gw(a, b, c) {
            let d = super.gw(a, b, c);
            if (this.c1 == null) {
                return false;
            }
            if (!this.cl.t()) {
                d = false;
                return d;
            }
            return d;
        }
        wa() {
            if (isNaN_(this.wd)) {
                switch (this.vd) {
                    case 1: return this.v4();
                    case 2: return this.v7();
                    case 4: return this.v6();
                }
            }
            return this.wd;
        }
        v9() {
            if (isNaN_(this.wc)) {
                return this.v2;
            }
            return this.wc;
        }
        wb() {
            if (isNaN_(this.we)) {
                return this.v2;
            }
            return this.we;
        }
        vk() {
            switch (this.vg) {
                case 0: return this.vh();
            }
            return this.vg;
        }
        vl() {
            switch (this.vn) {
                case 0: return this.vd;
            }
            return this.vn;
        }
        vm() {
            switch (this.vo) {
                case 0: return this.vd;
            }
            return this.vo;
        }
        x5() {
            if (this.x7 == null) {
                if (this.uk == null) {
                    return this.x3();
                }
                return this.uk;
            }
            return this.x7;
        }
        x6() {
            if (this.x8 == null) {
                if (this.uk == null) {
                    return this.x4();
                }
                return this.uk;
            }
            return this.x8;
        }
        vh() {
            return 0;
        }
        vi() {
            return this.vh();
        }
        vj() {
            return this.vh();
        }
        v4() {
            return NaN;
        }
        v7() {
            return NaN;
        }
        v6() {
            return NaN;
        }
        v5() {
            return NaN;
        }
        v8() {
            return NaN;
        }
        x3() {
            return null;
        }
        x4() {
            return null;
        }
        xe() {
            this.vd = this.vk();
            this.v2 = this.wa();
            this.ve = this.vl();
            this.v1 = this.v9();
            this.vf = this.vm();
            this.v3 = this.wb();
            this.x1 = this.x5();
            this.x2 = this.x6();
        }
        get_gs() {
            return this.vy;
        }
        get vy() {
            return this.vt;
        }
        set vy(a) {
            let b = this.vt;
            this.vt = a;
            this.raisePropertyChanged("ShouldRenderAsOverlay", b, this.vt);
        }
    }
    AnnotationLayer.$t = /*@__PURE__*/ markType(AnnotationLayer, 'AnnotationLayer', Series.$);
    AnnotationLayer.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, AnnotationLayer, 'raisePropertyChanged', ['ActualAppearanceMode:vd:xf', [AnnotationAppearanceMode_$type, /*@__PURE__*/ enumGetBox(AnnotationAppearanceMode_$type, 0)], 'ActualHorizontalAppearanceMode:ve:xg', [AnnotationAppearanceMode_$type, /*@__PURE__*/ enumGetBox(AnnotationAppearanceMode_$type, 0)], 'ActualHorizontalDashArray:x1:xh', [DoubleCollection.$], 'ActualHorizontalShiftAmount:v1:xi', [1, NaN], 'ActualShiftAmount:v2:xj', [1, NaN], 'ActualVerticalAppearanceMode:vf:xk', [AnnotationAppearanceMode_$type, /*@__PURE__*/ enumGetBox(AnnotationAppearanceMode_$type, 0)], 'ActualVerticalDashArray:x2:xl', [DoubleCollection.$], 'ActualVerticalShiftAmount:v3:xm', [1, NaN], 'AppearanceMode:vg:xn', [AnnotationAppearanceMode_$type, /*@__PURE__*/ enumGetBox(AnnotationAppearanceMode_$type, 0)], 'CursorPosition:ya:xo', [Point_$type, { $type: Point_$type, x: NaN, y: NaN }], 'HorizontalAppearanceMode:vn:xp', [AnnotationAppearanceMode_$type, /*@__PURE__*/ enumGetBox(AnnotationAppearanceMode_$type, 0)], 'HorizontalDashArray:x7:xq', [DoubleCollection.$], 'HorizontalShiftAmount:wc:xr', [1, NaN], 'IsDefaultCrosshairDisabled:vu:xs', [0, true], 'ShiftAmount:wd:xt', [1, NaN], 'UseIndex:vz:xu', [0, false], 'UseLegend:v0:xv', [0, false], 'VerticalAppearanceMode:vo:xw', [AnnotationAppearanceMode_$type, /*@__PURE__*/ enumGetBox(AnnotationAppearanceMode_$type, 0)], 'VerticalDashArray:x8:xx', [DoubleCollection.$], 'VerticalShiftAmount:we:xy', [1, NaN]]);
    return AnnotationLayer;
})();
/**
 * @hidden
 */
export let AnnotationLayerView = /*@__PURE__*/ (() => {
    class AnnotationLayerView extends SeriesView {
        constructor(a) {
            super(a);
            this.b0 = null;
            this.b1 = false;
            this.b2 = -1;
            this.b0 = a;
        }
        b6() {
            if (this.b1) {
                this.b1 = false;
                this.b2 = -1;
                this.b0.x9 = { $type: Point_$type, x: NaN, y: NaN };
                this.b0.qm(true);
            }
        }
        b3() {
            this.b1 = true;
            if (this.e.jf != null) {
                this.e.jf.setTimeout(runOn(this, this.b6), 300);
            }
            else {
                this.b2 = window.setTimeout(runOn(this, this.b6), 300);
            }
        }
        b5() {
            if (this.b1 == true) {
                this.b1 = false;
                if (this.b2 != -1) {
                    window.clearTimeout(this.b2);
                    this.b2 = -1;
                }
            }
        }
        b4() {
            this.as();
        }
    }
    AnnotationLayerView.$t = /*@__PURE__*/ markType(AnnotationLayerView, 'AnnotationLayerView', SeriesView.$);
    return AnnotationLayerView;
})();
