/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { DomainChart } from "./DomainChart";
import { fromEnum, enumGetBox, markType } from "igniteui-react-core";
import { HorizontalAlignment_$type } from "igniteui-react-core";
import { VerticalAlignment_$type } from "igniteui-react-core";
import { Visibility_$type } from "igniteui-react-core";
import { YAxisLabelLocation_$type } from "./YAxisLabelLocation";
import { XAxisLabelLocation_$type } from "./XAxisLabelLocation";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { AxisDefaults } from "./AxisDefaults";
import { TitleSettings } from "./TitleSettings";
import { ScalerParams } from "./ScalerParams";
import { DeviceUtils } from "igniteui-react-core";
/**
 * @hidden
 */
export let XYChart = /*@__PURE__*/ (() => {
    class XYChart extends DomainChart {
        constructor() {
            super(...arguments);
            this.xr = null;
            this.xs = null;
            this.x8 = 0;
            this.ya = 5;
            this.x9 = 0;
            this.x7 = 5;
            this.yp = 5;
            this.yr = 0;
            this.yq = 5;
            this.yo = 0;
            this.adi = null;
            this.adp = null;
            this.adg = null;
            this.adh = null;
            this.yj = 0;
            this.y0 = 0;
            this.yi = NaN;
            this.yz = NaN;
            this.yl = NaN;
            this.y2 = NaN;
            this.yk = NaN;
            this.y1 = NaN;
            this.yh = NaN;
            this.yy = NaN;
            this.ado = null;
            this.adv = null;
            this.aaa = null;
            this.aae = null;
            this.aac = null;
            this.aag = null;
            this.z5 = null;
            this.z6 = null;
            this.adj = null;
            this.adq = null;
            this.yb = DeviceUtils.g(1);
            this.ys = DeviceUtils.g(1);
            this.yc = DeviceUtils.g(1);
            this.yt = DeviceUtils.g(1);
            this.adl = null;
            this.ads = null;
            this.adm = null;
            this.adt = null;
            this.yd = DeviceUtils.g(1);
            this.yu = DeviceUtils.g(1);
            this.ye = DeviceUtils.g(8);
            this.yv = 0;
            this.adn = null;
            this.adu = null;
            this.yf = DeviceUtils.g(1);
            this.yw = DeviceUtils.g(1);
            this.aab = null;
            this.aaf = null;
            this.adk = null;
            this.adr = null;
            this.x6 = 0;
            this.yn = 0;
            this.x5 = NaN;
            this.ym = NaN;
            this.yg = 0;
            this.yx = -90;
            this.x1 = false;
            this.x2 = false;
            this.adb = 1;
            this.aee = 1;
            this.ada = 1;
            this.adc = 2;
            this.aec = 0;
            this.aed = 1;
            this.aei = 0;
            this.aej = 0;
            this.xz = 4;
            this.xx = 4;
            this.z9 = null;
            this.xl = null;
            this.aad = null;
            this.xm = null;
        }
        provideContainer(a) {
            if (a != null) {
                let b = this.xp();
                let c = this.xq();
                if (b != null) {
                    b.provideRenderer(a);
                }
                if (c != null) {
                    c.provideRenderer(a);
                }
            }
            super.provideContainer(a);
        }
        ti() {
            super.ti();
            let a = this.xp();
            let b = this.xq();
            if (a != null && a.az != null) {
                this.ady = a.az.textColor;
            }
            if (b != null && b.az != null) {
                this.ad5 = b.az.textColor;
            }
            this.ad3 = AxisDefaults.j;
            this.aea = AxisDefaults.j;
            this.adz = AxisDefaults.h;
            this.ad6 = AxisDefaults.h;
            this.ad2 = AxisDefaults.g;
            this.ad9 = AxisDefaults.g;
        }
        t8(a, b, c) {
            super.t8(a, b, c);
            switch (a) {
                case "XAxisLabelLeftMargin":
                    this.ac2((d) => d.leftMargin = this.za);
                    break;
                case "XAxisLabelTopMargin":
                    this.ac2((d) => d.topMargin = this.zc);
                    break;
                case "XAxisLabelRightMargin":
                    this.ac2((d) => d.rightMargin = this.zb);
                    break;
                case "XAxisLabelBottomMargin":
                    this.ac2((d) => d.bottomMargin = this.y9);
                    break;
                case "YAxisLabelLeftMargin":
                    this.ac7((d) => d.leftMargin = this.zr);
                    break;
                case "YAxisLabelTopMargin":
                    this.ac7((d) => d.topMargin = this.zt);
                    break;
                case "YAxisLabelRightMargin":
                    this.ac7((d) => d.rightMargin = this.zs);
                    break;
                case "YAxisLabelBottomMargin":
                    this.ac7((d) => d.bottomMargin = this.zq);
                    break;
                case "ActualItemsSource":
                case "ShouldDisplayMockData":
                case "ShouldUseSkeletonStyleForMockData":
                    this.adw = this.wn(this.ady);
                    this.adx = this.wn(this.ad5);
                    break;
                case "XAxisLabelTextColor":
                    this.adw = this.wn(this.ady);
                    break;
                case "YAxisLabelTextColor":
                    this.adx = this.wn(this.ad5);
                    break;
                case "ActualXAxisLabelTextColor":
                    this.ac2((d) => d.textColor = this.adw);
                    break;
                case "ActualYAxisLabelTextColor":
                    this.ac7((d) => d.textColor = this.adx);
                    break;
                case "XAxisTitleMargin":
                    this.ac4((d) => d.margin = this.zl);
                    break;
                case "YAxisTitleMargin":
                    this.ac9((d) => d.margin = this.z2);
                    break;
                case "XAxisTitleLeftMargin":
                    this.ac4((d) => d.leftMargin = this.zk);
                    break;
                case "YAxisTitleLeftMargin":
                    this.ac9((d) => d.leftMargin = this.z1);
                    break;
                case "XAxisTitleTopMargin":
                    this.ac4((d) => d.topMargin = this.zn);
                    break;
                case "YAxisTitleTopMargin":
                    this.ac9((d) => d.topMargin = this.z4);
                    break;
                case "XAxisTitleRightMargin":
                    this.ac4((d) => d.rightMargin = this.zm);
                    break;
                case "YAxisTitleRightMargin":
                    this.ac9((d) => d.rightMargin = this.z3);
                    break;
                case "XAxisTitleBottomMargin":
                    this.ac4((d) => d.bottomMargin = this.zj);
                    break;
                case "YAxisTitleBottomMargin":
                    this.ac9((d) => d.bottomMargin = this.z0);
                    break;
                case "XAxisTitleTextColor":
                    this.ac4((d) => d.textColor = this.ad4);
                    break;
                case "YAxisTitleTextColor":
                    this.ac9((d) => d.textColor = this.aeb);
                    break;
                case "XAxisFormatLabel":
                    this.ac0((d) => d.au = this.xt);
                    break;
                case "YAxisFormatLabel":
                    this.ac5((d) => d.au = this.xu);
                    break;
            }
        }
        get xt() {
            return this.xr;
        }
        set xt(a) {
            let b = this.xt;
            if (a != b) {
                this.xr = a;
                this.t5("XAxisFormatLabel", b, this.xt);
            }
        }
        get xu() {
            return this.xs;
        }
        set xu(a) {
            let b = this.xu;
            if (a != b) {
                this.xs = a;
                this.t5("YAxisFormatLabel", b, this.xu);
            }
        }
        get za() {
            return this.x8;
        }
        set za(a) {
            let b = this.za;
            if (a != b) {
                this.x8 = a;
                this.t5("XAxisLabelLeftMargin", b, this.za);
            }
        }
        get zc() {
            return this.ya;
        }
        set zc(a) {
            let b = this.zc;
            if (a != b) {
                this.ya = a;
                this.t5("XAxisLabelTopMargin", b, this.zc);
            }
        }
        get zb() {
            return this.x9;
        }
        set zb(a) {
            let b = this.zb;
            if (a != b) {
                this.x9 = a;
                this.t5("XAxisLabelRightMargin", b, this.zb);
            }
        }
        get y9() {
            return this.x7;
        }
        set y9(a) {
            let b = this.y9;
            if (a != b) {
                this.x7 = a;
                this.t5("XAxisLabelBottomMargin", b, this.y9);
            }
        }
        get zr() {
            return this.yp;
        }
        set zr(a) {
            let b = this.zr;
            if (a != b) {
                this.yp = a;
                this.t5("YAxisLabelLeftMargin", b, this.zr);
            }
        }
        get zt() {
            return this.yr;
        }
        set zt(a) {
            let b = this.zt;
            if (a != b) {
                this.yr = a;
                this.t5("YAxisLabelTopMargin", b, this.zt);
            }
        }
        get zs() {
            return this.yq;
        }
        set zs(a) {
            let b = this.zs;
            if (a != b) {
                this.yq = a;
                this.t5("YAxisLabelRightMargin", b, this.zs);
            }
        }
        get zq() {
            return this.yo;
        }
        set zq(a) {
            let b = this.zq;
            if (a != b) {
                this.yo = a;
                this.t5("YAxisLabelBottomMargin", b, this.zq);
            }
        }
        get ady() {
            return this.adi;
        }
        set ady(a) {
            let b = this.ady;
            if (a != b) {
                this.adi = a;
                this.t5("XAxisLabelTextColor", b, this.ady);
            }
        }
        get ad5() {
            return this.adp;
        }
        set ad5(a) {
            let b = this.ad5;
            if (a != b) {
                this.adp = a;
                this.t5("YAxisLabelTextColor", b, this.ad5);
            }
        }
        get adw() {
            return this.adg;
        }
        set adw(a) {
            let b = this.adg;
            if (a != b) {
                this.adg = a;
                this.t5("ActualXAxisLabelTextColor", b, this.adw);
            }
        }
        get adx() {
            return this.adh;
        }
        set adx(a) {
            let b = this.adh;
            if (a != b) {
                this.adh = a;
                this.t5("ActualYAxisLabelTextColor", b, this.adx);
            }
        }
        get zl() {
            return this.yj;
        }
        set zl(a) {
            let b = this.zl;
            if (a != b) {
                this.yj = a;
                this.t5("XAxisTitleMargin", b, this.zl);
            }
        }
        get z2() {
            return this.y0;
        }
        set z2(a) {
            let b = this.z2;
            if (a != b) {
                this.y0 = a;
                this.t5("YAxisTitleMargin", b, this.z2);
            }
        }
        get zk() {
            return this.yi;
        }
        set zk(a) {
            let b = this.zk;
            if (a != b) {
                this.yi = a;
                this.t5("XAxisTitleLeftMargin", b, this.zk);
            }
        }
        get z1() {
            return this.yz;
        }
        set z1(a) {
            let b = this.z1;
            if (a != b) {
                this.yz = a;
                this.t5("YAxisTitleLeftMargin", b, this.z1);
            }
        }
        get zn() {
            return this.yl;
        }
        set zn(a) {
            let b = this.zn;
            if (a != b) {
                this.yl = a;
                this.t5("XAxisTitleTopMargin", b, this.zn);
            }
        }
        get z4() {
            return this.y2;
        }
        set z4(a) {
            let b = this.z4;
            if (a != b) {
                this.y2 = a;
                this.t5("YAxisTitleTopMargin", b, this.z4);
            }
        }
        get zm() {
            return this.yk;
        }
        set zm(a) {
            let b = this.zm;
            if (a != b) {
                this.yk = a;
                this.t5("XAxisTitleRightMargin", b, this.zm);
            }
        }
        get z3() {
            return this.y1;
        }
        set z3(a) {
            let b = this.z3;
            if (a != b) {
                this.y1 = a;
                this.t5("YAxisTitleRightMargin", b, this.z3);
            }
        }
        get zj() {
            return this.yh;
        }
        set zj(a) {
            let b = this.zj;
            if (a != b) {
                this.yh = a;
                this.t5("XAxisTitleBottomMargin", b, this.zj);
            }
        }
        get z0() {
            return this.yy;
        }
        set z0(a) {
            let b = this.z0;
            if (a != b) {
                this.yy = a;
                this.t5("YAxisTitleBottomMargin", b, this.z0);
            }
        }
        get ad4() {
            return this.ado;
        }
        set ad4(a) {
            let b = this.ad4;
            if (a != b) {
                this.ado = a;
                this.t5("XAxisTitleTextColor", b, this.ad4);
            }
        }
        get aeb() {
            return this.adv;
        }
        set aeb(a) {
            let b = this.aeb;
            if (a != b) {
                this.adv = a;
                this.t5("YAxisTitleTextColor", b, this.aeb);
            }
        }
        t9(a, b, c) {
            super.t9(a, b, c);
            switch (a) {
                case "XAxisLabelTextStyle":
                    this.ac2((d) => d.textStyle = this.aay);
                    break;
                case "YAxisLabelTextStyle":
                    this.ac7((d) => d.textStyle = this.ab3);
                    break;
                case "XAxisTitleTextStyle":
                    this.ac4((d) => d.textStyle = this.abm);
                    break;
                case "YAxisTitleTextStyle":
                    this.ac9((d) => d.textStyle = this.acr);
                    break;
            }
        }
        get aay() {
            return this.aaa;
        }
        set aay(a) {
            let b = this.aay;
            if (a != b) {
                this.aaa = a;
                this.t5("XAxisLabelTextStyle", b, this.aay);
            }
        }
        get ab3() {
            return this.aae;
        }
        set ab3(a) {
            let b = this.ab3;
            if (a != b) {
                this.aae = a;
                this.t5("YAxisLabelTextStyle", b, this.ab3);
            }
        }
        get abm() {
            return this.aac;
        }
        set abm(a) {
            let b = this.abm;
            if (a != b) {
                this.aac = a;
                this.t5("XAxisTitleTextStyle", b, this.abm);
            }
        }
        get acr() {
            return this.aag;
        }
        set acr(a) {
            let b = this.acr;
            if (a != b) {
                this.aag = a;
                this.t5("YAxisTitleTextStyle", b, this.acr);
            }
        }
        acx(a) {
            this.acu(a, (b) => b.leftMargin = this.za);
            this.acu(a, (b) => b.topMargin = this.zc);
            this.acu(a, (b) => b.rightMargin = this.zb);
            this.acu(a, (b) => b.bottomMargin = this.y9);
            this.acu(a, (b) => b.textColor = this.adw);
            this.acv(a, (b) => b.textColor = this.ad4);
            this.acv(a, (b) => b.leftMargin = this.zk);
            this.acv(a, (b) => b.topMargin = this.zn);
            this.acv(a, (b) => b.rightMargin = this.zm);
            this.acv(a, (b) => b.bottomMargin = this.zj);
            this.acu(a, (b) => b.textStyle = this.aay);
            this.acv(a, (b) => b.textStyle = this.abm);
        }
        acz(a) {
            this.acu(a, (b) => b.leftMargin = this.zr);
            this.acu(a, (b) => b.topMargin = this.zt);
            this.acu(a, (b) => b.rightMargin = this.zs);
            this.acu(a, (b) => b.bottomMargin = this.zq);
            this.acu(a, (b) => b.textColor = this.adx);
            this.acv(a, (b) => b.textColor = this.aeb);
            this.acv(a, (b) => b.leftMargin = this.z1);
            this.acv(a, (b) => b.topMargin = this.z4);
            this.acv(a, (b) => b.rightMargin = this.z3);
            this.acv(a, (b) => b.bottomMargin = this.z0);
            this.acu(a, (b) => b.textStyle = this.ab3);
            this.acv(a, (b) => b.textStyle = this.acr);
        }
        us(a) {
            let b = this.bg(a);
            let c = this.c6(a, b);
            if (c == null) {
                return;
            }
            c.itemsSource = a.data;
            if (a.highlightedData != null) {
                c.highlightedItemsSource = a.highlightedData;
            }
            c.name = this.pe(a);
            c.title = this.pf(a, b);
            this.dataChart.series.add(c);
        }
        ac0(a) {
            this.ac1(a, null);
        }
        ac1(a, b) {
            a(this.xp());
        }
        ac6(a, b) {
            a(this.xq());
        }
        ac5(a) {
            this.ac6(a, true);
        }
        s2(a, b) {
            this.ac0(a);
            this.ac6(a, b);
        }
        ac4(a) {
            this.acv(this.xp(), a);
        }
        ac9(a) {
            this.acv(this.xq(), a);
        }
        ac7(a) {
            this.acu(this.xq(), a);
        }
        ac2(a) {
            this.acu(this.xp(), a);
        }
        y3(a) {
            let b = this.xp();
            return b.ej(a, new ScalerParams(1, this.ww, this.wv, b.ch));
        }
        y5(a) {
            let b = this.xp();
            return b.em(a, new ScalerParams(1, this.ww, this.wv, b.ch));
        }
        y4(a) {
            let b = this.xq();
            return b.ej(a, new ScalerParams(1, this.ww, this.wv, b.ch));
        }
        y6(a) {
            let b = this.xq();
            return b.em(a, new ScalerParams(1, this.ww, this.wv, b.ch));
        }
        up(a) {
            super.up(a);
            if (a == null) {
                return;
            }
            if (a.axes != null) {
                let b = this.xp();
                let c = this.xq();
                if (a.axes.contains(b)) {
                    a.axes.remove(b);
                }
                if (a.axes.contains(c)) {
                    a.axes.remove(c);
                }
            }
        }
        static aaj(a, b) {
            for (let c of fromEnum(b)) {
                let d = c.findMatchingHint(16);
                if (d != null) {
                    let e = d.path;
                    return e;
                }
            }
            return null;
        }
        td(a) {
            super.td(a);
            if (a == this.dataChart) {
                this.dataChart.axes.add(this.xp());
                this.dataChart.axes.add(this.xq());
            }
        }
        acw(a) {
            if (a != null && this.kz != null && a.fl == null) {
                a.provideRenderer(this.kz);
            }
            a.jw = this.adz;
            a.er = this.zd;
            a.jx = this.ad0;
            a.eu = this.ze;
            a.jz = this.ad2;
            a.fg = this.zf;
            a.jy = this.ad1;
            a.fh = this.zg;
            a.j0 = this.ad3;
            a.fi = this.zh;
            a.c4 = true;
            a.cu = this.g2;
            a.cw = this.g2;
            let b = a == this.xp();
            if (b) {
                a.g6 = this.abd;
            }
            a.f0 = this.z7;
            a.gg = this.aap;
            a.ah = this.xn;
            this.acu(a, (c) => c.angle = this.y8);
            this.acu(a, (c) => {
                if (c.extent != this.y7) {
                    c.extent = this.y7;
                }
            });
            this.acu(a, (c) => c.horizontalAlignment = this.add);
            this.acu(a, (c) => c.verticalAlignment = this.aef);
            this.acu(a, (c) => c.visibility = this.aek);
            this.acu(a, (c) => c.location = this.xv(this.xy));
            this.acv(a, (c) => c.horizontalAlignment = this.ade);
            this.acv(a, (c) => c.angle = this.zi);
            this.acx(a);
        }
        acy(a) {
            if (a == null) {
                return;
            }
            if (this.kz != null && a.fl == null) {
                a.provideRenderer(this.kz);
            }
            a.cu = this.g2;
            a.cw = this.g2;
            this.acu(a, (b) => b.angle = this.zp);
            this.acu(a, (b) => {
                if (b.extent != this.zo) {
                    b.extent = this.zo;
                }
            });
            this.acu(a, (b) => b.horizontalAlignment = this.adf);
            this.acu(a, (b) => b.verticalAlignment = this.aeg);
            this.acu(a, (b) => b.visibility = this.ael);
            this.acu(a, (b) => b.location = this.xw(this.x0));
            this.acv(a, (b) => b.verticalAlignment = this.aeh);
            this.acv(a, (b) => b.angle = this.zz);
            a.jw = this.ad6;
            a.er = this.zu;
            a.jx = this.ad7;
            a.eu = this.zv;
            a.jz = this.ad9;
            a.fg = this.zw;
            a.jy = this.ad8;
            a.fh = this.zx;
            a.j0 = this.aea;
            a.fi = this.zy;
            let b = a == this.xq();
            if (b) {
                a.g6 = this.aci;
            }
            a.gg = this.abu;
            a.ah = this.xo;
            this.acz(a);
        }
        ta() {
            super.ta();
            this.acw(this.xp());
            this.acy(this.xq());
        }
        acu(a, b) {
            if (a == null) {
                return;
            }
            if (a.az == null) {
                a.az = new AxisLabelSettings();
                a.az.angle = a.d5();
                a.az.bottomMargin = a.d6();
                a.az.leftMargin = a.d7();
                a.az.rightMargin = a.d8();
                a.az.topMargin = a.d9();
                a.az.horizontalAlignment = a.jr();
                a.az.location = a.a0();
                a.az.verticalAlignment = a.kk();
            }
            b(a.az);
        }
        acv(a, b) {
            if (a == null) {
                return;
            }
            if (a.bf == null) {
                a.bf = new TitleSettings();
                a.bf.bottomMargin = a.eb();
                a.bf.leftMargin = a.ec();
                a.bf.rightMargin = a.ed();
                a.bf.topMargin = a.ee();
                a.bf.location = a.a1();
                a.bf.angle = a.ea();
                a.bf.horizontalAlignment = a.js();
                a.bf.verticalAlignment = a.kl();
            }
            b(a.bf);
        }
        t5(a, b, c) {
            super.t5(a, b, c);
            switch (a) {
                case "XAxisLabelAngle":
                    this.ac2((d) => d.angle = this.y8);
                    break;
                case "YAxisLabelAngle":
                    this.ac7((d) => d.angle = this.zp);
                    break;
                case "XAxisLabelHorizontalAlignment":
                    this.ac2((d) => d.horizontalAlignment = this.add);
                    break;
                case "YAxisLabelHorizontalAlignment":
                    this.ac7((d) => d.horizontalAlignment = this.adf);
                    break;
                case "XAxisLabelVerticalAlignment":
                    this.ac2((d) => d.verticalAlignment = this.aef);
                    break;
                case "YAxisLabelVerticalAlignment":
                    this.ac7((d) => d.verticalAlignment = this.aeg);
                    break;
                case "XAxisLabelVisibility":
                    this.ac2((d) => d.visibility = this.aek);
                    break;
                case "YAxisLabelVisibility":
                    this.ac7((d) => d.visibility = this.ael);
                    break;
                case "XAxisLabel":
                    this.ac0((d) => d.f0 = this.z7);
                    break;
                case "YAxisLabel":
                    this.ac5((d) => d.f0 = this.z8);
                    break;
                case "XAxisLabelFormat":
                    this.ac0((d) => d.gg = this.aap);
                    break;
                case "XAxisLabelFormatSpecifiers":
                    this.ac0((d) => d.ah = this.xn);
                    break;
                case "YAxisLabelFormat":
                    this.ac5((d) => d.gg = this.abu);
                    break;
                case "YAxisLabelFormatSpecifiers":
                    this.ac5((d) => d.ah = this.xo);
                    break;
                case "XAxisTitleAngle":
                    this.ac4((d) => d.angle = this.zi);
                    break;
                case "YAxisTitleAngle":
                    this.ac9((d) => d.angle = this.zz);
                    break;
                case "XAxisTitleAlignment":
                    this.ac4((d) => d.horizontalAlignment = this.ade);
                    break;
                case "YAxisTitleAlignment":
                    this.ac9((d) => d.verticalAlignment = this.aeh);
                    break;
                case "XAxisTitle":
                    this.ac0((d) => d.g6 = this.abd);
                    break;
                case "YAxisTitle":
                    this.ac6((d) => d.g6 = this.aci, false);
                    break;
                case "XAxisMajorStroke":
                    this.ac1((d) => d.jw = this.adz, a);
                    break;
                case "YAxisMajorStroke":
                    this.ac5((d) => d.jw = this.ad6);
                    break;
                case "XAxisMajorStrokeThickness":
                    this.ac1((d) => d.er = this.zd, a);
                    break;
                case "YAxisMajorStrokeThickness":
                    this.ac5((d) => d.er = this.zu);
                    break;
                case "XAxisMinorStroke":
                    this.ac0((d) => d.jx = this.ad0);
                    break;
                case "YAxisMinorStroke":
                    this.ac5((d) => d.jx = this.ad7);
                    break;
                case "XAxisMinorStrokeThickness":
                    this.ac0((d) => d.eu = this.ze);
                    break;
                case "YAxisMinorStrokeThickness":
                    this.ac5((d) => d.eu = this.zv);
                    break;
                case "XAxisTickLength":
                    this.ac0((d) => d.fh = this.zg);
                    break;
                case "YAxisTickLength":
                    this.ac5((d) => d.fh = this.zx);
                    break;
                case "XAxisTickStroke":
                    this.ac0((d) => d.j0 = this.ad3);
                    break;
                case "YAxisTickStroke":
                    this.ac5((d) => d.j0 = this.aea);
                    break;
                case "XAxisTickStrokeThickness":
                    this.ac0((d) => d.fi = this.zh);
                    break;
                case "YAxisTickStrokeThickness":
                    this.ac5((d) => d.fi = this.zy);
                    break;
                case "XAxisStroke":
                    this.ac0((d) => d.jz = this.ad2);
                    break;
                case "YAxisStroke":
                    this.ac5((d) => d.jz = this.ad9);
                    break;
                case "XAxisStrokeThickness":
                    this.ac0((d) => d.fg = this.zf);
                    break;
                case "YAxisStrokeThickness":
                    this.ac5((d) => d.fg = this.zw);
                    break;
                case "XAxisExtent":
                    this.ac2((d) => d.extent = this.y7);
                    break;
                case "YAxisExtent":
                    this.ac7((d) => d.extent = this.zo);
                    break;
                case "XAxisStrip":
                    this.ac0((d) => d.jy = this.ad1);
                    break;
                case "YAxisStrip":
                    this.ac5((d) => d.jy = this.ad8);
                    break;
                case "XAxisInverted":
                    this.ac0((d) => d.ch = this.x3);
                    break;
                case "YAxisInverted":
                    this.ac5((d) => d.ch = this.x4);
                    break;
                case "YAxisLabelLocation":
                    this.ac8();
                    break;
                case "XAxisLabelLocation":
                    this.ac3();
                    break;
            }
        }
        ac8() {
            let a = this.xw(this.x0);
            if (a == 2 || a == 7) {
                this.adf = 2;
            }
            else {
                this.adf = 0;
            }
            this.ac7((b) => b.location = a);
        }
        ac3() {
            let a = this.xv(this.xy);
            if (a == 1 || a == 5) {
                this.aef = 0;
            }
            else {
                this.aef = 2;
            }
            this.ac2((b) => b.location = a);
        }
        xw(a) {
            if (a == 0) {
                return 2;
            }
            else if (a == 1) {
                return 3;
            }
            else if (a == 3) {
                return 7;
            }
            else if (a == 2) {
                return 6;
            }
            else {
                if (this.b5 == 1) {
                    return 3;
                }
                else {
                    return 2;
                }
            }
        }
        xv(a) {
            if (a == 1) {
                return 1;
            }
            else if (a == 0) {
                return 0;
            }
            else if (a == 3) {
                return 5;
            }
            else if (a == 2) {
                return 4;
            }
            else {
                return 1;
            }
        }
        get z7() {
            return this.z5;
        }
        set z7(a) {
            let b = this.z7;
            if (a != b) {
                this.z5 = a;
                this.t5("XAxisLabel", b, this.z7);
            }
        }
        get z8() {
            return this.z6;
        }
        set z8(a) {
            let b = this.z8;
            if (a != b) {
                this.z6 = a;
                this.t5("YAxisLabel", b, this.z8);
            }
        }
        get adz() {
            return this.adj;
        }
        set adz(a) {
            let b = this.adz;
            if (a != b) {
                this.adj = a;
                this.t5("XAxisMajorStroke", b, this.adz);
            }
        }
        get ad6() {
            return this.adq;
        }
        set ad6(a) {
            let b = this.ad6;
            if (a != b) {
                this.adq = a;
                this.t5("YAxisMajorStroke", b, this.ad6);
            }
        }
        get zd() {
            return this.yb;
        }
        set zd(a) {
            let b = this.zd;
            if (a != b) {
                this.yb = a;
                this.t5("XAxisMajorStrokeThickness", b, this.zd);
            }
        }
        get zu() {
            return this.ys;
        }
        set zu(a) {
            let b = this.zu;
            if (a != b) {
                this.ys = a;
                this.t5("YAxisMajorStrokeThickness", b, this.zu);
            }
        }
        get ze() {
            return this.yc;
        }
        set ze(a) {
            let b = this.ze;
            if (a != b) {
                this.yc = a;
                this.t5("XAxisMinorStrokeThickness", b, this.ze);
            }
        }
        get zv() {
            return this.yt;
        }
        set zv(a) {
            let b = this.zv;
            if (a != b) {
                this.yt = a;
                this.t5("YAxisMinorStrokeThickness", b, this.zv);
            }
        }
        get ad1() {
            return this.adl;
        }
        set ad1(a) {
            let b = this.ad1;
            if (a != b) {
                this.adl = a;
                this.t5("XAxisStrip", b, this.ad1);
            }
        }
        get ad8() {
            return this.ads;
        }
        set ad8(a) {
            let b = this.ad8;
            if (a != b) {
                this.ads = a;
                this.t5("YAxisStrip", b, this.ad8);
            }
        }
        get ad2() {
            return this.adm;
        }
        set ad2(a) {
            let b = this.ad2;
            if (a != b) {
                this.adm = a;
                this.t5("XAxisStroke", b, this.ad2);
            }
        }
        get ad9() {
            return this.adt;
        }
        set ad9(a) {
            let b = this.ad9;
            if (a != b) {
                this.adt = a;
                this.t5("YAxisStroke", b, this.ad9);
            }
        }
        get zf() {
            return this.yd;
        }
        set zf(a) {
            let b = this.zf;
            if (a != b) {
                this.yd = a;
                this.t5("XAxisStrokeThickness", b, this.zf);
            }
        }
        get zw() {
            return this.yu;
        }
        set zw(a) {
            let b = this.zw;
            if (a != b) {
                this.yu = a;
                this.t5("YAxisStrokeThickness", b, this.zw);
            }
        }
        get zg() {
            return this.ye;
        }
        set zg(a) {
            let b = this.zg;
            if (a != b) {
                this.ye = a;
                this.t5("XAxisTickLength", b, this.zg);
            }
        }
        get zx() {
            return this.yv;
        }
        set zx(a) {
            let b = this.zx;
            if (a != b) {
                this.yv = a;
                this.t5("YAxisTickLength", b, this.zx);
            }
        }
        get ad3() {
            return this.adn;
        }
        set ad3(a) {
            let b = this.ad3;
            if (a != b) {
                this.adn = a;
                this.t5("XAxisTickStroke", b, this.ad3);
            }
        }
        get aea() {
            return this.adu;
        }
        set aea(a) {
            let b = this.aea;
            if (a != b) {
                this.adu = a;
                this.t5("YAxisTickStroke", b, this.aea);
            }
        }
        get zh() {
            return this.yf;
        }
        set zh(a) {
            let b = this.zh;
            if (a != b) {
                this.yf = a;
                this.t5("XAxisTickStrokeThickness", b, this.zh);
            }
        }
        get zy() {
            return this.yw;
        }
        set zy(a) {
            let b = this.zy;
            if (a != b) {
                this.yw = a;
                this.t5("YAxisTickStrokeThickness", b, this.zy);
            }
        }
        get abd() {
            return this.aab;
        }
        set abd(a) {
            let b = this.abd;
            if (a != b) {
                this.aab = a;
                this.t5("XAxisTitle", b, this.abd);
            }
        }
        get aci() {
            return this.aaf;
        }
        set aci(a) {
            let b = this.aci;
            if (a != b) {
                this.aaf = a;
                this.t5("YAxisTitle", b, this.aci);
            }
        }
        get ad0() {
            return this.adk;
        }
        set ad0(a) {
            let b = this.ad0;
            if (a != b) {
                this.adk = a;
                this.t5("XAxisMinorStroke", b, this.ad0);
            }
        }
        get ad7() {
            return this.adr;
        }
        set ad7(a) {
            let b = this.ad7;
            if (a != b) {
                this.adr = a;
                this.t5("YAxisMinorStroke", b, this.ad7);
            }
        }
        get y8() {
            return this.x6;
        }
        set y8(a) {
            let b = this.y8;
            if (a != b) {
                this.x6 = a;
                this.t5("XAxisLabelAngle", b, this.y8);
            }
        }
        get zp() {
            return this.yn;
        }
        set zp(a) {
            let b = this.zp;
            if (a != b) {
                this.yn = a;
                this.t5("YAxisLabelAngle", b, this.zp);
            }
        }
        get y7() {
            return this.x5;
        }
        set y7(a) {
            let b = this.y7;
            if (a != b) {
                this.x5 = a;
                this.t5("XAxisExtent", b, this.y7);
            }
        }
        get zo() {
            return this.ym;
        }
        set zo(a) {
            let b = this.zo;
            if (a != b) {
                this.ym = a;
                this.t5("YAxisExtent", b, this.zo);
            }
        }
        get zi() {
            return this.yg;
        }
        set zi(a) {
            let b = this.zi;
            if (a != b) {
                this.yg = a;
                this.t5("XAxisTitleAngle", b, this.zi);
            }
        }
        get zz() {
            return this.yx;
        }
        set zz(a) {
            let b = this.zz;
            if (a != b) {
                this.yx = a;
                this.t5("YAxisTitleAngle", b, this.zz);
            }
        }
        get x3() {
            return this.x1;
        }
        set x3(a) {
            let b = this.x3;
            if (a != b) {
                this.x1 = a;
                this.t5("XAxisInverted", b, this.x3);
            }
        }
        get x4() {
            return this.x2;
        }
        set x4(a) {
            let b = this.x4;
            if (a != b) {
                this.x2 = a;
                this.t5("YAxisInverted", b, this.x4);
            }
        }
        get ade() {
            return this.adb;
        }
        set ade(a) {
            let b = this.ade;
            if (a != b) {
                this.adb = a;
                this.t5("XAxisTitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.ade));
            }
        }
        get aeh() {
            return this.aee;
        }
        set aeh(a) {
            let b = this.aeh;
            if (a != b) {
                this.aee = a;
                this.t5("YAxisTitleAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.aeh));
            }
        }
        get add() {
            return this.ada;
        }
        set add(a) {
            let b = this.add;
            if (a != b) {
                this.ada = a;
                this.t5("XAxisLabelHorizontalAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.add));
            }
        }
        get_adf() {
            return this.adc;
        }
        set_adf(a) {
            let b = this.adf;
            if (a != b) {
                this.adc = a;
                this.t5("YAxisLabelHorizontalAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.adf));
            }
        }
        get adf() {
            return this.get_adf();
        }
        set adf(a) {
            this.set_adf(a);
        }
        get aef() {
            return this.aec;
        }
        set aef(a) {
            let b = this.aef;
            if (a != b) {
                this.aec = a;
                this.t5("XAxisLabelVerticalAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.aef));
            }
        }
        get aeg() {
            return this.aed;
        }
        set aeg(a) {
            let b = this.aeg;
            if (a != b) {
                this.aed = a;
                this.t5("YAxisLabelVerticalAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.aeg));
            }
        }
        get aek() {
            return this.aei;
        }
        set aek(a) {
            let b = this.aek;
            if (a != b) {
                this.aei = a;
                this.t5("XAxisLabelVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.aek));
            }
        }
        get ael() {
            return this.aej;
        }
        set ael(a) {
            let b = this.ael;
            if (a != b) {
                this.aej = a;
                this.t5("YAxisLabelVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.ael));
            }
        }
        get_x0() {
            return this.xz;
        }
        set_x0(a) {
            let b = this.x0;
            if (a != b) {
                this.xz = a;
                this.t5("YAxisLabelLocation", enumGetBox(YAxisLabelLocation_$type, b), enumGetBox(YAxisLabelLocation_$type, this.x0));
            }
        }
        get x0() {
            return this.get_x0();
        }
        set x0(a) {
            this.set_x0(a);
        }
        get_xy() {
            return this.xx;
        }
        set_xy(a) {
            let b = this.xy;
            if (a != b) {
                this.xx = a;
                this.t5("XAxisLabelLocation", enumGetBox(XAxisLabelLocation_$type, b), enumGetBox(XAxisLabelLocation_$type, this.xy));
            }
        }
        get xy() {
            return this.get_xy();
        }
        set xy(a) {
            this.set_xy(a);
        }
        get aap() {
            return this.z9;
        }
        set aap(a) {
            let b = this.z9;
            if (a != b) {
                this.z9 = a;
                this.t5("XAxisLabelFormat", b, this.z9);
            }
        }
        get xn() {
            return this.xl;
        }
        set xn(a) {
            let b = this.xl;
            if (a != b) {
                this.xl = a;
                this.t5("XAxisLabelFormatSpecifiers", b, this.xl);
            }
        }
        get abu() {
            return this.aad;
        }
        set abu(a) {
            let b = this.aad;
            if (a != b) {
                this.aad = a;
                this.t5("YAxisLabelFormat", b, this.aad);
            }
        }
        get xo() {
            return this.xm;
        }
        set xo(a) {
            let b = this.xm;
            if (a != b) {
                this.xm = a;
                this.t5("YAxisLabelFormatSpecifiers", b, this.xm);
            }
        }
    }
    XYChart.$t = /*@__PURE__*/ markType(XYChart, 'XYChart', DomainChart.$);
    return XYChart;
})();
