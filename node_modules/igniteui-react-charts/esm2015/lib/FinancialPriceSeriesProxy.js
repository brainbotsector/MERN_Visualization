/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { IFinancialPriceSeriesProxy_$type } from "./IFinancialPriceSeriesProxy";
/**
 * @hidden
 */
export let FinancialPriceSeriesProxy = /*@__PURE__*/ (() => {
    class FinancialPriceSeriesProxy extends Base {
        getCloseMemberPath(a) {
            return a.xp;
        }
        getHighMemberPath(a) {
            return a.x2;
        }
        getLowMemberPath(a) {
            return a.x7;
        }
        getOpenMemberPath(a) {
            return a.yb;
        }
        getVolumeMemberPath(a) {
            return a.yf;
        }
        matchesType(a) {
            if (!a.er) {
                return false;
            }
            if (a.es || a.et) {
                return false;
            }
            return true;
        }
        setCategoryMode(a, b) {
            a.vt = b;
        }
        setCloseMemberPath(a, b) {
            a.xp = b;
        }
        setDisplayType(a, b) {
            a.zh = b;
        }
        setHighMemberPath(a, b) {
            a.x2 = b;
        }
        setLowMemberPath(a, b) {
            a.x7 = b;
        }
        setOpenMemberPath(a, b) {
            a.yb = b;
        }
        setVolumeMemberPath(a, b) {
            a.yf = b;
        }
        setXAxis(a, b) {
            a.vl = b;
        }
        setYAxis(a, b) {
            a.v4 = b;
        }
        setTrendLineType(a, b) {
            if (a.eu) {
                a.trendLineType = b;
            }
        }
    }
    FinancialPriceSeriesProxy.$t = /*@__PURE__*/ markType(FinancialPriceSeriesProxy, 'FinancialPriceSeriesProxy', Base.$, [IFinancialPriceSeriesProxy_$type]);
    return FinancialPriceSeriesProxy;
})();
