/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { MarkerSeries } from "./MarkerSeries";
import { Base, runOn, delegateCombine, Number_$type, enumGetBox, Point_$type, typeCast, fromEnum, markType, markDep } from "igniteui-react-core";
import { PolarAxisInfoCache } from "./PolarAxisInfoCache";
import { SeriesRenderer$2 } from "./SeriesRenderer$2";
import { PolarFrame } from "./PolarFrame";
import { DependencyProperty } from "igniteui-react-core";
import { NumericAngleAxis } from "./NumericAngleAxis";
import { NumericRadiusAxis } from "./NumericRadiusAxis";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { ScatterItemSearchMode_$type } from "./ScatterItemSearchMode";
import { HighlightingInfo } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { PolarAxes } from "./PolarAxes";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { SeriesRenderingArguments } from "./SeriesRenderingArguments";
import { AxisRange } from "./AxisRange";
import { Dictionary$2 } from "igniteui-react-core";
import { OwnedPoint } from "./OwnedPoint";
import { GeometryUtil } from "igniteui-react-core";
import { DataContext } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { Clipper } from "igniteui-react-core";
import { PolarTrendLineManager } from "./PolarTrendLineManager";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { AssigningPolarStyleEventArgs } from "./AssigningPolarStyleEventArgs";
import { AssigningPolarMarkerStyleEventArgs } from "./AssigningPolarMarkerStyleEventArgs";
import { SeriesRenderManager } from "./SeriesRenderManager";
import { DataLegendSeriesValueInfo } from "igniteui-react-core";
import { DataLegendSeriesContext } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { NumericMarkerManager } from "./NumericMarkerManager";
import { GeometryGroup } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
export let PolarBase = /*@__PURE__*/ (() => {
    class PolarBase extends MarkerSeries {
        ci() {
            return new PolarBaseView(this);
        }
        px(a) {
            super.px(a);
            this.w6 = a;
        }
        n4() {
            super.n4();
            this.w2 = null;
            this.w3 = null;
        }
        get_fa() {
            return true;
        }
        dz(a, b, c, d) {
            if (!this.hasMarkers) {
                return false;
            }
            let e = this.w2;
            let f = new ScalerParams(1, this.c1.vh, this.u9, e.ch);
            f.c = this.getEffectiveViewport1(this.cl);
            let g = this.w3;
            let h = new ScalerParams(1, this.c1.vh, this.u9, g.ch);
            h.c = this.getEffectiveViewport1(this.cl);
            a.clear();
            this.vl.ci((i) => {
                if (i._visibility == 0) {
                    let j = new SeriesPointOfInterest();
                    let k = i.n;
                    let l = i.o;
                    if (k < this.u9.left || k > this.u9.right || l < this.u9.top || l > this.u9.bottom) {
                        return;
                    }
                    let m;
                    let n;
                    let o = this.w4.f(k, l, this.cl.by, this.cl.bx, m, n);
                    m = o.p4;
                    n = o.p5;
                    j.b = m;
                    j.c = n;
                    j.a = i.content;
                    a.add(j);
                }
            });
            return true;
        }
        constructor() {
            super();
            this.w7 = null;
            this.wy = null;
            this.w5 = null;
            this.aan = null;
            this.aam = null;
            this.xj = null;
            this.xq = null;
            this.xr = null;
            this.xb = new PolarFrame();
            this.xd = new PolarFrame();
            this.w9 = new PolarFrame();
            this.w4 = null;
            this.x9 = null;
            this.xf = 1;
            this.xv = false;
            this.xu = false;
            this.xo = null;
            this.xp = null;
            this.assigningPolarStyle = null;
            this.assigningPolarMarkerStyle = null;
            this.xe = null;
            this.xc = null;
            this.w8 = null;
            this.xe = new PolarSeriesRenderManager();
            this.xg = this.xh();
            this.xc = new PolarFrame();
            this.xd.x = runOn(this, this.aal);
            this.xb.x = runOn(this, this.aal);
            this.w9.x = runOn(this, this.aal);
            this.xj = new SeriesRenderer$2(PolarFrame.$, PolarBaseView.$, 0, runOn(this, this.zm), runOn(this, this.zq), runOn(this, this.dr), runOn(this, this.q0), runOn(this, this.zf));
        }
        zf() {
            if (this.c2.g) {
                this.c2.t();
            }
        }
        zh() {
            this.w4.e(this.w7.w, this.xs, this.xt, this.aan, this.aam, (a, b) => Math.cos(b), (a, b) => Math.sin(b), true);
        }
        fv() {
            return this.highlightedItemsSource != null || (this.yx != null && this.yv != null);
        }
        x7() {
            return false;
        }
        hb() {
            let a = super.hb();
            {
                let b = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.ad = "AngleMemberPath";
                    $ret.p = true;
                    $ret.y = "HighlightedAngleMemberPath";
                    $ret.q = true;
                    return $ret;
                })());
                b.valueResolving = delegateCombine(b.valueResolving, runOn(this, this.zi));
                a.add(b);
            }
            {
                let c = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.ad = "RadiusMemberPath";
                    $ret.p = true;
                    $ret.y = "HighlightedRadiusMemberPath";
                    $ret.q = true;
                    return $ret;
                })());
                c.valueResolving = delegateCombine(c.valueResolving, runOn(this, this.zj));
                a.add(c);
            }
            if (this.x7()) {
                let d = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.r = true;
                    $ret.ad = "DashArray";
                    $ret.p = true;
                    $ret.x = ((() => {
                        let $ret = new DoubleCollection();
                        $ret.add(5);
                        $ret.add(5);
                        return $ret;
                    })());
                    $ret.q = true;
                    return $ret;
                })());
                a.add(d);
            }
            if (!this.x7()) {
                let e = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.r = true;
                    $ret.ad = "Brush";
                    $ret.p = true;
                    $ret.y = "ActualBrush";
                    $ret.q = true;
                    return $ret;
                })());
                e.valueResolving = delegateCombine(e.valueResolving, runOn(this, this.qu));
                a.add(e);
            }
            if (!this.x7()) {
                let f = ((() => {
                    let $ret = new SeriesLayerPropertyOverlay();
                    $ret.r = true;
                    $ret.ad = "Outline";
                    $ret.p = true;
                    $ret.y = "ActualOutline";
                    $ret.q = true;
                    return $ret;
                })());
                f.valueResolving = delegateCombine(f.valueResolving, runOn(this, this.qu));
                a.add(f);
            }
            return a;
        }
        zj(a, b) {
            if (this.yx != null) {
                b.value = this.yx;
                return;
            }
            b.value = this.za;
        }
        zi(a, b) {
            if (this.yv != null) {
                b.value = this.yv;
                return;
            }
            b.value = this.ys;
        }
        get xs() {
            return this.xq;
        }
        set xs(a) {
            if (this.xq != a) {
                let b = this.xs;
                this.xq = a;
                this.raisePropertyChanged("AngleColumn", b, this.xs);
            }
        }
        get xt() {
            return this.xr;
        }
        set xt(a) {
            if (this.xr != a) {
                let b = this.xt;
                this.xr = a;
                this.raisePropertyChanged("RadiusColumn", b, this.xt);
            }
        }
        get aag() {
            return this.c(PolarBase.zr);
        }
        set aag(a) {
            this.h(PolarBase.zr, a);
        }
        xa() {
            let a = this.w9;
            if (this.dr()) {
                if (this.c2.g) {
                    this.c2.t();
                }
                a = this.xd;
            }
            return a;
        }
        o6() {
            super.o6();
            if (this.w3 != null) {
                this.w3.h8(false);
            }
            if (this.w2 != null) {
                this.w2.h8(false);
            }
        }
        oc(a, b, c, d) {
            let e = false;
            this.w6.cy.g$e(a, b, c, d);
            if (this.w2 != null && !this.w2.c1()) {
                e = true;
            }
            if (this.w3 != null && !this.w3.c1()) {
                e = true;
            }
            if (e) {
                this.qm(true);
            }
        }
        rj(a, b) {
            this.qm(false);
        }
        rk(a, b) {
            this.qm(false);
        }
        gw(a, b, c) {
            let d = true;
            if (!super.gw(a, b, c) || !c.o() || b.isEmpty || a.isEmpty || this.w2 == null || this.w3 == null || this.xs == null || this.xt == null || this.xs.count == 0 || this.xt.count == 0 || this.dd == null || this.dd.count != this.xs.count || this.dd.count != this.xt.count || this.w4 == null || this.w2.bi == null || this.w3.bi == null || this.w2.lx == this.w2.lw || this.w3.lx == this.w3.lw) {
                d = false;
            }
            return d;
        }
        qn(a) {
            super.qn(a);
            let b;
            let c;
            let d = this.getViewInfo(c, b);
            c = d.p0;
            b = d.p1;
            if (!this.gw(c, b, this.cl)) {
                this.n7(true, this.cl);
                return;
            }
            this.aan = b;
            this.aam = c;
            this.w5 = new PolarAxisInfoCache(this.w2, this.w3, this.dd);
            let e = new SeriesRenderingArguments(this, c, b, a, this.gb);
            let f = this.xj.g(e, this.xb, this.w9, this.xd, this.w6);
            this.xb = f.p1;
            this.w9 = f.p2;
            this.xd = f.p3;
        }
        aal(a) {
            let b = this.w4.h(a.x, a.y, this.aan, this.aam, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
            return b;
        }
        aq(a) {
            if (a != null && a == this.w2 && this.xs != null) {
                return new AxisRange(this.xs.minimum, this.xs.maximum);
            }
            if (a != null && a == this.w3 && this.xt != null) {
                return new AxisRange(this.xt.minimum, this.xt.maximum);
            }
            return null;
        }
        fx(a) {
            let b = this.cl.by;
            b = b.copy();
            let c = this.cl.bx;
            let d = !b.isEmpty && !c.isEmpty && this.dd != null ? this.dd.indexOf(a) : -1;
            if (this.w2 == null || this.xs == null || this.w3 == null || this.xt == null) {
                return false;
            }
            if (d < 0 || d > this.xs.count - 1 || d > this.xt.count - 1) {
                return false;
            }
            let e = this.w2.getScaledAngle(this.xs.item(d));
            let f = this.w3.nu(this.xt.item(d));
            let g = 0.5 + (Math.cos(e) * f);
            let h = 0.5 + (Math.sin(e) * f);
            if (!isNaN_(g)) {
                if (g < b.left + 0.1 * b.width) {
                    g = g + 0.4 * b.width;
                    b.x = g - 0.5 * b.width;
                }
                if (g > b.right - 0.1 * b.width) {
                    g = g - 0.4 * b.width;
                    b.x = g - 0.5 * b.width;
                }
            }
            if (!isNaN_(h)) {
                if (h < b.top + 0.1 * b.height) {
                    h = h + 0.4 * b.height;
                    b.y = h - 0.5 * b.height;
                }
                if (h > b.bottom - 0.1 * b.height) {
                    h = h - 0.4 * b.height;
                    b.y = h - 0.5 * b.height;
                }
            }
            if (this.ct != null) {
                this.ct.au(this.c1, b, true);
            }
            return d >= 0;
        }
        j2(a) {
            let b = this.jj(a);
            if (this.dd != null && b >= 0 && b < this.dd.count) {
                return this.dd.item(b);
            }
            return null;
        }
        jj(a) {
            let b = truncate(Math.round(this.h6(a)));
            return b;
        }
        h6(a) {
            switch (this.xg) {
                case 1: return this.yd(a);
                case 3: return this.ye(a);
                case 2: return this.yb(a);
                case 4: return this.yc(a);
            }
            return -1;
        }
        yc(a) {
            return this.yf(a, false);
        }
        yb(a) {
            let b = this.up(a);
            let c = b.x;
            let d = b.y;
            if (this.dd == null || this.w2 == null || this.w3 == null || this.xs == null || this.xt == null) {
                return -1;
            }
            if (this.dd.count > this.yh) {
                return -1;
            }
            if (!this.xz()) {
                return -1;
            }
            let e = this.x9;
            let f = 1.7976931348623157E+308;
            let g = -1;
            for (let h = 0; h < this.xs.count; h++) {
                let i = e._inner[h].x;
                let j = e._inner[h].y;
                let k = (c - i) * (c - i) + (d - j) * (d - j);
                if (k < f) {
                    f = k;
                    g = h;
                }
            }
            return g;
        }
        xz() {
            let a = this.w9;
            if (this.dr()) {
                a = this.xd;
            }
            if (a == null || a.w.count == 0) {
                return false;
            }
            this.x9 = a.w;
            return true;
        }
        yf(a, b) {
            if (!this.x2) {
                return -1;
            }
            let c = { $type: Point_$type, x: 0, y: 0 };
            let d = true;
            let e = this.w9;
            if (this.dr()) {
                e = this.xd;
            }
            if (e == null) {
                return -1;
            }
            if (e.m == null) {
                return -1;
            }
            if (this.dd == null || this.dd.count > this.yh) {
                return -1;
            }
            if (!this.xz()) {
                return -1;
            }
            let f = this.x9;
            let g = this.up(a);
            let h = 1.7976931348623157E+308;
            let i = -1;
            for (let j = 0; j < f.count; j++) {
                let k = f._inner[j];
                if (j > 0) {
                    if (isNaN_(k.x) || isNaN_(k.y) || isNaN_(c.x) || isNaN_(c.y)) {
                        c = k;
                        continue;
                    }
                    if (!b || e.j.containsKey(this.dd.item(j)) || e.j.containsKey(this.dd.item(j - 1))) {
                        let l = GeometryUtil.d(g, c, k);
                        if (l < h) {
                            h = l;
                            i = j;
                        }
                    }
                }
                c = k;
            }
            if (i >= 0) {
                let m = f._inner[i];
                let n = f._inner[i - 1];
                if (!b || (e.j.containsKey(this.dd.item(i)) && e.j.containsKey(this.dd.item(i - 1)))) {
                    let o = GeometryUtil.i(g, n, m);
                    return (i - 1) + o;
                }
                else if (e.j.containsKey(this.dd.item(i))) {
                    return i;
                }
                else {
                    return i - 1;
                }
            }
            return -1;
        }
        ye(a) {
            return this.yf(a, true);
        }
        yd(a) {
            let b = null;
            let c = 1.7976931348623157E+308;
            let d = this.up(a);
            let e = d.x;
            let f = d.y;
            if (this.w6.cz.e > this.yh) {
                return -1;
            }
            this.w6.c2((g) => {
                if (g._visibility == 0) {
                    let h = this.w6.cs(g);
                    let i = h.left + h.width / 2;
                    let j = h.top + h.height / 2;
                    let k = (e - i) * (e - i) + (f - j) * (f - j);
                    if (k < c) {
                        c = k;
                        b = g;
                    }
                }
            });
            if (b != null) {
                return b.ak;
            }
            return -1;
        }
        uu(a, b, c) {
            if (this.w2 == null || this.w3 == null || this.xs == null || this.xt == null) {
                return { $type: Point_$type, x: NaN, y: NaN };
            }
            let d = this.cl.by;
            let e = this.cl.bx;
            let f = this.getEffectiveViewport();
            let g = new ScalerParams(0, d, e, this.w2.ch, f);
            let h = ((() => {
                let $ret = new ScalerParams(0, d, e, this.w3.ch, f);
                $ret.b = this.id();
                return $ret;
            })());
            if (b) {
                let i = this.h6(a);
                if (i == -1) {
                    return { $type: Point_$type, x: NaN, y: NaN };
                }
                let j = truncate(Math.floor(i));
                let k = truncate(Math.ceil(i));
                if (j < 0) {
                    j = 0;
                }
                if (k < 0) {
                    k = 0;
                }
                if (k > this.dd.count - 1) {
                    k = this.dd.count - 1;
                }
                if (j > this.dd.count - 1) {
                    j = this.dd.count - 1;
                }
                if (k == j) {
                    return this.w4.h(this.xs.item(j), this.xt.item(j), d, e, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
                }
                let l = i - Math.floor(i);
                let m = this.w4.h(this.xs.item(j), this.xt.item(j), d, e, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
                let n = this.w4.h(this.xs.item(k), this.xt.item(k), d, e, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
                let o = m.x;
                let p = m.y;
                let q = n.x;
                let r = n.y;
                let s = q - o;
                let t = r - p;
                return { $type: Point_$type, x: o + s * l, y: p + t * l };
            }
            else {
                let u = this.jj(a);
                if (u == -1) {
                    return { $type: Point_$type, x: NaN, y: NaN };
                }
                return this.w4.h(this.xs.item(u), this.xt.item(u), d, e, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
            }
        }
        ag() {
            return [this.w2, this.w3];
        }
        j5(a, b) {
            let c = this.mh(b);
            if (c == PolarBase.$$p[3]) {
                return this.j6(a, b, this.ys);
            }
            if (c == PolarBase.$$p[15]) {
                return this.j6(a, b, this.za);
            }
            if (c == PolarBase.$$p[5]) {
                return this.j6(a, b, this.yv);
            }
            if (c == PolarBase.$$p[6]) {
                return this.j6(a, b, this.yx);
            }
            return super.j5(a, b);
        }
        li(a) {
            let b = this.mh(a);
            if (b == PolarBase.$$p[3]) {
                return this.ys;
            }
            if (b == PolarBase.$$p[15]) {
                return this.za;
            }
            if (b == PolarBase.$$p[5]) {
                return this.yv;
            }
            if (b == PolarBase.$$p[6]) {
                return this.yx;
            }
            return super.li(a);
        }
        p5(a, b, c, d) {
            super.p5(a, b, c, d);
            if (this.w6.cy.g$b(a, b, c, d)) {
                this.qm(false);
                this.ph();
            }
            switch (b) {
                case PolarBase.$$p[1]:
                case PolarBase.$$p[2]:
                case PolarBase.$$p[13]:
                case PolarBase.$$p[14]:
                    this.pb();
                    break;
                case "FastItemsSource":
                    if (typeCast(IFastItemsSource_$type, c) != null) {
                        c.deregisterColumn(this.xs);
                        c.deregisterColumn(this.xt);
                        this.xs = null;
                        this.xt = null;
                    }
                    if (typeCast(IFastItemsSource_$type, d) != null) {
                        this.xs = this.da(this.ys);
                        this.xt = this.da(this.za);
                    }
                    if ((this.w3 != null && !this.w3.c1()) || (this.w2 != null && !this.w2.c1())) {
                        this.qm(this.f0 && c != null);
                    }
                    break;
                case PolarBase.$$p[0]:
                    if (this.w2 != null && this.w3 != null) {
                        this.w4 = new PolarAxes(this.w3, this.w2);
                    }
                    if (c != null) {
                        c.b0(this);
                    }
                    if (d != null) {
                        d.ct(this);
                    }
                    if (this.w2 != null && !this.w2.c1()) {
                        this.qm(false);
                    }
                    else if (c != null && d == null) {
                        this.n7(true, this.cl);
                    }
                    break;
                case PolarBase.$$p[12]:
                    if (this.w2 != null && this.w3 != null) {
                        this.w4 = new PolarAxes(this.w3, this.w2);
                    }
                    if (c != null) {
                        c.b0(this);
                    }
                    if (d != null) {
                        d.ct(this);
                    }
                    if (this.w3 != null && !this.w3.c1()) {
                        this.qm(false);
                    }
                    else if (c != null && d == null) {
                        this.n7(true, this.cl);
                    }
                    if (this.w2 != null && !this.w2.c1()) {
                        this.w2.h4();
                    }
                    break;
                case PolarBase.$$p[3]:
                    if (this.dd != null) {
                        this.dd.deregisterColumn(this.xs);
                        this.xs = this.da(this.ys);
                    }
                    break;
                case "AngleColumn":
                    this.w6.cy.g$i();
                    if (this.w2 != null && !this.w2.c1()) {
                        this.qm(this.f0 && this.dv);
                    }
                    break;
                case PolarBase.$$p[15]:
                    if (this.dd != null) {
                        this.dd.deregisterColumn(this.xt);
                        this.xt = this.da(this.za);
                    }
                    break;
                case "RadiusColumn":
                    this.w6.cy.g$i();
                    if (this.w3 != null && !this.w3.c1()) {
                        this.qm(this.f0 && this.dv);
                    }
                    break;
                case PolarBase.$$p[16]:
                    this.qm(false);
                    this.ph();
                    break;
                case PolarBase.$$p[11]:
                    this.qm(false);
                    this.ph();
                    break;
                case "TransitionProgress":
                    this.w5 = new PolarAxisInfoCache(this.w2, this.w3, this.dd);
                    this.aan = this.cl.by;
                    this.aam = this.cl.bx;
                    this.xd.v = this.x8;
                    this.xd.c(this.i6, this.xb, this.w9);
                    if (this.dt(this.cl)) {
                        return;
                    }
                    if (this.i6 == 1) {
                        this.zq(this.w9, this.w6);
                        this.pk();
                    }
                    else {
                        this.zq(this.xd, this.w6);
                    }
                    if (this.c1 != null) {
                        this.c1.p6(this);
                    }
                    break;
                case "TrendLineBrush":
                    this.qb(b);
                    break;
                case PolarBase.$$p[4]:
                    this.qm(false);
                    this.ph();
                    break;
                case "TrendLineType":
                    this.ph();
                    break;
                case PolarBase.$$p[8]:
                    this.xv = this.x4();
                    this.qm(false);
                    break;
                case PolarBase.$$p[7]:
                    this.xu = this.x3();
                    this.qm(false);
                    break;
                case PolarBase.$$p[9]:
                    this.xg = this.xh();
                    break;
            }
        }
        get xg() {
            return this.xf;
        }
        set xg(a) {
            let b = this.xf;
            this.xf = a;
            if (b != this.xf) {
                this.raisePropertyChanged("ActualItemSearchMode", enumGetBox(ScatterItemSearchMode_$type, b), enumGetBox(ScatterItemSearchMode_$type, this.xf));
            }
        }
        xh() {
            if (this.xi != 0) {
                return this.xi;
            }
            return this.x2 ? 4 : 1;
        }
        get_x2() {
            return false;
        }
        get x2() {
            return this.get_x2();
        }
        x4() {
            return this.x1;
        }
        x3() {
            return this.x0;
        }
        xx(a) {
            if (typeCast(NumericRadiusAxis.$, a) !== null) {
                return true;
            }
            return false;
        }
        xw(a) {
            if (typeCast(NumericAngleAxis.$, a) !== null) {
                return true;
            }
            return false;
        }
        n7(a, b) {
            super.n7(a, b);
            let c = b;
            if (a) {
                c.cz.clear();
            }
            c.cy.g$d();
        }
        wz(a, b) {
            let c = a.top - 10;
            let d = a.bottom + 10;
            let e = a.left - 10;
            let f = a.right + 10;
            let g = ((() => {
                let $ret = new Clipper(1, e, d, f, c, false);
                $ret.i = b;
                return $ret;
            })());
            return g;
        }
        ze(a, b, c, d) {
            a.g = new Dictionary$2(Base.$, OwnedPoint.$, 1, b);
            let e = this.dd;
            for (let f = 0; f < b; f++) {
                let g = a.w._inner[f];
                if (!isInfinity(g.x) && !isInfinity(g.y)) {
                    let h = { $type: Point_$type, x: this.xs.item(f), y: this.xt.item(f) };
                    let i = { $type: Point_$type, x: g.x, y: g.y };
                    a.g.addItem(e.item(f), ((() => {
                        let $ret = new OwnedPoint();
                        $ret.a = e.item(f);
                        $ret.b = h;
                        $ret.c = i;
                        return $ret;
                    })()));
                }
            }
        }
        zm(a, b) {
            let c = b.by;
            let d = b.bx;
            a.j.clear();
            a.n.clear();
            let e = Math.min(this.xs != null ? this.xs.count : 0, this.xt != null ? this.xt.count : 0);
            if (e < 1) {
                return;
            }
            this.w5 = new PolarAxisInfoCache(this.w2, this.w3, this.dd);
            this.w7 = a;
            this.aam = d;
            this.aan = c;
            b.cw.l(a.j, this.yi, c, d, this.hu);
            if (e <= this.yi) {
                this.ze(a, e, c, d);
            }
            let f = this.wz(d, a.n);
            let g = Math.min(this.w2.lx, this.w2.lw);
            let h = Math.max(this.w2.lw, this.w2.lx);
            b.cy.i = this.x8;
            b.cy.h = 0;
            b.cy.k = this.w3.no;
            b.cy.j = this.w3.nn;
            b.cy.l = (i, j) => this.w4.c(i, j, c, d, Math.cos);
            b.cy.m = (i, j) => this.w4.d(i, j, c, d, Math.sin);
            let i = new List$1(Number_$type, 0);
            for (let j = 0; j < this.xs.count; j++) {
                if (this.xs.item(j) >= g && this.xs.item(j) <= h) {
                    i.add(this.xs.item(j));
                }
            }
            let k = this.xt;
            if (i.count != this.xs.count) {
                k = new List$1(Number_$type, 0);
                for (let l = 0; l < this.xs.count; l++) {
                    if (this.xs.item(l) >= g && this.xs.item(l) <= h) {
                        k.add(this.xt.item(l));
                    }
                }
            }
            b.cy.n(a.n, this.xk, i, k, this.yj, runOn(this.w2, this.w2.getScaledAngle), runOn(this.w3, this.w3.nu), ((() => {
                let $ret = new TrendResolutionParams();
                $ret.d = this.hu;
                $ret.h = d;
                $ret.i = c;
                return $ret;
            })()), f, g, h);
        }
        get_ez() {
            return true;
        }
        xm(a, b, c) {
            return null;
        }
        xn(a, b, c) {
            let d = this.xa();
            let e = this.w6.b1(this.up(b));
            let f = -1;
            if (e == null) {
                if (a != null) {
                    f = this.dd.indexOf(a);
                }
                else {
                    return null;
                }
            }
            else {
                f = e.ak;
            }
            if (f == -1) {
                return null;
            }
            let g = new HighlightingInfo();
            g.i = this;
            g.g = f;
            g.f = f;
            g.c = false;
            g.d = true;
            if (c != null && c.g == g.g && c.f == g.f) {
                return c;
            }
            return g;
        }
        xl(a, b, c) {
            let d = new HighlightingInfo();
            d.i = this;
            d.g = 0;
            d.f = this.dd.count - 1;
            d.c = true;
            if (c != null && c.g == d.g && c.f == d.f) {
                return c;
            }
            return d;
        }
        c6(a, b, c) {
            if (this.d1 && this.fk(this.bo) && !c) {
                let d = this.xm(a, b, this.xo);
                this.xo = d;
                return d;
            }
            else {
                let e = this.xl(a, b, this.xo);
                this.xo = e;
                return e;
            }
        }
        c7(a, b, c) {
            if (this.fk(this.bo) && !c) {
                let d = this.xn(a, b, this.xp);
                this.xp = d;
                return d;
            }
            else {
                let e = this.xl(a, b, this.xp);
                e.d = true;
                this.xp = e;
                return e;
            }
        }
        x6() {
            return (this.assigningPolarStyle != null && this.xv) || (this.bo != 1);
        }
        x5() {
            return (this.assigningPolarMarkerStyle != null && this.xu) || (this.bo != 1) || (this.cf != 1) || (this.ce != 1);
        }
        zq(a, b) {
            this.pt();
            let c = b.by;
            let d = b.bx;
            let e = this.getEffectiveViewport1(b);
            let f = this.u1(b);
            this.w5 = new PolarAxisInfoCache(this.w2, this.w3, this.dd);
            if (this.vr()) {
                b.cw.j(a.j, this.vt);
                if (this.x5()) {
                    this.zg(b, a);
                }
            }
            b.cp();
            let g = this.wz(d, b.cy.g$j.an);
            b.cy.g$h(a.n, g);
            this.zd(d, c, e, f, b);
        }
        ww(a, b) {
            return this.wx(a, b);
        }
        wx(a, b) {
            if (b < a || a < 0 || a > this.xs.count || b < 0 || b > this.xs.count) {
                return null;
            }
            let c = new Array((b - a) + 1);
            for (let d = a; d <= b; d++) {
                let e = d;
                c[d - a] = this.dd.item(d);
            }
            return c;
        }
        zg(a, b) {
            a.b6 = true;
            this.xe.ay(this, this.x5(), runOn(this, this.ww));
            let c = this.xe.d;
            let d = c != null;
            let e = this.getEffectiveViewport1(a);
            let f = this.dd == null ? 0 : this.dd.count;
            this.w6.ci((g) => {
                if (g._visibility == 0) {
                    let h = g.ak;
                    let i = g.content;
                    if (i == null) {
                        i = new DataContext();
                        g.content = i;
                    }
                    if (d) {
                        this.zk(h, f, a.q);
                    }
                    this.xe.ac(g, i);
                }
            });
        }
        zl(a, b, c) {
            let d = this.bo != 1;
            let e = this.cf != 1;
            let f = this.ce != 1;
            this.xe.a0(this.xe.b, a, b, false);
            this.xe.ab(this.hs);
            let g = this.xe.ax;
            let h = null;
            let i = null;
            let j = null;
            let k = this.dd;
            if (d && this.c1 != null) {
                h = this.c1.dj.getHighlightingInfo(this, k, g.z, g.y, false);
                g.c = h;
            }
            if (e && this.c1 != null) {
                i = this.c1.dk.getHighlightingInfo(this, k, g.z, g.y, false);
                if (i == null && this.be != null) {
                    i = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, g.z, g.y, false);
                }
                g.d = i;
            }
            if (f && this.c1 != null) {
                j = this.c1.di.getHighlightingInfo(this, k, g.z, g.y, false);
                g.b = j;
            }
            g.h = c;
            this.zo(g);
            this.xe.z(this, h, i, j, c, d, e, f, a < 0);
        }
        zk(a, b, c) {
            let d = this.bo != 1;
            let e = this.cf != 1;
            let f = this.ce != 1;
            this.xe.a0(this.xe.d, a, b, true);
            this.xe.aa(this.hs);
            let g = this.xe.aw;
            let h = null;
            let i = null;
            let j = null;
            let k = this.dd;
            let l = null;
            let m = null;
            let n = null;
            if (d && this.c1 != null) {
                h = this.c1.dj.getHighlightingInfo(this, k, g.z, g.y, true);
                if (this.c1.dj.isCrossContextHighlight(this)) {
                    l = this.c1.dj.getHighlightingInfo(this, k, g.z, g.y, true);
                }
                g.c = h;
            }
            if (e && this.c1 != null) {
                i = this.c1.dk.getHighlightingInfo(this, k, g.z, g.y, true);
                if (i == null && this.be != null) {
                    i = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, g.z, g.y, true);
                }
                if (this.c1.dk.isCrossContextHighlight(this)) {
                    m = this.c1.dk.getHighlightingInfo(this, k, g.z, g.y, true);
                }
                g.d = i;
            }
            if (f && this.c1 != null) {
                j = this.c1.di.getHighlightingInfo(this, k, g.z, g.y, true);
                if (this.c1.di.isCrossContextHighlight(this)) {
                    n = this.c1.di.getHighlightingInfo(this, k, g.z, g.y, true);
                }
                g.d = i;
            }
            g.h = c;
            this.zn(g);
            this.xe.y(this, h, i, j, c, d, e, f, g.v, this.c1.dj.totalHighWaterMark, g.x, this.c1.dk.totalHighWaterMark, g.t, this.c1.di.totalHighWaterMark);
        }
        zo(a) {
            if (this.assigningPolarStyle != null && this.xv) {
                this.assigningPolarStyle(this, a);
            }
        }
        zn(a) {
            if (this.assigningPolarMarkerStyle != null && this.xu) {
                this.assigningPolarMarkerStyle(this, a);
            }
        }
        zd(a, b, c, d, e) {
            e.c1(a, b, c, d);
        }
        ra() {
            super.ra();
            if (this.index < 0) {
                return;
            }
            this.w6.c4();
        }
        qo(a, b) {
            super.qo(a, b);
            if (!this.gj) {
                this.cl.a4(b);
                return;
            }
            this.cl.a4(b);
            if (this.dt(this.ck)) {
                return;
            }
            let c = this.ck;
            if (!this.gc) {
                this.xc = new PolarFrame();
                this.zm(this.xc, c);
            }
            this.gc = false;
            this.zq(this.xc, c);
            this.gj = false;
        }
        ql(a, b, c, d, e) {
            super.ql(a, b, c, d, e);
            let f = this.a2.a$i.item(d);
            let g = f;
            f.a3(c);
            if (this.dt(g)) {
                return;
            }
            if (this.w8 == null) {
                this.w8 = new PolarFrame();
            }
            this.zm(this.w8, g);
            this.zq(this.w8, g);
        }
        zp(a, b) {
            let c = new List$1(Base.$, 0);
            for (let d of fromEnum(b.c)) {
                if (!a.containsKey(d)) {
                    c.add1(d);
                }
            }
            for (let e of fromEnum(c)) {
                b.h(e);
            }
        }
        wv(a, b, c) {
            this.zh();
            return this.w7.w.toArray();
        }
        ya(a) {
            let b = new List$1(Number_$type, 0);
            let c = this.dd;
            for (let d of fromEnum(this.w6.cz.c)) {
                b.add(c.indexOf(d));
            }
            return b;
        }
        aak(a) {
            return { $type: Point_$type, x: this.xs.item(a), y: this.xt.item(a) };
        }
        ow(a) {
            super.ow(a);
            this.a4.exportTrendlineData(this, a, this.w6.cy.g$j);
        }
        getDataLegendSeriesContextAt(a, b) {
            let c = { $type: Point_$type, x: a, y: b };
            let d = this.j2(c);
            let e = d == null ? NaN : this.ic(d, "RadiusMemberPath");
            let f = d == null ? NaN : this.ic(d, "AngleMemberPath");
            let g = new DataLegendSeriesValueInfo();
            g.l = e;
            g.a = 11;
            g.r = this.za != null ? this.za : "Radius";
            g.q = "Radius";
            g.s = this.y6 != null ? this.y6 : "R:";
            g.t = this.y8 != null ? this.y8 : "";
            let h = new DataLegendSeriesValueInfo();
            h.l = f;
            h.a = 10;
            h.r = this.ys != null ? this.ys : "Angle";
            h.q = "Angle";
            h.s = this.yo != null ? this.yo : "A:";
            h.t = this.yq != null ? this.yq : "";
            let i = new DataLegendSeriesContext();
            i.e = ((() => {
                let $ret = new List$1(DataLegendSeriesValueInfo.$, 0);
                $ret.add(g);
                $ret.add(h);
                return $ret;
            })());
            i.h = this.lh();
            return i;
        }
    }
    PolarBase.$t = /*@__PURE__*/ markType(PolarBase, 'PolarBase', MarkerSeries.$);
    PolarBase.zr = /*@__PURE__*/ DependencyProperty.i("ActualTrendLineBrush", Brush.$, PolarBase.$, /*@__PURE__*/ new PropertyMetadata(2, null, (a, b) => a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue)));
    PolarBase.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, PolarBase, 'raisePropertyChanged', ['AngleAxis:w2:zs', [NumericAngleAxis.$, null], 'AngleMemberAsLegendLabel:yo:zt', [2, null], 'AngleMemberAsLegendUnit:yq:zu', [2, null], 'AngleMemberPath:ys:zv', [2], 'ClipSeriesToBounds:xy:zw', [0, false], 'HighlightedAngleMemberPath:yv:zx', [2, null], 'HighlightedRadiusMemberPath:yx:zy', [2, null], 'IsCustomPolarMarkerStyleAllowed:x0:zz', [0, false], 'IsCustomPolarStyleAllowed:x1:z0', [0, false], 'ItemSearchMode:xi:z1', [ScatterItemSearchMode_$type, /*@__PURE__*/ enumGetBox(ScatterItemSearchMode_$type, 0)], 'ItemSearchThreshold:yh:z2', [1, 10000], 'MaximumMarkers:yi:z3', [1, 400], 'RadiusAxis:w3:z4', [NumericRadiusAxis.$, null], 'RadiusMemberAsLegendLabel:y6:z5', [2, null], 'RadiusMemberAsLegendUnit:y8:z6', [2, null], 'RadiusMemberPath:za:z7', [2], 'UseCartesianInterpolation:x8:aaf', [0, true], 'TrendLineType:xk:aad', [TrendLineType_$type, /*@__PURE__*/ enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness:yg:aac', [1, 1.5], 'TrendLinePeriod:yj:aab', [1, 7], 'TrendLineZIndex:yk:aae', [1, 1], 'TrendLineBrush:aah:z8', [Brush.$, null], 'TrendLineDashArray:aai:z9', [DoubleCollection.$], 'TrendLineDashCap:aaj:aaa', [PenLineCap_$type, /*@__PURE__*/ enumGetBox(PenLineCap_$type, 0)]]);
    return PolarBase;
})();
/**
 * @hidden
 */
export let PolarSeriesRenderManager = /*@__PURE__*/ (() => {
    class PolarSeriesRenderManager extends SeriesRenderManager {
        constructor() {
            super(...arguments);
            this.aw = null;
            this.ax = null;
        }
        c() {
            this.aw = new AssigningPolarMarkerStyleEventArgs();
            return this.aw;
        }
        a() {
            this.ax = new AssigningPolarStyleEventArgs();
            return this.ax;
        }
        ay(a, b, c) {
            this.w(a, b, c);
        }
        az(a, b, c) {
            this.x(a, b, c);
        }
        a0(a, b, c, d) {
            if (b == -1) {
                a.e = false;
                a.z = 0;
                a.y = c - 1;
            }
            else {
                if (d) {
                    a.z = b;
                    a.y = b;
                }
                else {
                    a.e = false;
                    a.z = b;
                    a.y = b;
                }
            }
        }
    }
    PolarSeriesRenderManager.$t = /*@__PURE__*/ markType(PolarSeriesRenderManager, 'PolarSeriesRenderManager', SeriesRenderManager.$);
    return PolarSeriesRenderManager;
})();
/**
 * @hidden
 */
export let PolarBaseView = /*@__PURE__*/ (() => {
    class PolarBaseView extends MarkerSeriesView {
        constructor(a) {
            super(a);
            this.cx = null;
            this.cw = null;
            this.cy = null;
            this.cz = null;
            this.cx = a;
            this.cz = new HashPool$2(Base.$, Marker.$);
            this.ck(this.cz);
            this.cy = new PolarTrendLineManager();
        }
        au() {
            super.au();
            this.cw = this.cv();
            if (!this.q) {
                this.cx.yi = 1000;
                this.b4.vp = Defaults.e;
            }
        }
        c2(a) {
            this.cz.g(a);
        }
        cv() {
            let a = new NumericMarkerManager(0, (b) => this.cz.item(b), (b) => this.cx.w5.c.item(b), runOn(this, this.c3), runOn(this, this.cu), runOn(this, this.c0));
            a.n = true;
            a.p = runOn(this.cx, this.cx.aak);
            return a;
        }
        c3(a) {
            this.cx.zp(a, this.cz);
        }
        cu() {
            return this.cx.wv(this.cz, this.by, this.bx);
        }
        c0() {
            return this.cx.ya(this.cz);
        }
        c1(a, b, c, d) {
            if (this.cx.xy) {
                let e = new GeometryGroup();
                this.cx.w3.n2(e, a, b, c, d);
            }
            else {
            }
        }
        c4() {
            if (this.cx.aah != null) {
                this.cx.aag = this.cx.aah;
            }
            else {
                this.cx.aag = this.cx.tw;
            }
        }
        ci(a) {
            this.cz.f(a);
        }
        a7(a, b) {
            if (a.d) {
                if (this.cx.xk != 0 && !b) {
                    let c = this.cy.g$j;
                    c.ad = this.cx.yg;
                    c._stroke = this.cx.aag;
                    c.aj = this.cx.aaj;
                    c.ai = this.cx.aai;
                    a.v(c);
                }
            }
            super.a7(a, b);
        }
        c5() {
            return Rect.empty;
        }
        getDefaultTooltipTemplate() {
            let a = "<div class='ui-chart-default-tooltip-content'><span>" + "${item." + this.cx.ys + "}" + "</span><br/><span";
            let b = this.e.a2.a$t(this.e);
            if (!stringIsNullOrEmpty(b)) {
                a += " style='color:" + b + "'";
            }
            a += ">" + this.cx.title + ": </span><span class='ui-priority-primary'>" + "${item." + this.cx.za + "}</span></div>";
            return a;
        }
    }
    PolarBaseView.$t = /*@__PURE__*/ markType(PolarBaseView, 'PolarBaseView', MarkerSeriesView.$);
    return PolarBaseView;
})();
