/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ScatterBaseView } from "./ScatterBaseView";
import { Path } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { markType } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
export let ScatterLineSeriesView = /*@__PURE__*/ (() => {
    class ScatterLineSeriesView extends ScatterBaseView {
        constructor(a) {
            super(a);
            this.dj = new Path();
            this.di = new Path();
        }
        au() {
            super.au();
            if (!this.q) {
                this.b4.vp = Defaults.e;
            }
        }
        bd() {
            super.bd();
        }
        be() {
            super.be();
            let a = this.br();
            this.di.an = this.dj.an;
            this.di._stroke = a;
            this.di.ad = this.e.hv + 3;
        }
        a8(a, b) {
            super.a8(a, b);
            if (a.d) {
                if (b) {
                    a.t(this.di);
                }
                else {
                    a.t(this.dj);
                }
            }
        }
        c7(a) {
            super.c7(a);
            this.dj.an = null;
            this.di.an = null;
        }
        an(a) {
            super.an(a);
            this.e.a4.exportPathData(a, this.dj, "shape", ["Main"]);
        }
        af() {
            let a = new Color();
            a.colorString = "rgba(95,95,95,0.5)";
            this.e.uj = a;
            this.e.i2 = 3;
            this.e.i3 = 1;
            this.e.i4 = 4;
            this.e.gu = false;
        }
    }
    ScatterLineSeriesView.$t = /*@__PURE__*/ markType(ScatterLineSeriesView, 'ScatterLineSeriesView', ScatterBaseView.$);
    return ScatterLineSeriesView;
})();
