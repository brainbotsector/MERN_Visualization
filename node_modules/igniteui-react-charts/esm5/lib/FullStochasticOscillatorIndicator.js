/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { FullStochasticOscillatorIndicatorStrategy } from "./FullStochasticOscillatorIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
/**
 * @hidden
 */
var FullStochasticOscillatorIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FullStochasticOscillatorIndicator, _super);
    function FullStochasticOscillatorIndicator() {
        var _this = _super.call(this) || this;
        _this.trendLineBrush = ((function () {
            var $ret = new Brush();
            $ret.fill = "#565656";
            return $ret;
        })());
        _this.trendLineType = 10;
        _this.trendLinePeriod = 3;
        return _this;
    }
    FullStochasticOscillatorIndicator.prototype.bb = function () {
        return new FullStochasticOscillatorIndicator();
    };
    FullStochasticOscillatorIndicator.prototype.get_aaa = function () {
        return new FullStochasticOscillatorIndicatorStrategy();
    };
    Object.defineProperty(FullStochasticOscillatorIndicator.prototype, "aaa", {
        get: function () {
            return this.get_aaa();
        },
        enumerable: false,
        configurable: true
    });
    FullStochasticOscillatorIndicator.prototype.get_aan = function () {
        return FullStochasticOscillatorIndicator.$;
    };
    Object.defineProperty(FullStochasticOscillatorIndicator.prototype, "aan", {
        get: function () {
            return this.get_aan();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FullStochasticOscillatorIndicator.prototype, "aav", {
        get: function () {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.aa0));
        },
        set: function (a) {
            this.h(FullStochasticOscillatorIndicator.aa0, a);
        },
        enumerable: false,
        configurable: true
    });
    FullStochasticOscillatorIndicator.prototype.aag = function () {
        return this.aav;
    };
    FullStochasticOscillatorIndicator.prototype.aap = function (a) {
        this.aav = a;
    };
    Object.defineProperty(FullStochasticOscillatorIndicator.prototype, "smoothingPeriod", {
        get: function () {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.aa1));
        },
        set: function (a) {
            this.h(FullStochasticOscillatorIndicator.aa1, a);
        },
        enumerable: false,
        configurable: true
    });
    FullStochasticOscillatorIndicator.prototype.aai = function () {
        return this.smoothingPeriod;
    };
    Object.defineProperty(FullStochasticOscillatorIndicator.prototype, "aax", {
        get: function () {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.aa2));
        },
        set: function (a) {
            this.h(FullStochasticOscillatorIndicator.aa2, a);
        },
        enumerable: false,
        configurable: true
    });
    FullStochasticOscillatorIndicator.prototype.aaf = function () {
        return this.aax;
    };
    FullStochasticOscillatorIndicator.prototype.zq = function () {
        return this.aax;
    };
    FullStochasticOscillatorIndicator.$t = markType(FullStochasticOscillatorIndicator, 'FullStochasticOscillatorIndicator', StrategyBasedIndicator.$);
    FullStochasticOscillatorIndicator.aa0 = StrategyBasedIndicator.aas(14, FullStochasticOscillatorIndicator.$);
    FullStochasticOscillatorIndicator.aa1 = StrategyBasedIndicator.aat(3, FullStochasticOscillatorIndicator.$, "SmoothingPeriod");
    FullStochasticOscillatorIndicator.aa2 = StrategyBasedIndicator.aat(3, FullStochasticOscillatorIndicator.$, "TriggerPeriod");
    return FullStochasticOscillatorIndicator;
}(StrategyBasedIndicator));
export { FullStochasticOscillatorIndicator };
