/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-react-core";
import { IEnumerable_$type, runOn, delegateCombine, delegateRemove, typeCast, Point_$type, markType, markDep } from "igniteui-react-core";
import { NumericXAxis } from "./NumericXAxis";
import { NumericYAxis } from "./NumericYAxis";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { Triangulator } from "igniteui-react-core";
import { TriangulationStatusEventArgs } from "igniteui-react-core";
import { FastItemsSource } from "igniteui-react-core";
import { SeriesViewer } from "./SeriesViewer";
import { Axis } from "./Axis";
import { AxisRange } from "./AxisRange";
import { DataLegendSeriesValueInfo } from "igniteui-react-core";
import { DataLegendSeriesContext } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
var ScatterTriangulationSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterTriangulationSeries, _super);
    function ScatterTriangulationSeries() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.vk = null;
        _this.vl = null;
        _this.vt = false;
        _this.vg = null;
        _this.triangulationStatusChanged = null;
        _this.vw = null;
        _this.vh = null;
        _this.vi = null;
        _this.vj = null;
        return _this;
    }
    ScatterTriangulationSeries.prototype.n4 = function () {
        _super.prototype.n4.call(this);
        this.vd = null;
        this.ve = null;
    };
    ScatterTriangulationSeries.prototype.j5 = function (a, b) {
        var c = this.mh(b);
        if (c == ScatterTriangulationSeries.$$p[8]) {
            return this.j6(a, b, this.wf);
        }
        if (c == ScatterTriangulationSeries.$$p[12]) {
            return this.j6(a, b, this.wn);
        }
        return _super.prototype.j5.call(this, a, b);
    };
    ScatterTriangulationSeries.prototype.li = function (a) {
        var b = this.mh(a);
        if (b == ScatterTriangulationSeries.$$p[8]) {
            return this.wf;
        }
        if (b == ScatterTriangulationSeries.$$p[12]) {
            return this.wn;
        }
        return _super.prototype.li.call(this, a);
    };
    Object.defineProperty(ScatterTriangulationSeries.prototype, "vq", {
        get: function () {
            return this.vk;
        },
        set: function (a) {
            var b = this.vq != a;
            if (b) {
                var c = this.vq;
                this.vk = a;
                this.raisePropertyChanged("XColumn", c, this.vq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterTriangulationSeries.prototype, "vr", {
        get: function () {
            return this.vl;
        },
        set: function (a) {
            var b = this.vr != a;
            if (b) {
                var c = this.vr;
                this.vl = a;
                this.raisePropertyChanged("YColumn", c, this.vr);
            }
        },
        enumerable: false,
        configurable: true
    });
    ScatterTriangulationSeries.prototype.qn = function (a) {
        var b = this.dd != null && this.vs == null && this.vw == null && this.vq != null && this.vr != null && this.vq.count >= 3 && this.vr.count >= 3 && !this.vt;
        if (b) {
            this.wr();
            this.vt = true;
        }
    };
    ScatterTriangulationSeries.prototype.wr = function () {
        this.vg = new Triangulator(this.dd.count, this.vq, this.vr);
        var a = this.vg;
        a.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.ws));
        this.vg.y();
    };
    ScatterTriangulationSeries.prototype.wp = function () {
        if (this.vg == null) {
            return;
        }
        this.vg.r();
        var a = this.vg;
        a.triangulationStatusChanged = delegateRemove(a.triangulationStatusChanged, runOn(this, this.ws));
        this.vg = null;
    };
    ScatterTriangulationSeries.prototype.ws = function (a, b) {
        var _this = this;
        if (this.triangulationStatusChanged != null) {
            this.triangulationStatusChanged(this, new TriangulationStatusEventArgs(b.currentStatus));
        }
        if (b.currentStatus >= 100) {
            if (this.vg == null) {
                return;
            }
            var c = this.vg;
            c.triangulationStatusChanged = delegateRemove(c.triangulationStatusChanged, runOn(this, this.ws));
            this.vw = this.vg.n();
            this.vg = null;
            var d = ((function () {
                var $ret = new FastItemsSource();
                $ret.e = _this.vw;
                return $ret;
            })());
            this.vn = this.vm(d, "v1");
            this.vo = this.vm(d, "v2");
            this.vp = this.vm(d, "v3");
            this.qm(false);
        }
    };
    ScatterTriangulationSeries.prototype.vm = function (a, b) {
        if (b == null) {
            return a.registerColumnInt(null, null, false);
        }
        var c = null;
        var d = SeriesViewer.cu(b, this.coercionMethods);
        c = d.a;
        return a.registerColumnInt(b, c, this.expectFunctions);
    };
    ScatterTriangulationSeries.prototype.p5 = function (a, b, c, d) {
        var _this = this;
        _super.prototype.p5.call(this, a, b, c, d);
        switch (b) {
            case ScatterTriangulationSeries.$$p[6]:
            case ScatterTriangulationSeries.$$p[10]:
            case ScatterTriangulationSeries.$$p[7]:
            case ScatterTriangulationSeries.$$p[11]:
                this.pb();
                break;
            case "FastItemsSource":
                var e = typeCast(IFastItemsSource_$type, c);
                if (e != null) {
                    e.deregisterColumn(this.vq);
                    e.deregisterColumn(this.vr);
                    this.vq = null;
                    this.vr = null;
                }
                this.wq();
                var f = typeCast(IFastItemsSource_$type, d);
                if (f != null) {
                    this.vq = this.da(this.wf);
                    this.vr = this.da(this.wn);
                }
                this.qm(this.f0 && c != null);
                break;
            case ScatterTriangulationSeries.$$p[8]:
                if (this.dd != null) {
                    this.dd.deregisterColumn(this.vq);
                    this.vq = this.da(this.wf);
                }
                this.wq();
                this.qm(false);
                this.ph();
                break;
            case ScatterTriangulationSeries.$$p[12]:
                if (this.dd != null) {
                    this.dd.deregisterColumn(this.vr);
                    this.vr = this.da(this.wn);
                }
                this.wq();
                this.qm(false);
                this.ph();
                break;
            case ScatterTriangulationSeries.$$p[5]:
                if (c != null) {
                    (typeCast(Axis.$, c)).b0(this);
                }
                if (d != null) {
                    (typeCast(Axis.$, d)).ct(this);
                }
                if ((this.vd != null && !this.vd.c1()) || (d == null && c != null)) {
                    this.qm(false);
                }
                this.ph();
                break;
            case ScatterTriangulationSeries.$$p[9]:
                if (c != null) {
                    (typeCast(Axis.$, c)).b0(this);
                }
                if (d != null) {
                    (typeCast(Axis.$, d)).ct(this);
                }
                if ((this.ve != null && !this.ve.c1()) || (d == null && c != null)) {
                    this.qm(false);
                }
                this.ph();
                break;
            case ScatterTriangulationSeries.$$p[4]:
                if (this.trianglesSource != null) {
                    this.wp();
                    this.vs = ((function () {
                        var $ret = new FastItemsSource();
                        $ret.e = _this.trianglesSource;
                        return $ret;
                    })());
                }
                else {
                    this.vs = null;
                }
                break;
            case ScatterTriangulationSeries.$$p[0]:
                var g = typeCast(IFastItemsSource_$type, c);
                if (g != null) {
                    g.deregisterColumn(this.vn);
                    g.deregisterColumn(this.vo);
                    g.deregisterColumn(this.vp);
                    this.vn = null;
                    this.vo = null;
                    this.vp = null;
                }
                var h = typeCast(IFastItemsSource_$type, d);
                if (h != null) {
                    this.vn = this.vm(h, this.v3);
                    this.vo = this.vm(h, this.v5);
                    this.vp = this.vm(h, this.v7);
                }
                this.qm(false);
                this.ph();
                break;
            case ScatterTriangulationSeries.$$p[1]:
                if (this.vs != null) {
                    this.vs.deregisterColumn(this.vn);
                    this.vn = this.vm(this.vs, this.v3);
                }
                this.qm(false);
                this.ph();
                break;
            case ScatterTriangulationSeries.$$p[2]:
                if (this.vs != null) {
                    this.vs.deregisterColumn(this.vo);
                    this.vo = this.vm(this.vs, this.v5);
                }
                this.qm(false);
                this.ph();
                break;
            case ScatterTriangulationSeries.$$p[3]:
                if (this.vs != null) {
                    this.vs.deregisterColumn(this.vp);
                    this.vp = this.vm(this.vs, this.v7);
                }
                this.qm(false);
                this.ph();
                break;
            case "XColumn":
                if (this.vd != null) {
                    this.vd.c1();
                }
                break;
            case "YColumn":
                if (this.ve != null) {
                    this.ve.c1();
                }
                break;
        }
    };
    ScatterTriangulationSeries.prototype.vv = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ScatterTriangulationSeries.prototype.vu = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ScatterTriangulationSeries.prototype.gw = function (a, b, c) {
        return _super.prototype.gw.call(this, a, b, c) && this.dd != null && this.vd != null && this.ve != null && this.vd.bi != null && this.ve.bi != null && a.width > 0 && a.height > 0 && this.vn != null && this.vn.count > 0 && this.vo != null && this.vo.count > 0 && this.vp != null && this.vp.count > 0 && this.vq != null && this.vq.count > 0 && this.vr != null && this.vr.count > 0;
    };
    ScatterTriangulationSeries.prototype.wq = function () {
        if (this.trianglesSource == null) {
            this.vw = null;
            this.vn = null;
            this.vo = null;
            this.vp = null;
            this.vt = false;
        }
    };
    ScatterTriangulationSeries.prototype.o6 = function () {
        _super.prototype.o6.call(this);
        if (this.vd != null) {
            this.vd.h7();
        }
        if (this.ve != null) {
            this.ve.h7();
        }
    };
    ScatterTriangulationSeries.prototype.oc = function (a, b, c, d) {
        _super.prototype.oc.call(this, a, b, c, d);
        this.wq();
        this.qm(false);
    };
    ScatterTriangulationSeries.prototype.aq = function (a) {
        if (a != null && a == this.vd && this.vq != null) {
            return new AxisRange(this.vq.minimum, this.vq.maximum);
        }
        if (a != null && a == this.ve && this.vr != null) {
            return new AxisRange(this.vr.minimum, this.vr.maximum);
        }
        return null;
    };
    ScatterTriangulationSeries.prototype.rk = function (a, b) {
        this.qm(false);
    };
    ScatterTriangulationSeries.prototype.rj = function (a, b) {
        this.qm(false);
    };
    Object.defineProperty(ScatterTriangulationSeries.prototype, "vn", {
        get: function () {
            return this.vh;
        },
        set: function (a) {
            var b = this.vn != a;
            if (b) {
                var c = this.vn;
                this.vh = a;
                this.raisePropertyChanged("TriangleVertexColumn1", c, this.vn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterTriangulationSeries.prototype, "vo", {
        get: function () {
            return this.vi;
        },
        set: function (a) {
            var b = this.vo != a;
            if (b) {
                var c = this.vo;
                this.vi = a;
                this.raisePropertyChanged("TriangleVertexColumn2", c, this.vo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterTriangulationSeries.prototype, "vp", {
        get: function () {
            return this.vj;
        },
        set: function (a) {
            var b = this.vp != a;
            if (b) {
                var c = this.vp;
                this.vj = a;
                this.raisePropertyChanged("TriangleVertexColumn3", c, this.vp);
            }
        },
        enumerable: false,
        configurable: true
    });
    ScatterTriangulationSeries.prototype.get_fi = function () {
        return true;
    };
    ScatterTriangulationSeries.prototype.get_e6 = function () {
        return true;
    };
    ScatterTriangulationSeries.prototype.getDataLegendSeriesContextAt = function (a, b) {
        var c = { $type: Point_$type, x: a, y: b };
        var d = this.j2(c);
        var e = d == null ? NaN : this.ic(d, "XMemberPath");
        var f = d == null ? NaN : this.ic(d, "YMemberPath");
        var g = new DataLegendSeriesValueInfo();
        g.l = e;
        g.a = 13;
        g.q = "X";
        g.r = this.wf != null ? this.wf : "X";
        g.s = this.wb != null ? this.wb : "X:";
        g.t = this.wd != null ? this.wd : "";
        var h = new DataLegendSeriesValueInfo();
        h.l = f;
        h.a = 14;
        h.q = "Y";
        h.r = this.wn != null ? this.wn : "Y";
        h.s = this.wj != null ? this.wj : "Y:";
        h.t = this.wl != null ? this.wl : "";
        var i = new DataLegendSeriesContext();
        i.e = ((function () {
            var $ret = new List$1(DataLegendSeriesValueInfo.$, 0);
            $ret.add(g);
            $ret.add(h);
            return $ret;
        })());
        i.h = this.lh();
        return i;
    };
    ScatterTriangulationSeries.$t = markType(ScatterTriangulationSeries, 'ScatterTriangulationSeries', Series.$);
    ScatterTriangulationSeries.$$p = markDep(DependencyProperty, PropertyMetadata, ScatterTriangulationSeries, 'raisePropertyChanged', ['FastTrianglesSource:vs:wt', [IFastItemsSource_$type, null], 'TriangleVertexMemberPath1:v3:wv', [2, null], 'TriangleVertexMemberPath2:v5:ww', [2, null], 'TriangleVertexMemberPath3:v7:wx', [2, null], 'TrianglesSource::wu', [IEnumerable_$type, null], 'XAxis:vd:wy', [NumericXAxis.$, null], 'XMemberAsLegendLabel:wb:wz', [2, null], 'XMemberAsLegendUnit:wd:w0', [2, null], 'XMemberPath:wf:w1', [2, null], 'YAxis:ve:w2', [NumericYAxis.$, null], 'YMemberAsLegendLabel:wj:w3', [2, null], 'YMemberAsLegendUnit:wl:w4', [2, null], 'YMemberPath:wn:w5', [2, null]]);
    return ScatterTriangulationSeries;
}(Series));
export { ScatterTriangulationSeries };
