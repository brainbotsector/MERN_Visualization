/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, typeCast, markType, Array_$type, Number_$type, Point_$type, enumGetBox, runOn, delegateCombine, fromEnum, markDep } from "igniteui-react-core";
import { IBucketizer_$type } from "./IBucketizer";
import { ArgumentNullException } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { ISortingAxis_$type } from "./ISortingAxis";
import { ScalerParams } from "./ScalerParams";
import { Series } from "./Series";
import { truncate, intDivide, isNaN_, isInfinity } from "igniteui-react-core";
import { FramePreparer } from "./FramePreparer";
import { IIsCategoryBased_$type } from "./IIsCategoryBased";
import { List$1 } from "igniteui-react-core";
import { ISupportsMarkers_$type } from "./ISupportsMarkers";
import { IProvidesViewport_$type } from "./IProvidesViewport";
import { ISupportsErrorBars_$type } from "./ISupportsErrorBars";
import { CategoryFrame } from "./CategoryFrame";
import { PreparationParams } from "./PreparationParams";
import { IDateTimeAxis_$type } from "./IDateTimeAxis";
import { NumericAxisBase } from "./NumericAxisBase";
import { IHasCategoryTrendline_$type } from "./IHasCategoryTrendline";
import { IHasSingleValueCategory_$type } from "./IHasSingleValueCategory";
import { DefaultCategoryTrendlineHost } from "./DefaultCategoryTrendlineHost";
import { DefaultSingleValueProvider } from "./DefaultSingleValueProvider";
import { SingleValuesHolder } from "./SingleValuesHolder";
import { MarkerSeries } from "./MarkerSeries";
import { IHasCategoryModePreference_$type } from "./IHasCategoryModePreference";
import { ICategorySeriesInteractionManager_$type } from "./ICategorySeriesInteractionManager";
import { DVContainer } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { CategoryTransitionInMode_$type } from "./CategoryTransitionInMode";
import { HighlightingInfo } from "igniteui-react-core";
import { CategoryTransitionSourceFramePreparer } from "./CategoryTransitionSourceFramePreparer";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { CategorySeriesRenderManager } from "./CategorySeriesRenderManager";
import { Pool$1 } from "igniteui-react-core";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { DoubleCollection } from "igniteui-react-core";
import { Clipper } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { round10N } from "igniteui-react-core";
/**
 * @hidden
 */
var CategoryBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryBucketCalculator, _super);
    function CategoryBucketCalculator(a) {
        var _this = _super.call(this) || this;
        _this.c = null;
        _this.e = 0;
        _this.f = 0;
        _this.d = 0;
        if (a == null) {
            throw new ArgumentNullException(0, "view");
        }
        _this.c = a;
        _this.e = -1;
        _this.d = 0;
        return _this;
    }
    CategoryBucketCalculator.prototype.getBucket = function (a) {
        return null;
    };
    CategoryBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    CategoryBucketCalculator.prototype.getErrorBucket = function (a, b) {
        return NaN;
    };
    CategoryBucketCalculator.prototype.g = function (a) {
        var b = this.c.by;
        var c = this.c.bx;
        var d = this.c.cw;
        var e = typeCast(CategoryAxisBase.$, d.fetchXAxis());
        var f = d.dd;
        if (b.isEmpty || c.isEmpty || e == null || f == null || f.count == 0) {
            this.d = 0;
            return;
        }
        var g = d.getEffectiveViewport1(this.c);
        var h = d.u1(this.c);
        var i = typeCast(ISortingAxis_$type, e);
        if (i == null || i.i$b == null) {
            var j = new ScalerParams(0, b, c, e.ch, g);
            var k = Math.floor(e.em(h.left, j));
            var l = Math.ceil(e.em(h.right, j));
            if (e.ch) {
                l = Math.ceil(e.em(h.left, j));
                k = Math.floor(e.em(h.right, j));
            }
            l = Math.min(l, e.lg - 1);
            var m = Math.floor((l - k + 1) * a / h.width);
            this.d = truncate(Math.max(1, m));
            this.e = truncate(Math.max(0, Math.floor(k / this.d) - 1));
            this.f = truncate(Math.ceil(l / this.d));
        }
        else {
            this.e = i.i$e(b, c, g, h);
            this.f = i.i$g(b, c, g, h);
            this.d = 1;
        }
    };
    CategoryBucketCalculator.prototype.getBucketInfo = function (a, b, c, d) {
        a = this.e;
        b = this.f;
        c = this.d;
        d = this.c.cw.hu;
        return {
            p0: a,
            p1: b,
            p2: c,
            p3: d
        };
    };
    CategoryBucketCalculator.prototype.cacheValues = function () {
    };
    CategoryBucketCalculator.prototype.unCacheValues = function () {
    };
    CategoryBucketCalculator.$t = markType(CategoryBucketCalculator, 'CategoryBucketCalculator', Base.$, [IBucketizer_$type]);
    return CategoryBucketCalculator;
}(Base));
export { CategoryBucketCalculator };
/**
 * @hidden
 */
var CategoryFramePreparerBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryFramePreparerBase, _super);
    function CategoryFramePreparerBase(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = [c, typeCast(ISupportsMarkers_$type, c), typeCast(IProvidesViewport_$type, c), typeCast(ISupportsErrorBars_$type, c), typeCast(IBucketizer_$type, c)];
                    {
                        var f = d[0];
                        var g = d[1];
                        var h = d[2];
                        var i = d[3];
                        var j = d[4];
                        _this = _super.call(this, 1, g, h, i) || this;
                        _this.g = null;
                        _this.h = null;
                        _this.m = false;
                        _this.o = new List$1(Array_$type, 0);
                        _this.p = new List$1(Number_$type, 0);
                        _this.n = new List$1(Number_$type, 0);
                        _this.h = f;
                        _this.g = j;
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this = _super.call(this, 1, d, e, f) || this;
                    _this.g = null;
                    _this.h = null;
                    _this.m = false;
                    _this.o = new List$1(Array_$type, 0);
                    _this.p = new List$1(Number_$type, 0);
                    _this.n = new List$1(Number_$type, 0);
                    _this.h = c;
                    _this.g = g;
                }
                break;
        }
        return _this;
    }
    CategoryFramePreparerBase.prototype.i = function (a) {
        var b = new PreparationParams();
        b.f = this.h.useHighMarkerFidelity;
        b.b = this.h.scaler;
        b.c = this.h.yScaler;
        b.d = typeCast(ISortingAxis_$type, b.b);
        b.a = typeCast(CategoryFrame.$, a);
        if (b.a == null || b.b == null || b.c == null) {
            return null;
        }
        var c;
        var d;
        var e;
        var f;
        var g = this.g.getBucketInfo(c, d, e, f);
        c = g.p0;
        d = g.p1;
        e = g.p2;
        f = g.p3;
        b.k = c;
        b.l = d;
        b.j = e;
        b.i = f;
        if (b.l < b.k) {
            return null;
        }
        var h;
        var i;
        var j;
        var k = this.a.getViewInfo(i, h);
        i = k.p0;
        h = k.p1;
        j = this.a.getEffectiveViewport();
        var l = this.a.getMainContentViewport();
        b.p = h;
        b.o = i;
        b.n = j;
        b.m = l;
        if (Rect.l_op_Equality(b.p, Rect.empty) || Rect.l_op_Equality(b.o, Rect.empty)) {
            return null;
        }
        if (this.h != null && (typeCast(Series.$, this.h) !== null && this.h.ew) && this.g != null) {
            b.e = true;
        }
        return b;
    };
    CategoryFramePreparerBase.prototype.r = function (a, b, c, d) {
        return a.getSeriesOffset(b, c, d, this.h.currentMode2Index, this.h.currentCategoryMode);
    };
    CategoryFramePreparerBase.prototype.s = function (a) {
        return this.r(a.b, a.p, a.o, a.n);
    };
    CategoryFramePreparerBase.prototype.d = function (a, b) {
        var c = this.i(a);
        if (c == null || this.g == null) {
            return;
        }
        c.a.f.clear();
        c.a.k.clear();
        c.a.n.clear();
        c.a.q.clear();
        c.a.i.clear();
        c.a.h.clear();
        c.a.g.clear();
        if (c.a.m != null) {
            c.a.m.clear();
        }
        var d = this.c.shouldDisplayMarkers;
        var e = false;
        var f = this.s(c);
        var g = this.j(c);
        if (c.d != null && c.d.i$b != null && c.d.i$b.count != g.e) {
            return;
        }
        if (c.d != null && c.d.i$a) {
            c.d.i$h();
        }
        this.g.cacheValues();
        if (this.m && c.d != null && c.d.i$b.count > 0) {
            var h = c.d.i$b._inner[c.k];
            this.z(g, h, true, c.e);
            while ((isNaN_(g.c) || isNaN_(g.d)) && c.k > 0) {
                c.k = c.k - 1;
                h = c.d.i$b._inner[c.k];
                this.z(g, h, true, c.e);
            }
            var i = c.d.i$b._inner[c.l];
            this.z(g, i, true, c.e);
            while ((isNaN_(g.c) || isNaN_(g.d)) && c.l < g.e - 1) {
                c.l = c.l + 1;
                i = c.d.i$b._inner[c.l];
                this.z(g, i, true, c.e);
            }
        }
        if (this.m && c.d == null) {
            var j = c.k;
            var k = this.g.getBucket(j);
            while ((isNaN_(k[1]) || isNaN_(k[2])) && c.k > 0) {
                c.k = c.k - 1;
                j = c.k;
                k = this.g.getBucket(j);
            }
            var l = c.l;
            k = this.g.getBucket(l);
            while ((isNaN_(k[1]) || isNaN_(k[2])) && c.l < (intDivide(g.e, c.j))) {
                c.l = c.l + 1;
                l = c.l;
                k = this.g.getBucket(l);
            }
        }
        this.w(c, g, f);
        var m = this.t(c, g, f, d, e);
        this.c.updateMarkerCount(m);
        this.v(typeCast(CategoryFrame.$, a), b);
        this.g.unCacheValues();
        return;
    };
    CategoryFramePreparerBase.prototype.v = function (a, b) {
    };
    Object.defineProperty(CategoryFramePreparerBase.prototype, "q", {
        get: function () {
            return this.o;
        },
        enumerable: false,
        configurable: true
    });
    CategoryFramePreparerBase.prototype.t = function (a, b, c, d, e) {
        var _this = this;
        var f = 0;
        var g = false;
        var h = null;
        var i = false;
        var j = a.d != null;
        var k = a.p;
        var l = a.o;
        var m = typeCast(NumericAxisBase.$, a.c) !== null && a.c.lj;
        var n = a.f;
        var o = this.h.mayContainUnknowns;
        var p = this.o;
        var q = this.n;
        var r = this.p;
        p.clear();
        q.clear();
        r.clear();
        var s = this.g;
        var t = this.h.provideCollisionDetector();
        var u = 0;
        var v = a.n;
        var w = new ScalerParams(0, k, l, a.b.j$b, v);
        var x = ((function () {
            var $ret = new ScalerParams(0, k, l, a.c.j$b, v);
            $ret.b = typeCast(Series.$, _this.h) !== null ? _this.h.id() : NaN;
            return $ret;
        })());
        if (j) {
            u = a.b.j$d(2, w) - a.b.j$d(1, w);
            i = this.k();
        }
        var y = a.k;
        var z = a.l;
        var aa = a.a.f;
        var ab = typeCast(IDateTimeAxis_$type, a.b);
        if (ab != null) {
            ab.StartTimeCursor();
        }
        var _loop_1 = function (ac) {
            var ad = void 0;
            if (!j) {
                if (!o) {
                    ad = s.getBucketWithoutUnknowns(ac);
                }
                else {
                    ad = s.getBucket(ac);
                }
            }
            else {
                ad = ((function () { var ae = _this.f(a, ac, b, u, g, h, c); ac = ae.p1; g = ae.p4; h = ae.p5; return ae.ret; })());
            }
            var ae = !m || (m && ad[1] > 0);
            var af = ad[0];
            if (!j || !isNaN_(ad[0])) {
                aa.add(ad);
                if (j) {
                    if (a.a.m == null) {
                        a.a.m = new List$1(Number_$type, 0);
                    }
                    a.a.m.add(ac * a.j);
                }
                if (g && i) {
                    if (h != null) {
                        aa.add(h);
                        if (j) {
                            if (a.a.m == null) {
                                a.a.m = new List$1(Number_$type, 0);
                            }
                            a.a.m.add(ac * a.j);
                        }
                    }
                }
                if (d && ae) {
                    var ag = ac * a.j;
                    var ah = ag;
                    if (j && a.d.i$b != null && ag >= 0 && ag < a.d.i$b.count) {
                        ag = a.d.i$b._inner[ag];
                    }
                    var ai = new Array(ad.length);
                    ai[0] = ad[0];
                    ai[1] = ad[1];
                    ai[2] = ad[2];
                    if (n && ag < b.e) {
                        ai = new Array(ad.length);
                        ai[0] = af;
                        this_1.z(b, ag, true, a.e);
                        ai[1] = b.c;
                        ai[2] = b.d;
                    }
                    p.add(ai);
                    q.add(a.a.f.count - 1);
                    r.add(ag);
                }
            }
            out_ac_1 = ac;
        };
        var this_1 = this, out_ac_1;
        for (var ac = y; ac <= z; ++ac) {
            _loop_1(ac);
            ac = out_ac_1;
        }
        if (ab != null) {
            ab.ResetTimeCursor();
        }
        this.y(a, c, j, w, x, e, d);
        if (d) {
            var aj = p.count;
            var ak = void 0;
            for (var al = 0; al < aj; al++) {
                ak = p._inner[al];
                if (this.l(a.a, ak, t, Math.min(r._inner[al], b.e - 1), f, q._inner[al])) {
                    ++f;
                }
            }
        }
        return f;
    };
    CategoryFramePreparerBase.prototype.k = function () {
        if (typeCast(Series.$, this.h) !== null) {
            return this.h.eg;
        }
        return false;
    };
    CategoryFramePreparerBase.prototype.f = function (a, b, c, d, e, f, g) {
        var h;
        f = null;
        e = false;
        var i = typeCast(CategorySeries.$, this.h);
        var j = a.o;
        var k = a.p;
        var l = a.n;
        var m = new ScalerParams(0, k, j, a.b.j$b, l);
        var n = new ScalerParams(0, k, j, a.c.j$b, l);
        var o = a.e;
        if (a.d == null || a.d.i$b == null || a.d.i$b.count == 0) {
            return {
                ret: [NaN, NaN, NaN],
                p1: b,
                p4: e,
                p5: f
            };
        }
        if (i != null && i.dd != null && i.dd.count < a.d.i$b.count) {
            return {
                ret: [NaN, NaN, NaN],
                p1: b,
                p4: e,
                p5: f
            };
        }
        var p = a.d.i$b._inner[b];
        var q = a.d.i$d(p);
        var r = q;
        this.z(c, p, false, o);
        while (b < a.l) {
            p = a.d.i$b._inner[b + 1];
            r = a.d.i$d(p);
            this.z(c, p, true, o);
            if (r - q >= d || isNaN_(c.c) || isNaN_(c.d)) {
                if (e) {
                    var s = a.d.i$b._inner[b];
                    this.z(c, s, true, o);
                    f = [a.b.j$c(q, m), c.c, c.d];
                }
                break;
            }
            if (!e && this.k()) {
                var t = a.d.i$b._inner[b];
                this.z(c, t, true, o);
                var u = [a.b.j$c(q, m), c.c, c.d];
                if (!isNaN_(u[0])) {
                    if (!isNaN_(u[1]) && !isNaN_(u[2])) {
                        if (a.d != null) {
                            u[0] = u[0] + g;
                        }
                        a.a.f.add(u);
                        if (a.d != null) {
                            if (a.a.m == null) {
                                a.a.m = new List$1(Number_$type, 0);
                            }
                            a.a.m.add(b);
                        }
                        e = true;
                    }
                    else {
                        break;
                    }
                }
            }
            b++;
            this.u(c, p, o);
        }
        var v = NaN;
        if (!isNaN_(q)) {
            v = a.b.j$c(q, m);
        }
        h = this.e(v, c);
        return {
            ret: h,
            p1: b,
            p4: e,
            p5: f
        };
    };
    CategoryFramePreparerBase.prototype.y = function (a, b, c, d, e, f, g) {
        var h = a.j;
        var i = a.a.f.count;
        var j = a.a.f;
        var k = this.o;
        var l = k.count;
        if (f) {
            var m = a.c.j$c(a.c.l7, e);
            a.c.j$f(a.a.k, 0, a.a.k.count, e);
            var n = a.a.k;
            var o = n.count;
            for (var p = 0; p < n.count; p++) {
                n._inner[p] = Math.abs(n._inner[p] - m);
            }
        }
    };
    CategoryFramePreparerBase.prototype.w = function (a, b, c) {
    };
    CategoryFramePreparerBase.$t = markType(CategoryFramePreparerBase, 'CategoryFramePreparerBase', FramePreparer.$);
    return CategoryFramePreparerBase;
}(FramePreparer));
export { CategoryFramePreparerBase };
/**
 * @hidden
 */
var CategoryFramePreparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryFramePreparer, _super);
    function CategoryFramePreparer(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = [c, typeCast(ISupportsMarkers_$type, c), typeCast(IProvidesViewport_$type, c), typeCast(ISupportsErrorBars_$type, c), typeCast(IBucketizer_$type, c)];
                    {
                        var f = d[0];
                        var g = d[1];
                        var h = d[2];
                        var i = d[3];
                        var j = d[4];
                        _this = _super.call(this, 1, f, g, h, i, j) || this;
                        _this.aa = new DefaultCategoryTrendlineHost();
                        _this.ab = new DefaultSingleValueProvider();
                        _this.ac = null;
                        _this.ad = null;
                        _this.ac = _this.aa;
                        if (typeCast(IHasCategoryTrendline_$type, f) !== null) {
                            _this.ac = typeCast(IHasCategoryTrendline_$type, f);
                        }
                        _this.ad = _this.ab;
                        if (typeCast(IHasSingleValueCategory_$type, f) !== null) {
                            _this.ad = typeCast(IHasSingleValueCategory_$type, f);
                        }
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this = _super.call(this, 1, c, d, e, f, g) || this;
                    _this.aa = new DefaultCategoryTrendlineHost();
                    _this.ab = new DefaultSingleValueProvider();
                    _this.ac = null;
                    _this.ad = null;
                    _this.ac = _this.aa;
                    if (typeCast(IHasCategoryTrendline_$type, c) !== null) {
                        _this.ac = typeCast(IHasCategoryTrendline_$type, c);
                    }
                    _this.ad = _this.ab;
                    if (typeCast(IHasSingleValueCategory_$type, c) !== null) {
                        _this.ad = typeCast(IHasSingleValueCategory_$type, c);
                    }
                }
                break;
        }
        return _this;
    }
    CategoryFramePreparer.prototype.l = function (a, b, c, d, e, f) {
        var g = b[0];
        var h = b[1];
        var i = new Rect(0, g - 5, h - 5, 11, 11);
        if (!isNaN_(g) && !isNaN_(h) && !isInfinity(g) && !isInfinity(h) && c.tryAdd(i)) {
            a.n.add({ $type: Point_$type, x: g, y: h });
            this.c.updateMarkerTemplate(e, d, f);
            return true;
        }
        return false;
    };
    CategoryFramePreparer.prototype.j = function (a) {
        var b = new SingleValuesHolder();
        var c = this.ad.valueColumn;
        b.f = c;
        return b;
    };
    CategoryFramePreparer.prototype.x = function (a, b, c, d, e, f) {
        if (d) {
            b[0] = b[0] + c;
        }
        else {
            b[0] = a.b.j$c(b[0], e) + c;
        }
        b[1] = a.c.j$c(b[1], f);
        if (a.j > 1 || d) {
            b[2] = a.c.j$c(b[2], f);
        }
        else {
            b[2] = b[1];
        }
    };
    CategoryFramePreparer.prototype.y = function (a, b, c, d, e, f, g) {
        _super.prototype.y.call(this, a, b, c, d, e, f, g);
        var h = a.j;
        var i = a.a.f.count;
        var j = a.a.f;
        var k = this.q;
        var l = k.count;
        var m = new List$1(Number_$type, 0);
        if (!c) {
            m.add(0);
        }
        var n = new List$1(Number_$type, 0);
        n.add(1);
        if (c || h > 1) {
            n.add(2);
        }
        a.b.j$e(j, m, 0, i, d);
        a.c.j$e(j, n, 0, i, e);
        for (var o = 0; o < i; o++) {
            j._inner[o][0] = j._inner[o][0] + b;
        }
        if (h == 1 && !c) {
            for (var p = 0; p < i; p++) {
                j._inner[p][2] = j._inner[p][1];
            }
        }
        if (g) {
            a.b.j$e(k, m, 0, l, d);
            a.c.j$e(k, n, 0, l, e);
            for (var q = 0; q < l; q++) {
                k._inner[q][0] = k._inner[q][0] + b;
            }
            if (h == 1 && !c) {
                for (var r = 0; r < l; r++) {
                    k._inner[r][2] = k._inner[r][1];
                }
            }
        }
    };
    CategoryFramePreparer.prototype.w = function (a, b, c) {
        if (this.ac.trendLineType == 0 || this.ac.trendlinePreparer == null || this.ac.trendLinePeriod < 1) {
            return;
        }
        this.ac.trendlinePreparer.prepareLine(this.ac, a, b, c);
    };
    CategoryFramePreparer.prototype.z = function (a, b, c, d) {
        var e = a;
        var f = e.f;
        var g = f.item(b);
        var h = g;
        if (d) {
            var i = this.g.getBucket(b);
            g = i[1];
            h = i[1];
        }
        if (c) {
            e.c = g;
            e.d = h;
        }
        else {
            e.a = g;
            e.b = h;
        }
    };
    CategoryFramePreparer.prototype.u = function (a, b, c) {
        var d = a;
        var e = d.f;
        if (b < e.count) {
            var f = void 0;
            if (c) {
                var g = this.g.getBucket(b);
                f = g[1];
            }
            else {
                f = e.item(b);
            }
            d.a = Math.min(d.a, f);
            d.b = Math.max(d.b, f);
        }
    };
    CategoryFramePreparer.prototype.e = function (a, b) {
        var c = b;
        return [a, c.a, c.b];
    };
    CategoryFramePreparer.$t = markType(CategoryFramePreparer, 'CategoryFramePreparer', CategoryFramePreparerBase.$);
    return CategoryFramePreparer;
}(CategoryFramePreparerBase));
export { CategoryFramePreparer };
/**
 * @hidden
 */
var CategorySeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategorySeries, _super);
    function CategorySeries() {
        var _this = _super.call(this) || this;
        _this.w7 = null;
        _this.xf = null;
        _this.xo = false;
        _this.xn = false;
        _this.assigningCategoryStyle = null;
        _this.assigningCategoryMarkerStyle = null;
        _this.xl = null;
        _this.xm = null;
        _this.w4 = new CategoryFrame(3);
        _this.w6 = new CategoryFrame(3);
        _this.w2 = new CategoryFrame(3);
        _this.w5 = new CategoryFrame(3);
        _this.xa = null;
        _this.xe = null;
        _this.xa = new CategorySeriesRenderManager();
        _this.xe = new CategoryTransitionSourceFramePreparer();
        _this.xo = false;
        _this.xn = false;
        _this.ab = CategorySeries.$;
        return _this;
    }
    CategorySeries.prototype.ci = function () {
        var a = new CategorySeriesView(this);
        return a;
    };
    Object.defineProperty(CategorySeries.prototype, "xg", {
        get: function () {
            var _this = this;
            if (this.xf == null) {
                this.xf = DVContainer.instance.createInstance(ICategorySeriesInteractionManager_$type, function () { return _this.dg.n; });
            }
            return this.xf;
        },
        enumerable: false,
        configurable: true
    });
    CategorySeries.prototype.dz = function (a, b, c, d) {
        var _this = this;
        if (!this.hasMarkers) {
            return false;
        }
        var e = this.getEffectiveViewport1(this.cl);
        var f = this.w1();
        var g = new ScalerParams(1, this.c1.vh, this.u9, f.ch);
        g.c = e;
        var h = this.xh();
        var i = new ScalerParams(1, this.c1.vh, this.u9, h.ch);
        i.c = e;
        var j = this.c1.vh;
        var k = this.u9;
        var l = this.currentMode2Index;
        var m = 0;
        if (f.ce && f.cc) {
            m = f.getSeriesOffset(j, k, e, l, f.categoryMode);
        }
        a.clear();
        this.vl.ci(function (n) {
            if (n._visibility == 0) {
                var o = new SeriesPointOfInterest();
                var p = n.n;
                var q = n.o;
                if (p < _this.u9.left || p > _this.u9.right || q < _this.u9.top || q > _this.u9.bottom) {
                    return;
                }
                if (_this.isVertical) {
                    if (f.cb && !f.ce && f.categoryMode != 0) {
                        o.c = n.ak;
                    }
                    else {
                        o.c = f.em(q, g);
                    }
                    o.b = h.em(p, i);
                }
                else {
                    if (f.cb && !f.ce && f.categoryMode != 0) {
                        o.b = n.ak;
                    }
                    else {
                        o.b = f.em(p, g);
                    }
                    o.c = h.em(q, i);
                }
                o.a = n.content;
                if (b) {
                    if (_this.isVertical) {
                        if (c) {
                            o.d = _this.x7(o.b, d);
                        }
                        else {
                            var r = _this.it(n);
                            if (!isNaN_(r)) {
                                o.d = _this.x7(r, d);
                            }
                            else {
                                o.d = _this.x7(o.b, d);
                            }
                        }
                    }
                    else {
                        if (c) {
                            o.d = _this.x7(o.c, d);
                        }
                        else {
                            var s = _this.it(n);
                            if (!isNaN_(s)) {
                                o.d = _this.x7(s, d);
                            }
                            else {
                                o.d = _this.x7(o.c, d);
                            }
                        }
                    }
                }
                else {
                    o.d = f.gd(n.ak);
                }
                a.add(o);
            }
        });
        return true;
    };
    CategorySeries.prototype.x7 = function (a, b) {
        if (b >= 0) {
            return round10N(a, b).toString();
        }
        else {
            return a.toString();
        }
    };
    CategorySeries.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.xb = a;
    };
    CategorySeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    Object.defineProperty(CategorySeries.prototype, "categoryAxis", {
        get: function () {
            return this.w1();
        },
        enumerable: false,
        configurable: true
    });
    CategorySeries.prototype.w1 = function () {
        return this.fetchXAxis();
    };
    CategorySeries.prototype.xh = function () {
        return this.fetchYAxis();
    };
    CategorySeries.prototype.get_d6 = function () {
        return true;
    };
    CategorySeries.prototype.get_fq = function () {
        return this.xh() != null && this.xh().ch;
    };
    CategorySeries.prototype.get_ej = function () {
        return true;
    };
    CategorySeries.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.xb.cu.g(this.hu);
    };
    CategorySeries.prototype.xu = function () {
        return (this.assigningCategoryStyle != null && this.xo) || (this.bo != 1) || (this.cf != 1) || (this.ce != 1);
    };
    CategorySeries.prototype.xv = function () {
        return (this.assigningCategoryMarkerStyle != null && this.xn) || (this.bo != 1) || (this.cf != 1) || (this.ce != 1);
    };
    CategorySeries.prototype.yk = function (a) {
        if (this.assigningCategoryStyle != null && this.xo) {
            this.assigningCategoryStyle(this, a);
        }
    };
    CategorySeries.prototype.yj = function (a) {
        if (this.assigningCategoryMarkerStyle != null && this.xn) {
            this.assigningCategoryMarkerStyle(this, a);
        }
    };
    CategorySeries.prototype.wv = function (a, b) {
        return null;
    };
    CategorySeries.prototype.n7 = function (a, b) {
        _super.prototype.n7.call(this, a, b);
        if (a) {
            this.ye(b);
        }
    };
    CategorySeries.prototype.bi = function () {
        var a = _super.prototype.bi.call(this);
        return a;
    };
    CategorySeries.prototype.o6 = function () {
        _super.prototype.o6.call(this);
        var a = this.fetchXAxis();
        if (a != null) {
            a.h8(false);
        }
        var b = this.fetchYAxis();
        if (b != null) {
            b.h8(false);
        }
    };
    CategorySeries.prototype.rk = function (a, b) {
        _super.prototype.rk.call(this, a, b);
        this.xb.cu.g(this.hu);
        this.qm(false);
    };
    CategorySeries.prototype.rj = function (a, b) {
        if (this.gk && this.i6 < 0.05 && (this.c1 == null || !this.c1.fh())) {
            this.gl = true;
            this.go = false;
            this.f4 = false;
        }
        _super.prototype.rj.call(this, a, b);
        this.xb.cu.g(this.hu);
        this.qm(false);
    };
    CategorySeries.prototype.p5 = function (a, b, c, d) {
        _super.prototype.p5.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                var e = this.fetchYAxis();
                var f = this.fetchXAxis();
                if (c != null && d == null) {
                    this.od(f);
                    this.od(e);
                }
                if (c == null && d != null) {
                    this.qc(f);
                    this.qc(e);
                }
                this.xb.cu.g(this.hu);
                this.qm(false);
                break;
            case "SyncLink":
                if (this.ct != null && this.c1 != null) {
                    this.xb.cu.g(this.hu);
                }
                this.qm(false);
                break;
            case "TransitionProgress":
                this.w6.c(this.i6, this.w4, this.w2);
                if (this.dt(this.cl)) {
                    return;
                }
                if (this.i6 == 1) {
                    this.w2.w();
                    this.yl(this.w2, this.xb);
                    if (this.gk) {
                        this.gk = false;
                        this.n8();
                        this.c2.r = truncate(this.iq());
                        this.c2.b = this.c3;
                    }
                    if (this.gn) {
                        this.gn = false;
                        this.n8();
                        this.c2.r = truncate(this.iq());
                        this.c2.b = this.c3;
                        this.pw();
                    }
                    this.pk();
                }
                else {
                    this.yl(this.w6, this.xb);
                }
                if (this.c1 != null) {
                    this.c1.p6(this);
                }
                break;
            case "ErrorBarSettings":
                this.ph();
                break;
            case CategorySeries.$$p[4]:
                this.qm(false);
                break;
            case CategorySeries.$$p[1]:
                this.xo = this.xq();
                this.qm(false);
                break;
            case CategorySeries.$$p[0]:
                this.xn = this.xp();
                this.qm(false);
                break;
        }
    };
    CategorySeries.prototype.xq = function () {
        return this.xs;
    };
    CategorySeries.prototype.xp = function () {
        return this.xr;
    };
    CategorySeries.prototype.x1 = function (a) {
        return this.h8(a, this.fetchXAxis());
    };
    CategorySeries.prototype.get_fd = function () {
        return typeCast(ISortingAxis_$type, this.w1()) !== null;
    };
    CategorySeries.prototype.as = function () {
        return this.w1();
    };
    CategorySeries.prototype.jl = function (a) {
        return this.xg.b$d(this, a);
    };
    CategorySeries.prototype.j2 = function (a) {
        return this.xg.b$f(this, a);
    };
    CategorySeries.prototype.jj = function (a) {
        var b = truncate(Math.round(this.h6(a)));
        return b;
    };
    CategorySeries.prototype.h6 = function (a) {
        return this.xg.b$c(this, a);
    };
    CategorySeries.prototype.c7 = function (a, b, c) {
        if (this.fk(this.bo) && !c) {
            var d = this.xk(a, b, this.xm);
            this.xm = d;
            return d;
        }
        else {
            var e = this.xi(a, b, this.xm);
            e.d = true;
            this.xm = e;
            return e;
        }
    };
    CategorySeries.prototype.get_ez = function () {
        return true;
    };
    CategorySeries.prototype.n5 = function () {
        _super.prototype.n5.call(this);
        this.xl = null;
        this.xm = null;
    };
    CategorySeries.prototype.c6 = function (a, b, c) {
        if (this.d1 && this.fk(this.bo) && !c) {
            var d = this.xj(a, b, this.xl);
            this.xl = d;
            return d;
        }
        else {
            var e = this.xi(a, b, this.xl);
            this.xl = e;
            return e;
        }
    };
    CategorySeries.prototype.x0 = function () {
        return this.xb.cx.a;
    };
    CategorySeries.prototype.xk = function (a, b, c) {
        if (!this.vr()) {
            return null;
        }
        var d = this.w3();
        var e = this.x0();
        return this.xg.b$b(this, e, this.x4(this.cl), this.x3(this.cl), d.f, a, b, c);
    };
    CategorySeries.prototype.xj = function (a, b, c) {
        var d = this.x4(this.cl);
        var e = this.x5(this.cl);
        var f = this.x3(this.cl);
        var g = this.w3();
        return this.xg.b$a(this, g.f, g.m, d, e, f, a, b, c);
    };
    CategorySeries.prototype.xi = function (a, b, c) {
        var d = new HighlightingInfo();
        d.i = this;
        d.g = 0;
        d.f = this.dd != null ? this.dd.count - 1 : 0;
        d.c = true;
        if (c != null && c.g == d.g && c.f == d.f) {
            return c;
        }
        return d;
    };
    CategorySeries.prototype.w3 = function () {
        var a = this.w2;
        if (this.dr()) {
            if (this.c2.g) {
                this.c2.t();
            }
            a = this.w6;
        }
        return a;
    };
    CategorySeries.prototype.yg = function (a, b, c, d, e, f, g) {
        var h = this.bo != 1;
        var i = this.cf != 1;
        var j = this.ce != 1;
        this.xa.a3(this.xa.d, d.cn, a, b, c, d, e, f, true, g);
        this.xa.aa(this.hs);
        var k = this.xa.ax;
        var l = null;
        var m = this.dd;
        var n = null;
        var o = null;
        var p = null;
        var q = null;
        var r = null;
        if (h && this.c1 != null) {
            l = this.c1.dj.getHighlightingInfo(this, m, k.z, k.y, true);
            if (this.c1.dj.isCrossContextHighlight(this)) {
                n = this.c1.dj.getHighlightingInfo(this, m, k.z, k.y, true);
            }
            k.c = l;
        }
        if (i && this.c1 != null) {
            o = this.c1.dk.getHighlightingInfo(this, m, k.z, k.y, true);
            if (o == null && this.be != null) {
                o = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, k.z, k.y, true);
            }
            if (this.c1.dk.isCrossContextHighlight(this)) {
                q = this.c1.dk.getHighlightingInfo(this, m, k.z, k.y, true);
            }
            k.d = o;
        }
        if (j && this.c1 != null) {
            p = this.c1.di.getHighlightingInfo(this, m, k.z, k.y, true);
            if (this.c1.di.isCrossContextHighlight(this)) {
                r = this.c1.di.getHighlightingInfo(this, m, k.z, k.y, true);
            }
            k.b = p;
        }
        k.h = f;
        this.yj(k);
        this.xa.y(this, l, o, p, f, h, i, j, k.v, this.c1.dj.totalHighWaterMark, k.x, this.c1.dk.totalHighWaterMark, k.t, this.c1.di.totalHighWaterMark);
    };
    CategorySeries.prototype.yh = function (a, b, c, d, e, f, g) {
        var h = this.bo != 1;
        var i = this.cf != 1;
        var j = this.ce != 1;
        this.xa.a3(this.xa.b, d.cn, a, b, c, d, e, f, false, g);
        this.xa.ab(this.hs);
        var k = this.xa.ay;
        var l = null;
        var m = null;
        var n = null;
        var o = this.dd;
        if (h && this.c1 != null) {
            l = this.c1.dj.getHighlightingInfo(this, o, k.z, k.y, false);
            k.c = l;
        }
        if (i && this.c1 != null) {
            m = this.c1.dk.getHighlightingInfo(this, o, k.z, k.y, false);
            if (m == null && this.be != null) {
                m = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, k.z, k.y, false);
            }
            k.d = m;
        }
        if (j && this.c1 != null) {
            n = this.c1.di.getHighlightingInfo(this, o, k.z, k.y, false);
            if (n == null && this.be != null) {
                n = this.c1.di.getHighlightingInfo(this.be, this.be.dd, k.z, k.y, false);
            }
            k.b = n;
        }
        k.h = f;
        this.yk(k);
        this.xa.z(this, l, m, n, f, h, i, j, b < 0);
    };
    CategorySeries.prototype.gw = function (a, b, c) {
        var d = _super.prototype.gw.call(this, a, b, c);
        d = d && this.xz(this.fetchXAxis());
        d = d && this.xz(this.fetchYAxis());
        var e = c;
        if (!c.o() || b.isEmpty || a.isEmpty || this.dd == null) {
            d = false;
        }
        if (!d) {
            e.cu.d = 0;
        }
        return d;
    };
    CategorySeries.prototype.xz = function (a) {
        if (a == null || a.bi == null) {
            return false;
        }
        var b = typeCast(CategoryAxisBase.$, a);
        if (b != null) {
            if (b.itemsSource == null) {
                return false;
            }
            if (b.lf < 1) {
                return false;
            }
        }
        else {
            var c = typeCast(NumericAxisBase.$, a);
            if (c != null) {
                return c.lx != c.lw;
            }
        }
        return true;
    };
    CategorySeries.prototype.f7 = function () {
        return this.xt;
    };
    CategorySeries.prototype.f8 = function () {
        return true;
    };
    CategorySeries.prototype.xc = function () {
        return 12;
    };
    CategorySeries.prototype.n8 = function () {
        _super.prototype.n8.call(this);
        this.w4.w();
        this.w2.w();
        this.w6.w();
    };
    CategorySeries.prototype.qn = function (a) {
        _super.prototype.qn.call(this, a);
        this.xb.cu.g(this.hu);
        if (this.dt(this.cl)) {
            this.w2.z();
            this.w6.z();
            this.w4.z();
            return;
        }
        if (this.gb) {
            if (this.dr()) {
                if (this.c2.g) {
                    this.c2.t();
                }
                this.yl(this.w6, this.xb);
            }
            else {
                this.yl(this.w2, this.xb);
            }
            return;
        }
        if (this.fz(a)) {
            var b = this.w4;
            if (this.dr()) {
                if (this.c2.g) {
                    this.c2.t();
                }
                this.w4 = this.w6;
                this.w6 = b;
            }
            else {
                this.w4 = this.w2;
                this.w2 = b;
            }
            var c = false;
            this.yi(this.w2, this.xb);
            if (this.gm) {
                this.c2.w();
                this.c2.r = truncate(this.ir());
                this.c2.b = this.c4 != null ? this.c4 : this.c3;
                if (this.gn) {
                    var d = this.w6;
                    this.w6 = this.w4;
                    this.w4 = d;
                    c = true;
                }
                this.xe.s(this, this.w4, this.w2, this.isVertical, this.fetchXAxis(), this.fetchYAxis(), this.xd, this.xc(), this.cv, this.cu(), runOn(this, this.x2), this.xb.bx);
                if (this.gn) {
                    var e = this.w6;
                    this.w6 = this.w4;
                    this.w4 = e;
                }
                this.gn = false;
            }
            if (this.gp) {
                this.c2.w();
                this.c2.r = truncate(this.is());
                this.c2.b = this.c5 != null ? this.c5 : this.c3;
                if (this.gk) {
                    var f = this.w6;
                    this.w6 = this.w4;
                    this.w4 = f;
                    c = true;
                }
                this.xe.s(this, this.w4, this.w2, this.isVertical, this.fetchXAxis(), this.fetchYAxis(), this.xd, this.xc(), this.cv, this.cu(), runOn(this, this.x2), this.xb.bx);
                var g = this.w2;
                this.w2 = this.w4;
                this.w4 = g;
                if (this.gk) {
                    var h = this.w6;
                    this.w6 = this.w4;
                    this.w4 = h;
                }
                this.gk = false;
            }
            this.dx = false;
            if (!c) {
                this.n3();
            }
            this.q0();
            if (this.gm) {
                this.gl = false;
                this.gk = true;
            }
            if (this.gp) {
                this.go = false;
                this.gn = true;
            }
        }
        else {
            this.yi(this.w2, this.xb);
            this.yl(this.w2, this.xb);
        }
    };
    CategorySeries.prototype.cu = function () {
        return 3;
    };
    CategorySeries.prototype.cx = function () {
        var a = this.cu();
        switch (a) {
            case 0: return 0;
            case 1: return 1;
            case 4: return 4;
            case 2: return 2;
            case 3: return 3;
        }
        return 3;
    };
    CategorySeries.prototype.x2 = function () {
        if (this.isVertical) {
            return this.u9.left;
        }
        return this.u9.bottom;
    };
    CategorySeries.prototype.xw = function () {
        return false;
    };
    CategorySeries.prototype.hb = function () {
        var a = _super.prototype.hb.call(this);
        if (this.xw()) {
            var b = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "DashArray";
                $ret.p = true;
                $ret.x = ((function () {
                    var $ret = new DoubleCollection();
                    $ret.add(5);
                    $ret.add(5);
                    return $ret;
                })());
                $ret.q = true;
                return $ret;
            })());
            a.add(b);
        }
        if (!this.xw()) {
            var c = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "Brush";
                $ret.p = true;
                $ret.y = "ActualBrush";
                $ret.q = true;
                return $ret;
            })());
            c.valueResolving = delegateCombine(c.valueResolving, runOn(this, this.qu));
            a.add(c);
        }
        if (!this.xw()) {
            var d = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "Outline";
                $ret.p = true;
                $ret.y = "ActualOutline";
                $ret.q = true;
                return $ret;
            })());
            d.valueResolving = delegateCombine(d.valueResolving, runOn(this, this.qu));
            a.add(d);
        }
        var e = ((function () {
            var $ret = new SeriesLayerPropertyOverlay();
            $ret.p = true;
            $ret.ad = "IsTransitionInEnabled";
            $ret.x = true;
            $ret.q = true;
            return $ret;
        })());
        a.add(e);
        var f = ((function () {
            var $ret = new SeriesLayerPropertyOverlay();
            $ret.p = true;
            $ret.ad = "TransitionInMode";
            $ret.x = enumGetBox(CategoryTransitionInMode_$type, 20);
            $ret.q = true;
            return $ret;
        })());
        a.add(f);
        return a;
    };
    CategorySeries.prototype.j7 = function () {
        if (this.dr()) {
            return this.be.w6;
        }
        else {
            return this.be.w2;
        }
    };
    CategorySeries.prototype.x6 = function () {
        var e_1, _a;
        if (this.be != null) {
            var a = this.be;
            return a.x6();
        }
        var b = 0;
        var c = this.fetchXAxis();
        try {
            for (var _b = __values(fromEnum(this.c1.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                if (d == this) {
                    return b;
                }
                var e = typeCast(CategorySeries.$, d);
                if (e != null) {
                    var f = typeCast(CategoryAxisBase.$, e.fetchXAxis());
                    if (f == c && e.preferredCategoryMode(f) == 2) {
                        b++;
                    }
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return -1;
    };
    Object.defineProperty(CategorySeries.prototype, "GetErrorBarsXAxis", {
        get: function () {
            return this.fetchXAxis();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeries.prototype, "GetErrorBarsYAxis", {
        get: function () {
            return this.fetchYAxis();
        },
        enumerable: false,
        configurable: true
    });
    CategorySeries.prototype.yf = function (a, b) {
        this.xa.a1(this, this.xv(), runOn(this, this.wv), this.x3(a), this.x4(a));
        var c = this.xa.d;
        var d = c != null;
        var e = this.w1();
        if (e == null) {
            return;
        }
        var f = this.getEffectiveViewport1(a);
        var g = new ScalerParams(0, a.by, a.bx, e.ch, f);
        var h = this.dd == null ? 0 : this.dd.count;
        var i = a;
        var j = b.f;
        var k = i.cu.e;
        var l = i.cu.f;
        var m = i.cu.d;
        var n = k * m;
        for (var o = 0; o < a.cx.count; o++) {
            var p = a.cx.item(o);
            var q = p.content;
            if (d) {
                var r = p.al;
                this.yg(j, r, h, e, g, a.q, p.ak);
            }
            this.xa.ac(p, q);
        }
    };
    CategorySeries.prototype.yl = function (a, b) {
        this.pt();
        this.u0 = a.ab;
        b.aw();
    };
    CategorySeries.prototype.yi = function (a, b) {
        a.v();
    };
    CategorySeries.prototype.x3 = function (a) {
        return a.cu.d;
    };
    CategorySeries.prototype.x4 = function (a) {
        return a.cu.e;
    };
    CategorySeries.prototype.x5 = function (a) {
        return a.cu.f;
    };
    CategorySeries.prototype.ye = function (a) {
        var b = a;
        b.cx.count = 0;
    };
    CategorySeries.prototype.qo = function (a, b) {
        _super.prototype.qo.call(this, a, b);
        if (!this.gj) {
            this.cl.a4(b);
            return;
        }
        var c = typeCast(CategorySeriesView.$, this.ck);
        c.cu.g(this.hu);
        this.cl.a4(b);
        if (this.dt(this.ck)) {
            return;
        }
        this.ym();
        this.gj = false;
    };
    CategorySeries.prototype.ym = function () {
        var a = typeCast(CategorySeriesView.$, this.ck);
        if (!this.gc) {
            this.yi(this.w5, a);
        }
        this.gc = false;
        this.yl(this.w5, a);
    };
    CategorySeries.prototype.w8 = function (a) {
        var b = typeCast(CategorySeriesView.$, a);
        if (b != null && b.q) {
            if (b.p) {
                return new CategoryFramePreparer(1, typeCast(IIsCategoryBased_$type, this), typeCast(ISupportsMarkers_$type, b), b, this, b.cu);
            }
            else {
                return new CategoryFramePreparer(1, typeCast(IIsCategoryBased_$type, this), typeCast(ISupportsMarkers_$type, b), this.c1.c8.o, this, b.cu);
            }
        }
        else {
            return this.w7;
        }
    };
    CategorySeries.prototype.ao = function (a) {
        if (this.fetchXAxis() == a) {
            return this.fetchYAxis();
        }
        if (this.fetchYAxis() == a) {
            return this.fetchXAxis();
        }
        return null;
    };
    CategorySeries.prototype.ag = function () {
        return [this.fetchXAxis(), this.fetchYAxis()];
    };
    CategorySeries.ww = function (a, b, c, d, e) {
        var f = null;
        if (b > -1 && !d.isEmpty && !c.isEmpty) {
            var g = a._inner[0][0] < c.left - 2000 ? c.left - 10 : NaN;
            var h = c.bottom + 10;
            var i = a._inner[b][0] > c.right + 2000 ? c.right + 10 : NaN;
            var j = c.top - 10;
            f = new Clipper(1, g, h, i, j, e);
        }
        return f;
    };
    CategorySeries.$t = markType(CategorySeries, 'CategorySeries', MarkerSeries.$, [IHasCategoryModePreference_$type, ISupportsErrorBars_$type]);
    CategorySeries.$$p = markDep(DependencyProperty, PropertyMetadata, CategorySeries, 'raisePropertyChanged', ['IsCustomCategoryMarkerStyleAllowed:xr:yn', [0, false], 'IsCustomCategoryStyleAllowed:xs:yo', [0, false], 'IsTransitionInEnabled:xt:yp', [0, false], 'TransitionInMode:xd:yq', [CategoryTransitionInMode_$type, enumGetBox(CategoryTransitionInMode_$type, 0)], 'UseHighMarkerFidelity:xy:yr', [0, false]]);
    return CategorySeries;
}(MarkerSeries));
export { CategorySeries };
/**
 * @hidden
 */
var CategorySeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategorySeriesView, _super);
    function CategorySeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.cw = null;
        _this.cz = 0;
        _this.cu = null;
        _this.cx = null;
        _this.cz = -1;
        _this.cw = a;
        _this.cu = _this.cv();
        _this.cx = ((function () {
            var $ret = new Pool$1(Marker.$);
            $ret.create = runOn(_this, _this.b3);
            $ret.activate = runOn(_this, _this.cm);
            $ret.disactivate = runOn(_this, _this.co);
            $ret.destroy = runOn(_this, _this.cn);
            return $ret;
        })());
        return _this;
    }
    CategorySeriesView.prototype.cy = function (a) {
        if (this.cz != a.u) {
            return true;
        }
        return false;
    };
    CategorySeriesView.prototype.c1 = function (a) {
        this.cz = a.u;
    };
    CategorySeriesView.prototype.updateMarkerTemplate = function (a, b, c) {
        if (!this.b4.vt) {
            var d = this.cx.item(a);
            var e = d.content;
            e.item = this.e.dd.item(b);
            d.ak = b;
            d.al = c;
        }
    };
    CategorySeriesView.prototype.cv = function () {
        return new CategoryBucketCalculator(this);
    };
    Object.defineProperty(CategorySeriesView.prototype, "shouldDisplayMarkers", {
        get: function () {
            return this.cw.vr();
        },
        enumerable: false,
        configurable: true
    });
    CategorySeriesView.prototype.updateMarkerCount = function (a) {
        this.cx.count = a;
    };
    CategorySeriesView.prototype.ci = function (a) {
        this.cx.c(a);
    };
    CategorySeriesView.prototype.c0 = function () {
    };
    CategorySeriesView.$t = markType(CategorySeriesView, 'CategorySeriesView', MarkerSeriesView.$, [ISupportsMarkers_$type]);
    return CategorySeriesView;
}(MarkerSeriesView));
export { CategorySeriesView };
