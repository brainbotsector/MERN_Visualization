/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, markType, runOn, delegateCombine, EnumUtil, typeCast, fromEnum, markDep } from "igniteui-react-core";
import { IBucketizer_$type } from "./IBucketizer";
import { NotImplementedException } from "igniteui-react-core";
import { CategoryAngleAxis } from "./CategoryAngleAxis";
import { NumericRadiusAxis } from "./NumericRadiusAxis";
import { truncate, intDivide, isNaN_ } from "igniteui-react-core";
import { MarkerSeries } from "./MarkerSeries";
import { IHasCategoryModePreference_$type } from "./IHasCategoryModePreference";
import { SeriesRenderer$2 } from "./SeriesRenderer$2";
import { RadialFrame } from "./RadialFrame";
import { DependencyProperty } from "igniteui-react-core";
import { HighlightingInfo } from "igniteui-react-core";
import { RadialSeriesRenderManager } from "./RadialSeriesRenderManager";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { ScalerParams } from "./ScalerParams";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { DoubleCollection } from "igniteui-react-core";
import { RadialAxes } from "./RadialAxes";
import { Visibility_$type } from "igniteui-react-core";
import { SeriesRenderingArguments } from "./SeriesRenderingArguments";
import { PropertyMetadata } from "igniteui-react-core";
import { round10N } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
/**
 * @hidden
 */
var RadialBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialBucketCalculator, _super);
    function RadialBucketCalculator(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.c = 0;
        _this.d = 0;
        _this.b = 0;
        _this.a = a;
        return _this;
    }
    RadialBucketCalculator.prototype.getBucket = function (a) {
        throw new NotImplementedException(0);
    };
    RadialBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        return this.getBucket(a);
    };
    RadialBucketCalculator.prototype.getErrorBucket = function (a, b) {
        return NaN;
    };
    RadialBucketCalculator.prototype.getBucketInfo = function (a, b, c, d) {
        a = this.c;
        b = this.d;
        c = this.b;
        d = this.a.cu.hu;
        return {
            p0: a,
            p1: b,
            p2: c,
            p3: d
        };
    };
    RadialBucketCalculator.prototype.e = function (a) {
        var b = this.a.by;
        var c = this.a.bx;
        var d = this.a.cu.wy;
        if (b.isEmpty || c.isEmpty || d == null || this.a.cu.dd == null || this.a.cu.dd.count == 0) {
            this.b = 0;
            return;
        }
        var e = Math.floor(d.mz(c, b));
        var f = Math.ceil(d.my(c, b));
        if (d.ch) {
            f = Math.ceil(d.mz(c, b));
            e = Math.floor(d.my(c, b));
        }
        if (f < e) {
            f = d.lf + f;
        }
        var g = this.a.cu.w0;
        var h = g != null ? g.no : 0.75;
        var i = Math.min(c.width, c.height) * 0.5 * (h) * 2 * Math.PI;
        var j = Math.floor((f - e + 1) * a / i);
        this.b = truncate(Math.max(1, j));
        this.c = truncate(Math.max(0, Math.floor(e / this.b) - 1));
        this.d = truncate(Math.ceil(f / this.b));
    };
    RadialBucketCalculator.prototype.cacheValues = function () {
    };
    RadialBucketCalculator.prototype.unCacheValues = function () {
    };
    RadialBucketCalculator.$t = markType(RadialBucketCalculator, 'RadialBucketCalculator', Base.$, [IBucketizer_$type]);
    return RadialBucketCalculator;
}(Base));
export { RadialBucketCalculator };
/**
 * @hidden
 */
var RadialBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialBase, _super);
    function RadialBase() {
        var _this = _super.call(this) || this;
        _this.w7 = null;
        _this.w8 = null;
        _this.xf = false;
        _this.xe = false;
        _this.xc = null;
        _this.xd = null;
        _this.assigningRadialStyle = null;
        _this.assigningRadialMarkerStyle = null;
        _this.w5 = new RadialFrame(3);
        _this.w6 = new RadialFrame(3);
        _this.w3 = new RadialFrame(3);
        _this.w1 = null;
        _this.w7 = new RadialSeriesRenderManager();
        _this.w8 = new SeriesRenderer$2(RadialFrame.$, RadialBaseView.$, 1, runOn(_this, _this.x1), runOn(_this, _this.x4), runOn(_this, _this.dr), runOn(_this, _this.q0), runOn(_this, _this.x0), function (a) { return _this.w2.cv.e(_this.hu); });
        return _this;
    }
    RadialBase.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.w2 = a;
    };
    RadialBase.prototype.x0 = function () {
        if (this.c2.g) {
            this.c2.t();
        }
    };
    Object.defineProperty(RadialBase.prototype, "categoryAxis", {
        get: function () {
            return this.wy;
        },
        enumerable: false,
        configurable: true
    });
    RadialBase.prototype.as = function () {
        return this.wy;
    };
    RadialBase.prototype.wv = function (a, b) {
        return null;
    };
    RadialBase.prototype.dz = function (a, b, c, d) {
        var _this = this;
        if (!this.hasMarkers) {
            return false;
        }
        var e = this.wy;
        var f = new ScalerParams(1, this.c1.vh, this.u9, e.ch);
        f.c = this.getEffectiveViewport1(this.cl);
        var g = this.w0;
        var h = new ScalerParams(1, this.c1.vh, this.u9, g.ch);
        h.c = this.getEffectiveViewport1(this.cl);
        a.clear();
        this.vl.ci(function (i) {
            if (i._visibility == 0) {
                var j = new SeriesPointOfInterest();
                var k = i.n;
                var l = i.o;
                if (k < _this.u9.left || k > _this.u9.right || l < _this.u9.top || l > _this.u9.bottom) {
                    return;
                }
                var m = void 0;
                var n = void 0;
                var o = _this.w1.g(k, l, _this.cl.by, _this.cl.bx, m, n);
                m = o.p4;
                n = o.p5;
                j.b = m;
                j.c = n;
                if (b) {
                    if (c) {
                        j.d = _this.xv(j.c, d);
                    }
                    else {
                        var p = _this.it(i);
                        if (!isNaN_(p)) {
                            j.d = _this.xv(p, d);
                        }
                        else {
                            j.d = _this.xv(j.c, d);
                        }
                    }
                }
                else {
                    j.d = e.gd(i.ak);
                }
                j.a = i.content;
                a.add(j);
            }
        });
        return true;
    };
    RadialBase.prototype.xv = function (a, b) {
        if (b >= 0) {
            return round10N(a, b).toString();
        }
        else {
            return a.toString();
        }
    };
    RadialBase.prototype.get_fe = function () {
        return true;
    };
    RadialBase.prototype.get_ez = function () {
        return true;
    };
    RadialBase.prototype.w9 = function (a, b, c) {
        var d = new HighlightingInfo();
        d.i = this;
        d.g = 0;
        d.f = this.dd.count - 1;
        d.c = true;
        if (c != null && c.g == d.g && c.f == d.f) {
            return c;
        }
        return d;
    };
    RadialBase.prototype.xp = function () {
        return false;
    };
    RadialBase.prototype.hb = function () {
        var a = _super.prototype.hb.call(this);
        if (this.xp()) {
            var b = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "DashArray";
                $ret.p = true;
                $ret.x = ((function () {
                    var $ret = new DoubleCollection();
                    $ret.add(5);
                    $ret.add(5);
                    return $ret;
                })());
                $ret.q = true;
                return $ret;
            })());
            a.add(b);
        }
        if (!this.xp()) {
            var c = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "Brush";
                $ret.p = true;
                $ret.y = "ActualBrush";
                $ret.q = true;
                return $ret;
            })());
            c.valueResolving = delegateCombine(c.valueResolving, runOn(this, this.qu));
            a.add(c);
        }
        if (!this.xp()) {
            var d = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "Outline";
                $ret.p = true;
                $ret.y = "ActualOutline";
                $ret.q = true;
                return $ret;
            })());
            d.valueResolving = delegateCombine(d.valueResolving, runOn(this, this.qu));
            a.add(d);
        }
        return a;
    };
    RadialBase.prototype.xa = function (a, b, c) {
        var d = this.w2.cv.c;
        var e = this.w2.cv.d;
        var f = this.w2.cv.b;
        var g = this.w4();
        var h = this.dd.count;
        var i = this.wy;
        var j = -1;
        var k = -1;
        var l = this.jj(b);
        j = truncate(Math.floor((intDivide(l, f)))) * f;
        k = j + (f - 1);
        if (c != null && c.g == j && c.f == k) {
            return c;
        }
        var m = new HighlightingInfo();
        m.i = this;
        m.g = j;
        m.f = k;
        return m;
    };
    RadialBase.prototype.xb = function (a, b, c) {
        var d = this.w2.cv.c;
        var e = this.w2.cv.d;
        var f = this.w2.cv.b;
        var g = this.w4();
        var h = this.dd.count;
        var i = this.wy;
        var j = -1;
        var k = -1;
        var l = this.jj(b);
        j = truncate(Math.floor((intDivide(l, f)))) * f;
        k = j + (f - 1);
        if (c != null && c.g == j && c.f == k) {
            return c;
        }
        var m = new HighlightingInfo();
        m.d = true;
        m.i = this;
        m.g = j;
        m.f = k;
        return m;
    };
    RadialBase.prototype.c6 = function (a, b, c) {
        if (this.d1 && this.fk(this.bo) && !c) {
            var d = this.xa(a, b, this.xc);
            this.xc = d;
            return d;
        }
        else {
            var e = this.w9(a, b, this.xc);
            this.xc = e;
            return e;
        }
    };
    RadialBase.prototype.c7 = function (a, b, c) {
        if (this.fk(this.bo) && !c) {
            var d = this.xb(a, b, this.xd);
            this.xd = d;
            return d;
        }
        else {
            var e = this.w9(a, b, this.xd);
            e.d = true;
            this.xd = e;
            return e;
        }
    };
    RadialBase.prototype.xo = function () {
        return (this.assigningRadialStyle != null && this.xf) || (this.bo != 1) || (this.cf != 1) || (this.ce != 1);
    };
    RadialBase.prototype.xn = function () {
        return (this.assigningRadialMarkerStyle != null && this.xe) || (this.bo != 1) || (this.cf != 1) || (this.ce != 1);
    };
    RadialBase.prototype.x3 = function (a) {
        if (this.assigningRadialStyle != null && this.xf) {
            this.assigningRadialStyle(this, a);
        }
    };
    RadialBase.prototype.x2 = function (a) {
        if (this.assigningRadialMarkerStyle != null && this.xe) {
            this.assigningRadialMarkerStyle(this, a);
        }
    };
    RadialBase.prototype.xr = function (a) {
        return a.cv.b;
    };
    RadialBase.prototype.xs = function (a) {
        return a.cv.c;
    };
    RadialBase.prototype.ag = function () {
        return [this.wy, this.w0];
    };
    RadialBase.prototype.rk = function (a, b) {
        this.w2.cv.e(this.hu);
        this.qm(false);
    };
    RadialBase.prototype.rj = function (a, b) {
        this.w2.cv.e(this.hu);
        this.qm(false);
    };
    RadialBase.prototype.p5 = function (a, b, c, d) {
        _super.prototype.p5.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                if (c != null && d == null) {
                    if (this.wy != null) {
                        this.wy.b0(this);
                    }
                    if (this.w0 != null) {
                        this.w0.b0(this);
                    }
                }
                if (c == null && d != null) {
                    if (this.wy != null) {
                        this.wy.ct(this);
                    }
                    if (this.w0 != null) {
                        this.w0.ct(this);
                    }
                }
                this.w2.cv.e(this.hu);
                this.qm(false);
                break;
            case RadialBase.$$p[0]:
                if (this.wy != null && this.w0 != null) {
                    this.w1 = new RadialAxes(this.w0, this.wy);
                }
                if (c != null) {
                    c.b0(this);
                }
                if (d != null) {
                    d.ct(this);
                }
                this.w2.cv.e(this.hu);
                this.qm(false);
                break;
            case RadialBase.$$p[4]:
                if (this.wy != null && this.w0 != null) {
                    this.w1 = new RadialAxes(this.w0, this.wy);
                }
                if (c != null) {
                    c.b0(this);
                }
                if (d != null) {
                    d.ct(this);
                }
                this.w2.cv.e(this.hu);
                if (this.w0 == null || !this.w0.c1()) {
                    this.qm(false);
                }
                break;
            case "SyncLink":
                if (this.ct != null && this.c1 != null) {
                    this.w2.cv.e(this.hu);
                    this.qm(false);
                }
                break;
            case "TransitionProgress":
                this.w6.c(this.i6, this.w5, this.w3);
                if (this.dt(this.cl)) {
                    return;
                }
                if (this.i6 == 1) {
                    this.x4(this.w3, this.w2);
                    this.pk();
                }
                else {
                    this.x4(this.w6, this.w2);
                }
                if (this.c1 != null) {
                    this.c1.p6(this);
                }
                break;
            case RadialBase.$$p[1]:
                this.qm(false);
                this.ph();
                break;
            case "VisibilityProxy":
                if (EnumUtil.getEnumValue(Visibility_$type, c) != 0 && EnumUtil.getEnumValue(Visibility_$type, d) == 0) {
                    this.w2.cv.e(this.hu);
                }
                break;
            case RadialBase.$$p[3]:
                this.xf = this.xm();
                this.qm(false);
                break;
            case RadialBase.$$p[2]:
                this.xe = this.xl();
                this.qm(false);
                break;
        }
    };
    RadialBase.prototype.xm = function () {
        return this.xk;
    };
    RadialBase.prototype.xl = function () {
        return this.xj;
    };
    RadialBase.prototype.xh = function (a) {
        if (typeCast(NumericRadiusAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    RadialBase.prototype.xg = function (a) {
        if (typeCast(CategoryAngleAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    RadialBase.prototype.j2 = function (a) {
        var b = this.jj(a);
        return b >= 0 && this.dd != null && b < this.dd.count ? this.dd.item(b) : null;
    };
    RadialBase.prototype.xq = function (a) {
        var b = this.cl.by;
        var c = this.cl.bx;
        if (this.wy != null && !b.isEmpty && !c.isEmpty && this.w1 != null) {
            var d = this.w1.c(a);
            if (d < 0) {
                d += Math.PI * 2;
            }
            if (d > Math.PI * 2) {
                d -= Math.PI * 2;
            }
            return d;
        }
        return NaN;
    };
    RadialBase.prototype.h6 = function (a) {
        var b = this.cl.by;
        var c = this.cl.bx;
        var d = -1;
        if (this.wy != null && !b.isEmpty && !c.isEmpty && this.w1 != null) {
            var e = this.w1.c(a);
            if (e < 0) {
                e += Math.PI * 2;
            }
            if (e > Math.PI * 2) {
                e -= Math.PI * 2;
            }
            var f = this.wy.getUnscaledAngle(e);
            if (this.wy.categoryMode != 0) {
                f -= 0.5;
            }
            d = f;
        }
        return d;
    };
    RadialBase.prototype.jj = function (a) {
        var b = truncate(Math.round(this.h6(a)));
        if (this.dd != null && b == this.dd.count) {
            b = 0;
        }
        return b;
    };
    RadialBase.prototype.fx = function (a) {
        return false;
    };
    RadialBase.prototype.w4 = function () {
        var a = this.w3;
        if (this.dr()) {
            if (this.c2.g) {
                this.c2.t();
            }
            a = this.w6;
        }
        return a;
    };
    RadialBase.prototype.o6 = function () {
        _super.prototype.o6.call(this);
        if (this.wy != null) {
            this.wy.h8(false);
        }
        if (this.w0 != null) {
            this.w0.h8(false);
        }
    };
    RadialBase.prototype.gw = function (a, b, c) {
        var d = true;
        var e = c;
        if (!_super.prototype.gw.call(this, a, b, c) || !c.o() || b.isEmpty || a.isEmpty || this.wy == null || this.wy.itemsSource == null || this.w0 == null || this.w1 == null || this.dd == null || this.wy.bi == null || this.w0.bi == null || this.w0.lx == this.w0.lw) {
            e.cv.b = 0;
            d = false;
        }
        return d;
    };
    RadialBase.prototype.qn = function (a) {
        _super.prototype.qn.call(this, a);
        var b;
        var c;
        var d = this.getViewInfo(c, b);
        c = d.p0;
        b = d.p1;
        if (!this.gw(c, b, this.cl)) {
            this.n7(true, this.cl);
            return;
        }
        var e = new SeriesRenderingArguments(this, c, b, a, this.gb);
        var f = this.w8.g(e, this.w5, this.w3, this.w6, this.w2);
        this.w5 = f.p1;
        this.w3 = f.p2;
        this.w6 = f.p3;
    };
    RadialBase.prototype.xt = function () {
        var e_1, _a;
        var a = 0;
        try {
            for (var _b = __values(fromEnum(this.c1.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                if (b == this || this.be == b) {
                    return a;
                }
                var c = typeCast(RadialBase.$, b);
                if (c != null && c.wy == this.wy && c.preferredCategoryMode(c.wy) == 2) {
                    a++;
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return -1;
    };
    RadialBase.$t = markType(RadialBase, 'RadialBase', MarkerSeries.$, [IHasCategoryModePreference_$type]);
    RadialBase.$$p = markDep(DependencyProperty, PropertyMetadata, RadialBase, 'raisePropertyChanged', ['AngleAxis:wy:x5', [CategoryAngleAxis.$, null], 'ClipSeriesToBounds:xi:x6', [0, false], 'IsCustomRadialMarkerStyleAllowed:xj:x7', [0, false], 'IsCustomRadialStyleAllowed:xk:x8', [0, false], 'ValueAxis:w0:x9', [NumericRadiusAxis.$, null]]);
    return RadialBase;
}(MarkerSeries));
export { RadialBase };
/**
 * @hidden
 */
var RadialBaseView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialBaseView, _super);
    function RadialBaseView(a) {
        var _this = _super.call(this, a) || this;
        _this.cv = null;
        _this.cu = null;
        _this.cw = null;
        _this.cx = 0;
        _this.cy = null;
        _this.cu = a;
        _this.cw = new Pool$1(Marker.$);
        _this.cl(_this.cw);
        return _this;
    }
    RadialBaseView.prototype.ci = function (a) {
        this.cw.c(a);
    };
    RadialBaseView.$t = markType(RadialBaseView, 'RadialBaseView', MarkerSeriesView.$);
    return RadialBaseView;
}(MarkerSeriesView));
export { RadialBaseView };
