/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Series } from "./Series";
import { NumericXAxis } from "./NumericXAxis";
import { DependencyProperty } from "igniteui-react-core";
import { NumericYAxis } from "./NumericYAxis";
import { Color } from "igniteui-react-core";
import { ScatterFrame } from "./ScatterFrame";
import { Defaults } from "./Defaults";
import { KDTree2D } from "./KDTree2D";
import { Point_$type, typeGetValue, runOn, delegateRemove, typeCast, delegateCombine, markType, markDep, toNullable } from "igniteui-react-core";
import { DataLegendSeriesValueInfo } from "igniteui-react-core";
import { DataLegendSeriesContext } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { KDPointData } from "./KDPointData";
import { ScalerParams } from "./ScalerParams";
import { ProgressiveLoadStatusEventArgs } from "./ProgressiveLoadStatusEventArgs";
import { SearchArgs } from "./SearchArgs";
import { KDTreeNode2D } from "./KDTreeNode2D";
import { AxisRange } from "./AxisRange";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity, logBase, intDivide } from "igniteui-react-core";
import { boxArray$1, arrayShallowClone } from "igniteui-react-core";
import { dateNow } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
import { CanvasViewRenderer } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
/**
 * @hidden
 */
var HighDensityScatterSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HighDensityScatterSeries, _super);
    function HighDensityScatterSeries() {
        var _this = _super.call(this) || this;
        _this.vq = null;
        _this.vs = null;
        _this.w1 = 0;
        _this.vu = false;
        _this.wg = Defaults.aq.o;
        _this.wf = Defaults.aq.n;
        _this.we = Defaults.aq.m;
        _this.wd = Defaults.aq.l;
        _this.wc = Defaults.ap.o;
        _this.wb = Defaults.ap.n;
        _this.wa = Defaults.ap.m;
        _this.v9 = Defaults.ap.l;
        _this.vi = null;
        _this.vn = null;
        _this.vo = null;
        _this.vj = null;
        _this.vl = null;
        _this.vw = false;
        _this.w2 = 0;
        _this.w4 = 0;
        _this.wy = 0;
        _this.wx = 0;
        _this.progressiveLoadStatusChanged = null;
        _this.v1 = null;
        _this.v7 = 0;
        _this.v6 = 0;
        _this.v8 = 0;
        _this.wn = 0;
        _this.wl = 0;
        _this.wm = 0;
        _this.wo = 0;
        _this.wq = 0;
        _this.ws = 0;
        _this.wr = 0;
        _this.wp = 0;
        _this.v3 = 0;
        _this.v4 = 0;
        _this.v5 = 0;
        _this.v2 = 0;
        _this.w0 = 0;
        _this.wz = 0;
        _this.vf = null;
        _this.w3 = 0;
        _this.vv = false;
        _this._itemIndexes = null;
        _this.vg = null;
        _this.vd = null;
        _this.vp = null;
        _this.ab = HighDensityScatterSeries.$;
        _this.fs = false;
        return _this;
    }
    HighDensityScatterSeries.prototype.bb = function () {
        return new HighDensityScatterSeries();
    };
    HighDensityScatterSeries.prototype.get_e9 = function () {
        return true;
    };
    HighDensityScatterSeries.prototype.i0 = function () {
        if (!isNaN_(this.iz)) {
            return _super.prototype.i0.call(this);
        }
        return Defaults.q;
    };
    HighDensityScatterSeries.prototype.get_fh = function () {
        return true;
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "vr", {
        get: function () {
            return this.vq;
        },
        set: function (a) {
            if (this.vq != a) {
                var b = this.vr;
                this.vq = a;
                this.raisePropertyChanged("XColumn", b, this.vr);
            }
        },
        enumerable: false,
        configurable: true
    });
    HighDensityScatterSeries.prototype.getDataLegendSeriesContextAt = function (a, b) {
        var c = { $type: Point_$type, x: a, y: b };
        var d = this.j2(c);
        var e = d == null ? NaN : this.ic(d, "XMemberPath");
        var f = d == null ? NaN : this.ic(d, "YMemberPath");
        var g = new DataLegendSeriesValueInfo();
        g.l = e;
        g.a = 13;
        g.q = "X";
        g.r = this.xn != null ? this.xn : "X";
        g.s = this.xj != null ? this.xj : "X:";
        g.t = this.xl != null ? this.xl : "";
        var h = new DataLegendSeriesValueInfo();
        h.l = f;
        h.a = 14;
        h.q = "Y";
        h.r = this.xv != null ? this.xv : "Y";
        h.s = this.xr != null ? this.xr : "Y:";
        h.t = this.xt != null ? this.xt : "";
        var i = new DataLegendSeriesContext();
        i.e = ((function () {
            var $ret = new List$1(DataLegendSeriesValueInfo.$, 0);
            $ret.add(g);
            $ret.add(h);
            return $ret;
        })());
        i.h = this.lh();
        return i;
    };
    HighDensityScatterSeries.prototype.j5 = function (a, b) {
        var c = this.mh(b);
        if (c == HighDensityScatterSeries.$$p[10]) {
            return this.j6(a, b, this.xn);
        }
        if (c == HighDensityScatterSeries.$$p[14]) {
            return this.j6(a, b, this.xv);
        }
        return _super.prototype.j5.call(this, a, b);
    };
    HighDensityScatterSeries.prototype.li = function (a) {
        var b = this.mh(a);
        if (b == HighDensityScatterSeries.$$p[10]) {
            return this.xn;
        }
        if (b == HighDensityScatterSeries.$$p[14]) {
            return this.xv;
        }
        return _super.prototype.li.call(this, a);
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "vt", {
        get: function () {
            return this.vs;
        },
        set: function (a) {
            if (this.vs != a) {
                var b = this.vt;
                this.vs = a;
                this.raisePropertyChanged("YColumn", b, this.vt);
            }
        },
        enumerable: false,
        configurable: true
    });
    HighDensityScatterSeries.prototype.ya = function () {
        if (this.vi == null) {
            return;
        }
        this.vi.s();
        var a = this.vi;
        a.progressiveThunkCompleted = delegateRemove(a.progressiveThunkCompleted, runOn(this, this.xx));
        this.vi = null;
    };
    HighDensityScatterSeries.prototype.p5 = function (a, b, c, d) {
        _super.prototype.p5.call(this, a, b, c, d);
        switch (b) {
            case HighDensityScatterSeries.$$p[8]:
            case HighDensityScatterSeries.$$p[12]:
            case HighDensityScatterSeries.$$p[9]:
            case HighDensityScatterSeries.$$p[13]:
                this.pb();
                break;
            case "SeriesViewer":
                if (this.c1 != null) {
                    var e = this.getEffectiveViewport1(this.cl);
                    this.vv = !e.isEmpty;
                }
                break;
            case "FastItemsSource":
                this.ya();
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.vr);
                    c.deregisterColumn(this.vt);
                    this.vr = null;
                    this.vt = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.vr = this.da(this.xn);
                    this.vt = this.da(this.xv);
                }
                if ((this.vm != null && !this.vm.c1()) || (this.vk != null && !this.vk.c1())) {
                    this.qm(this.f0 && c != null);
                }
                this.pi();
                break;
            case HighDensityScatterSeries.$$p[7]:
                var f = this.vj;
                this.vj = this.vk;
                this.ya();
                if (f != null) {
                    f.rangeChanged = delegateRemove(f.rangeChanged, runOn(this, this.x0));
                }
                if (this.vj != null) {
                    var g = this.vj;
                    g.rangeChanged = delegateCombine(g.rangeChanged, runOn(this, this.x0));
                }
                if (c != null) {
                    c.b0(this);
                }
                if (d != null) {
                    d.ct(this);
                }
                if ((this.vk != null && !this.vk.c1()) || (d == null && c != null)) {
                    this.qm(false);
                }
                break;
            case HighDensityScatterSeries.$$p[11]:
                var h = this.vl;
                this.vl = this.vm;
                this.ya();
                if (h != null) {
                    h.rangeChanged = delegateRemove(h.rangeChanged, runOn(this, this.x0));
                }
                if (this.vl != null) {
                    var i = this.vl;
                    i.rangeChanged = delegateCombine(i.rangeChanged, runOn(this, this.x0));
                }
                if (c != null) {
                    c.b0(this);
                }
                if (d != null) {
                    d.ct(this);
                }
                if ((this.vm != null && !this.vm.c1()) || (d == null && c != null)) {
                    this.qm(false);
                }
                break;
            case "MouseOverEnabled":
                this.vw = this.fs;
                this.qm(false);
                break;
            case HighDensityScatterSeries.$$p[10]:
                if (this.dd != null) {
                    this.dd.deregisterColumn(this.vr);
                    this.vr = this.da(this.xn);
                }
                break;
            case "XColumn":
                this.ya();
                if (this.vk != null && !this.vk.c1()) {
                    this.qm(false);
                }
                this.pi();
                break;
            case HighDensityScatterSeries.$$p[14]:
                if (this.dd != null) {
                    this.dd.deregisterColumn(this.vt);
                    this.vt = this.da(this.xv);
                }
                break;
            case "YColumn":
                this.ya();
                if (this.vm != null && !this.vm.c1()) {
                    this.qm(false);
                }
                this.pi();
                break;
            case HighDensityScatterSeries.$$p[6]:
                this.ya();
                this.qm(false);
                this.ph();
                break;
            case HighDensityScatterSeries.$$p[3]:
                this.qm(false);
                this.ph();
                break;
            case HighDensityScatterSeries.$$p[1]:
                this.qm(false);
                this.ph();
                break;
            case HighDensityScatterSeries.$$p[0]:
            case HighDensityScatterSeries.$$p[2]:
                if (!this.vh.b4(this.yt, this.ys)) {
                    return;
                }
                this.x4();
                this.qm(false);
                this.ph();
                break;
            case HighDensityScatterSeries.$$p[4]:
                this.w1 = Math.max(typeGetValue(d) - 1, 0);
                this.vu = this.w1 > 0;
                this.qm(false);
                this.ph();
                break;
            case HighDensityScatterSeries.$$p[5]:
                this.qm(false);
                this.ph();
                break;
        }
    };
    HighDensityScatterSeries.prototype.x4 = function () {
        this.wd = this.yt.l;
        this.wg = this.yt.o;
        this.wf = this.yt.n;
        this.we = this.yt.m;
        this.v9 = this.ys.l;
        this.wc = this.ys.o;
        this.wb = this.ys.n;
        this.wa = this.ys.m;
        this.ud = BrushUtil.h(truncate(this.wd), truncate(this.wg), truncate(this.wf), truncate(this.we));
        this.t2 = BrushUtil.h(truncate(this.v9), truncate(this.wc), truncate(this.wb), truncate(this.wa));
    };
    HighDensityScatterSeries.prototype.vy = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HighDensityScatterSeries.prototype.vx = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HighDensityScatterSeries.prototype.x0 = function (a, b) {
        this.ya();
        this.qm(false);
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "wk", {
        get: function () {
            return this.wc - this.wg;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(HighDensityScatterSeries.prototype, "wj", {
        get: function () {
            return this.wb - this.wf;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(HighDensityScatterSeries.prototype, "wi", {
        get: function () {
            return this.wa - this.we;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(HighDensityScatterSeries.prototype, "wh", {
        get: function () {
            return this.v9 - this.wd;
        },
        enumerable: false,
        configurable: true
    });
    HighDensityScatterSeries.prototype.gw = function (a, b, c) {
        var d = _super.prototype.gw.call(this, a, b, c);
        if (this.vm == null || this.vk == null || this.vk.bi == null || this.vm.bi == null || this.vt == null || this.vr == null || this.vt.count < 1 || this.vr.count < 1 || this.vt.count != this.vr.count || this.vk.lx == this.vk.lw || this.vm.lx == this.vm.lw || this.u9.isEmpty) {
            d = false;
        }
        return d;
    };
    Object.defineProperty(HighDensityScatterSeries.prototype, "w8", {
        get: function () {
            return this.w2;
        },
        set: function (a) {
            var b = this.w2;
            this.w2 = a;
            this.raisePropertyChanged("ProgressiveStatus", b, this.w2);
        },
        enumerable: false,
        configurable: true
    });
    HighDensityScatterSeries.prototype.qn = function (a) {
        _super.prototype.qn.call(this, a);
        this.x2(a, this.cl);
    };
    HighDensityScatterSeries.prototype.x2 = function (a, b) {
        if (this.dt(b)) {
            return;
        }
        if (this.vi == null && !this.v0) {
            var c = new List$1(KDPointData.$, 2, this.vr.count);
            var d = this.vk;
            var e = this.vm;
            var f = new Rect(0, 0, 0, 1, 1);
            var g = new Rect(0, 0, 0, 1, 1);
            var h = new ScalerParams(1, f, g, d.ch);
            var i = new ScalerParams(1, f, g, e.ch);
            var j_1;
            var k_1;
            var _loop_1 = function (l) {
                j_1 = d.ej(this_1.vr.item(l), h);
                k_1 = e.ej(this_1.vt.item(l), i);
                if (!isNaN_(j_1) && !isNaN_(k_1) && !isInfinity(j_1) && !isInfinity(k_1)) {
                    c.add(((function () {
                        var $ret = new KDPointData();
                        $ret.a = j_1;
                        $ret.b = k_1;
                        $ret.c = l;
                        return $ret;
                    })()));
                }
            };
            var this_1 = this;
            for (var l = 0; l < this.vr.count; l++) {
                _loop_1(l);
            }
            if (this.vz) {
                this.wx = 1;
                this.wy = truncate(logBase(c.count, 2)) + 3;
                this.w8 = truncate(((this.wx / this.wy) * 100));
                if (this.progressiveLoadStatusChanged != null) {
                    this.progressiveLoadStatusChanged(this, new ProgressiveLoadStatusEventArgs(this.w8));
                }
                this.vi = KDTree2D.b(c.toArray(), 1);
                var m = this.vi;
                m.progressiveThunkCompleted = delegateCombine(m.progressiveThunkCompleted, runOn(this, this.xx));
                if (!this.vi.f(this.jf)) {
                    var n = this.vi;
                    n.progressiveThunkCompleted = delegateRemove(n.progressiveThunkCompleted, runOn(this, this.xx));
                }
                this.ph();
            }
            else {
                var o = dateNow();
                this.vi = new KDTree2D(0, c.toArray(), 1);
                var p = dateNow();
            }
        }
        if (this.vz && !this.v0) {
            this.x3(b);
        }
        else {
            this.x5(b);
        }
    };
    HighDensityScatterSeries.prototype.oc = function (a, b, c, d) {
        _super.prototype.oc.call(this, a, b, c, d);
        this.ya();
        var e = false;
        if (this.vk != null && !this.vk.c1()) {
            e = true;
        }
        if (this.vm != null && !this.vm.c1()) {
            e = true;
        }
        if (e) {
            this.qm(false);
        }
        this.pi();
    };
    HighDensityScatterSeries.prototype.xz = function (a) {
        var b = a;
        var c = this.w0 * this.wz;
        if (this.vw) {
            if (this._itemIndexes == null || this._itemIndexes.length != c) {
                this._itemIndexes = new Array(c);
                for (var d = 0; d < c; d++) {
                    this._itemIndexes[d] = 0;
                }
            }
            else {
                for (var e = 0; e < c; e++) {
                    this._itemIndexes[e] = 0;
                }
            }
        }
    };
    HighDensityScatterSeries.prototype.x5 = function (a) {
        var b;
        var c;
        var d = null;
        if (a.q) {
            d = this._itemIndexes;
        }
        var e = a.getViewInfo(c, b);
        c = e.p0;
        b = e.p1;
        var f = a;
        var g = this.getEffectiveViewport1(a);
        this.vn = new ScalerParams(0, b, c, this.vj.ch, g);
        this.vo = new ScalerParams(0, b, c, this.vl.ch, g);
        this.xy(a);
        this.xz(a);
        var h = this.w0 * this.wz;
        if (this.vg == null || this.vg.length != h) {
            this.vg = new Array(h);
            this.vd = new Array(h);
        }
        var i = this.vg.length;
        var j = this.vg;
        var k = this.vd;
        for (var l = 0; l < i; l++) {
            j[l] = 0;
            k[l] = 0;
        }
        this.w4 = truncate(Math.round(this.hu));
        this.vf = f.b1();
        var m = this.vf.length;
        var n = this.vf;
        for (var o = 0; o < m; o++) {
            n[o] = 0;
        }
        var p = this.wv;
        var q = this.wu;
        if (isNaN_(p) || isInfinity(p)) {
            p = 0;
        }
        if (isNaN_(q) || isInfinity(q)) {
            q = 50;
        }
        this.v7 = Math.min(p, q);
        this.v6 = Math.max(p, q);
        if (this.v7 < 0) {
            this.v7 = 0;
        }
        if (this.v6 < 0) {
            this.v6 = 0;
        }
        this.v8 = this.v6 - this.v7;
        if (this.v0) {
            this.x1(a);
        }
        else {
            this.yc(a);
        }
        f.cc();
        if (a.q) {
            this._itemIndexes = d;
            this.vh.cd();
        }
    };
    HighDensityScatterSeries.prototype.x3 = function (a) {
        if (this.vi == null) {
            return;
        }
        this.x5(a);
    };
    HighDensityScatterSeries.prototype.xx = function (a, b) {
        var _this = this;
        this.vh.cb(function () {
            if (_this.wx < _this.wy - 1) {
                _this.wx++;
            }
            _this.w8 = truncate(((_this.wx / _this.wy) * 100));
            if (_this.progressiveLoadStatusChanged != null) {
                _this.progressiveLoadStatusChanged(_this, new ProgressiveLoadStatusEventArgs(_this.w8));
            }
            _this.x3(_this.cl);
            _this.ph();
            if (_this.vi != null) {
                if (!_this.vi.f(_this.jf)) {
                    var c = _this.vi;
                    c.progressiveThunkCompleted = delegateRemove(c.progressiveThunkCompleted, runOn(_this, _this.xx));
                    _this.w8 = 100;
                    if (_this.progressiveLoadStatusChanged != null) {
                        _this.progressiveLoadStatusChanged(_this, new ProgressiveLoadStatusEventArgs(_this.w8));
                    }
                }
            }
        });
    };
    HighDensityScatterSeries.prototype.x1 = function (a) {
        var b = arrayShallowClone(this.vr.asArray());
        this.vk.hn(boxArray$1(b), 0, b.length, this.vn);
        var c = arrayShallowClone(this.vt.asArray());
        this.w3 = 0;
        var d = this.w1;
        var e = this.vu;
        var f = this.vg.length;
        this.vm.hn(boxArray$1(c), 0, c.length, this.vo);
        var g = 255 << 24 | truncate(this.wg) << 16 | truncate(this.wf) << 8 | truncate(this.we);
        for (var h = 0; h < b.length; h++) {
            var i = truncate(b[h]);
            var j = truncate(c[h]);
            i = truncate(Math.floor(i));
            j = truncate(Math.floor(j));
            if (i < 0 || i >= this.w0 || j < 0 || j >= this.wz) {
                continue;
            }
            if (e) {
                var k = i - d;
                var l = i + d;
                l = l > (this.w0 - 1) ? (this.w0 - 1) : l;
                k = k < 0 ? 0 : k;
                var m = j + d;
                var n = j - d;
                for (var o = k; o <= l; o++) {
                    for (var p = n; p <= m; p++) {
                        var q = (p * this.w0) + o;
                        if (q < 0 || q > f - 1) {
                            continue;
                        }
                        this.vg[q] = this.vg[q] + 1;
                        this.vd[q] = 1;
                        this.w3++;
                        if (this.vw) {
                            this._itemIndexes[q] = h + 1;
                        }
                    }
                }
            }
            else {
                var r = (j * this.w0) + i;
                this.vg[r] = this.vg[r] + 1;
                this.vd[r] = 1;
                this.w3++;
                if (this.vw) {
                    this._itemIndexes[r] = h + 1;
                }
            }
        }
        this.x6();
    };
    HighDensityScatterSeries.prototype.yc = function (a) {
        var b;
        var c;
        var d = a.getViewInfo(b, c);
        b = d.p0;
        c = d.p1;
        if (this.vi == null) {
            return;
        }
        if (this.v1 == null) {
            this.v1 = new List$1(KDTreeNode2D.$, 2, truncate(Math.round(b.width * b.height)));
        }
        else {
            this.v1.clear();
        }
        var e = c.left;
        var f = c.right;
        var g = c.top;
        var h = c.bottom;
        this.wr = c.top;
        this.wp = c.height;
        this.wq = c.left;
        this.ws = c.width;
        this.wn = b.top;
        this.wl = b.height;
        this.wm = b.left;
        this.wo = b.width;
        var i = this.getEffectiveViewport1(a);
        this.v3 = (i.left - this.wm) / this.wo;
        this.v4 = (i.top - this.wn) / this.wl;
        var j = (i.right - this.wm) / this.wo;
        this.v5 = j - this.v3;
        var k = (i.bottom - this.wn) / this.wl;
        this.v2 = k - this.v4;
        if (this.vv) {
            e = (e - this.v3) / this.v5;
            f = (f - this.v3) / this.v5;
            g = (g - this.v4) / this.v2;
            h = (h - this.v4) / this.v2;
        }
        var l = this.hu / b.width * c.width;
        var m = this.hu / b.height * c.height;
        var n = Math.min(l, m);
        var o = ((function () {
            var $ret = new SearchArgs();
            $ret.c = e;
            $ret.a = f;
            $ret.d = g;
            $ret.b = h;
            $ret.e = l;
            $ret.f = m;
            $ret.g = 0x7FFFFFFF;
            return $ret;
        })());
        this.vi.t(this.v1, o, 0, 1, 0, 1);
        var p;
        this.w3 = 0;
        for (var q = 0; q < this.v1.count; q++) {
            p = this.v1._inner[q];
            this.x7(p);
        }
        this.x6();
    };
    HighDensityScatterSeries.prototype.x7 = function (a) {
        if (a.g) {
            return;
        }
        var b = a.e != null && a.e.a;
        var c = a.a == null ? 0 : a.a.length;
        var d = (a.h - c) + 1;
        if (b && d > 0) {
        }
        else {
            d = 1;
        }
        this.x9(a.b, d, b, a.e);
        if (c > 0 && !b) {
            var e = void 0;
            for (var f = 0; f < c; f++) {
                e = a.a[f];
                this.x9(e, d, false, a.e);
            }
        }
        if (a.e != null) {
            a.e.a = false;
        }
    };
    HighDensityScatterSeries.prototype.fx = function (a) {
        var b = this.c1 != null ? this.c1.vh : Rect.empty;
        var c = this.c1 != null ? this.c1.vw : Rect.empty;
        var d = new Rect(0, 0, 0, 1, 1);
        var e = this.u3(this.cl);
        var f = new ScalerParams(0, d, d, this.vk.ch, e);
        var g = new ScalerParams(0, d, d, this.vm.ch, e);
        var h = !b.isEmpty && !c.isEmpty && this.dd != null ? this.dd.indexOf(a) : -1;
        var i = this.vk != null && this.vr != null && h < this.vr.count ? this.vk.ej(this.vr.item(h), f) : NaN;
        var j = this.vm != null && this.vt != null && h < this.vt.count ? this.vm.ej(this.vt.item(h), g) : NaN;
        if (!isNaN_(i)) {
            if (i < b.left + 0.1 * b.width) {
                i = i + 0.4 * b.width;
                b.x = i - 0.5 * b.width;
            }
            if (i > b.right - 0.1 * b.width) {
                i = i - 0.4 * b.width;
                b.x = i - 0.5 * b.width;
            }
        }
        if (!isNaN_(j)) {
            if (j < b.top + 0.1 * b.height) {
                j = j + 0.4 * b.height;
                b.y = j - 0.5 * b.height;
            }
            if (j > b.bottom - 0.1 * b.height) {
                j = j - 0.4 * b.height;
                b.y = j - 0.5 * b.height;
            }
        }
        if (this.ct != null) {
            this.ct.au(this.c1, b, true);
        }
        return h >= 0;
    };
    HighDensityScatterSeries.prototype.x9 = function (a, b, c, d) {
        var e = this.w6(b);
        var f = a.c;
        var g = this.w1;
        if (c) {
            var h = d.d;
            var i = d.b;
            var j = d.e;
            var k = d.c;
            if (this.vv) {
                h = this.v3 + this.v5 * h;
                i = this.v3 + this.v5 * i;
                j = this.v4 + this.v2 * j;
                k = this.v4 + this.v2 * k;
            }
            var l = truncate((this.wm + this.wo * (h - this.wq) / this.ws));
            var m = truncate((this.wm + this.wo * (i - this.wq) / this.ws));
            var n = truncate((this.wn + this.wl * (j - this.wr) / this.wp));
            var o = truncate((this.wn + this.wl * (k - this.wr) / this.wp));
            l = truncate(Math.floor(l));
            m = truncate(Math.floor(m));
            n = truncate(Math.floor(n));
            o = truncate(Math.floor(o));
            if (this.vu) {
                l -= g;
                m += g;
                n -= g;
                o += g;
            }
            var p = ((m - l) + 1) * ((o - n) + 1);
            var q = b / p;
            var r = q;
            for (var s = l; s <= m; s++) {
                for (var t = n; t <= o; t++) {
                    this.x8(f, s, t, q, r);
                }
            }
        }
        else {
            var u = a.a;
            var v = a.b;
            if (this.vv) {
                u = this.v3 + this.v5 * u;
                v = this.v4 + this.v2 * v;
            }
            var w = truncate((this.wm + this.wo * (u - this.wq) / this.ws));
            var x = truncate((this.wn + this.wl * (v - this.wr) / this.wp));
            w = truncate(Math.floor(w));
            x = truncate(Math.floor(x));
            if (this.vu) {
                var y = w - g;
                var z = w + g;
                var aa = x + g;
                var ab = x - g;
                var ac = ((z - y) + 1) * ((aa - ab) + 1);
                var ad = b / ac;
                var ae = ad;
                for (var af = y; af <= z; af++) {
                    for (var ag = ab; ag <= aa; ag++) {
                        this.x8(f, af, ag, ad, ae);
                    }
                }
            }
            else {
                this.x8(f, w, x, b, 1);
            }
        }
    };
    HighDensityScatterSeries.prototype.w5 = function (a, b) {
        return truncate((Math.floor(255 * b))) << 24 | truncate(Math.floor(b * (this.wg + a * this.wk))) << 16 | truncate(Math.floor(b * (this.wf + a * this.wj))) << 8 | truncate(Math.floor(b * (this.we + a * this.wi)));
    };
    HighDensityScatterSeries.prototype.w6 = function (a) {
        return 255 << 24 | truncate(Math.floor((this.wg + a * this.wk))) << 16 | truncate(Math.floor((this.wf + a * this.wj))) << 8 | truncate(Math.floor((this.we + a * this.wi)));
    };
    HighDensityScatterSeries.prototype.wt = function (a) {
        return (a >> 24 & 255) / 255;
    };
    HighDensityScatterSeries.prototype.x8 = function (a, b, c, d, e) {
        if (b < 0 || b >= this.w0 || c < 0 || c >= this.wz) {
            return;
        }
        var f = (c * this.w0) + b;
        this.vg[f] = this.vg[f] + d;
        this.vd[f] = this.vd[f] + e;
        if (this.vw) {
            this._itemIndexes[f] = a + 1;
        }
        this.w3 += truncate(d);
    };
    HighDensityScatterSeries.prototype.x6 = function () {
        var a = 0;
        var b = 0;
        var c = this.v8;
        var d = this.v7;
        var e = this.v6;
        var f = this.vg.length;
        var g = this.vg;
        var h = this.vd;
        var i = this.vf;
        var j = NaN;
        var k = NaN;
        var l = 0;
        var m = 0;
        for (var n = 0; n < f; n++) {
            a = g[n];
            if (a != 0) {
                b = h[n];
                if (a >= e) {
                    a = 1;
                }
                else if (a <= d) {
                    a = 0;
                }
                else {
                    a = (a - d) / (c);
                }
                if (b > 1) {
                    b = 1;
                }
                if (b < 0.2) {
                    b = 0.2;
                }
                if (j != a || k != b) {
                    l = this.w5(a, b);
                    j = a;
                    k = b;
                }
                i[m] = l >> 16 & 255;
                i[m + 1] = l >> 8 & 255;
                i[m + 2] = l & 255;
                i[m + 3] = l >> 24 & 255;
            }
            m += 4;
        }
    };
    HighDensityScatterSeries.prototype.xy = function (a) {
        var b = a;
        b.b9();
    };
    HighDensityScatterSeries.prototype.ci = function () {
        return new HighDensityScatterSeriesView(this);
    };
    HighDensityScatterSeries.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.vh = a;
    };
    HighDensityScatterSeries.prototype.aq = function (a) {
        if (a != null && a == this.vk && this.vr != null) {
            return new AxisRange(this.vr.minimum, this.vr.maximum);
        }
        if (a != null && a == this.vm && this.vt != null) {
            return new AxisRange(this.vt.minimum, this.vt.maximum);
        }
        return null;
    };
    HighDensityScatterSeries.prototype.rj = function (a, b) {
        if (this.c1 != null) {
            var c = this.getEffectiveViewport1(this.cl);
            this.vv = !c.isEmpty;
        }
        this.qm(false);
    };
    HighDensityScatterSeries.prototype.rk = function (a, b) {
        this.qm(false);
    };
    HighDensityScatterSeries.prototype.j2 = function (a) {
        if (!this.vw || this._itemIndexes == null || this.c1 == null || this.dd == null || this._itemIndexes.length != (this.w0 * this.wz)) {
            return null;
        }
        var b = this.c1.vh;
        var c = (a.x - b.left) / b.width;
        var d = (a.y - b.top) / b.height;
        var e = truncate(Math.round(this.u9.left + (this.u9.width * c)));
        var f = truncate(Math.round(this.u9.top + (this.u9.height * d)));
        var g = this.w9(e, f);
        if (g < 0 || g > this._itemIndexes.length - 1) {
            return null;
        }
        var h = this._itemIndexes[g] - 1;
        if (h < 0 || h > this.dd.count) {
            return null;
        }
        return this.dd.item(h);
    };
    HighDensityScatterSeries.prototype.w9 = function (a, b) {
        var c = (this.w0 * b) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        var d = 1;
        c = (this.w0 * (b - d)) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.w0 * (b + d)) + a;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.w0 * (b)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.w0 * (b)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.w0 * (b - d)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.w0 * (b + d)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.w0 * (b - d)) + a + 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        c = (this.w0 * (b + d)) + a - 1;
        if (c > 0 && c < this._itemIndexes.length && this._itemIndexes[c] > 0) {
            return c;
        }
        return 0;
    };
    HighDensityScatterSeries.prototype.yb = function (a, b, c) {
        this.vf = a;
        this.w0 = b;
        this.wz = c;
    };
    HighDensityScatterSeries.prototype.get_gq = function () {
        return true;
    };
    HighDensityScatterSeries.prototype.set_gq = function (a) {
        _super.prototype.set_gq.call(this, a);
    };
    HighDensityScatterSeries.prototype.n7 = function (a, b) {
        _super.prototype.n7.call(this, a, b);
        this.vh.ca();
        if (this.ck != null) {
            this.ck.ca();
        }
        this.ph();
    };
    HighDensityScatterSeries.prototype.qo = function (a, b) {
        _super.prototype.qo.call(this, a, b);
        if (!this.gj) {
            this.cl.a4(b);
            return;
        }
        this.cl.a4(b);
        if (this.dt(this.ck)) {
            return;
        }
        var c = typeCast(HighDensityScatterSeriesView.$, this.ck);
        var d = new ScatterFrame();
        this.x2(false, c);
        this.gj = false;
    };
    HighDensityScatterSeries.prototype.ql = function (a, b, c, d, e) {
        _super.prototype.ql.call(this, a, b, c, d, e);
        var f = this.a2.a$i.item(d);
        var g = f;
        f.a3(c);
        if (this.dt(g)) {
            return;
        }
        if (this.vp == null) {
            this.vp = new ScatterFrame();
        }
        this.x2(false, f);
    };
    HighDensityScatterSeries.prototype.n4 = function () {
        _super.prototype.n4.call(this);
        this.vk = null;
        this.vm = null;
    };
    HighDensityScatterSeries.$t = markType(HighDensityScatterSeries, 'HighDensityScatterSeries', Series.$);
    HighDensityScatterSeries.$$p = markDep(DependencyProperty, PropertyMetadata, HighDensityScatterSeries, 'raisePropertyChanged', ['HeatMaximumColor:ys:yd', [Color.$, Defaults.ap], 'HeatMaximum:wu:ye', [1, 50], 'HeatMinimumColor:yt:yf', [Color.$, Defaults.aq], 'HeatMinimum:wv:yg', [1, 0], 'PointExtent:w7:yh', [1, 1], 'ProgressiveLoad:vz:yi', [0, true], 'UseBruteForce:v0:yj', [0, false], 'XAxis:vk:yk', [NumericXAxis.$, null], 'XMemberAsLegendLabel:xj:yl', [2, null], 'XMemberAsLegendUnit:xl:ym', [2, null], 'XMemberPath:xn:yn', [2, null], 'YAxis:vm:yo', [NumericYAxis.$, null], 'YMemberAsLegendLabel:xr:yp', [2, null], 'YMemberAsLegendUnit:xt:yq', [2, null], 'YMemberPath:xv:yr', [2, null]]);
    return HighDensityScatterSeries;
}(Series));
export { HighDensityScatterSeries };
/**
 * @hidden
 */
var HighDensityScatterSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HighDensityScatterSeriesView, _super);
    function HighDensityScatterSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.b2 = null;
        _this.b0 = null;
        _this.b8 = 0;
        _this.b7 = 0;
        _this.b5 = null;
        _this.b6 = null;
        _this.b3 = null;
        _this.b2 = a;
        return _this;
    }
    HighDensityScatterSeriesView.prototype.au = function () {
        _super.prototype.au.call(this);
        if (!this.q) {
            this.b2.yt = Defaults.aq;
            this.b2.ys = Defaults.ap;
            this.b2.t2 = Defaults.al;
            this.b2.ud = Defaults.ak;
        }
    };
    HighDensityScatterSeriesView.prototype.cd = function () {
        this.b2.yb(this.b0, this.b8, this.b7);
    };
    HighDensityScatterSeriesView.prototype.b9 = function () {
        if (this.b5 == null) {
            this.b5 = this.e.jf.createElement("canvas");
            var a = this.e.jf.get2DCanvasContext(this.b5);
            this.b3 = new RenderingContext(new CanvasViewRenderer(), a);
        }
        var b;
        if (this.p) {
            b = this.bx;
        }
        else {
            b = this.e.c1.vm();
        }
        var c = truncate(Math.round(b.left));
        var d = truncate(Math.round(b.top));
        var e = truncate(Math.round(b.width));
        var f = truncate(Math.round(b.height));
        var g = this.b8;
        var h = this.b7;
        this.b8 = e;
        this.b7 = f;
        if (g != this.b8 || h != this.b7 || this.b0 == null) {
            this.b5.setAttribute("width", e.toString());
            this.b5.setAttribute("height", f.toString());
            this.b6 = this.b3.h().getImageData(0, 0, e, f);
            var imageDataArray_ = this.b6.data;
            this.b0 = imageDataArray_;
        }
        this.b2.yb(this.b0, this.b8, this.b7);
    };
    HighDensityScatterSeriesView.prototype.b1 = function () {
        return this.b0;
    };
    HighDensityScatterSeriesView.prototype.cc = function () {
        var a = truncate(Math.round(this.bx.left));
        var b = truncate(Math.round(this.bx.left));
        var c = truncate(Math.round(this.bx.width));
        var d = truncate(Math.round(this.bx.height));
        this.b3.h().putImageData(this.b6, 0, 0);
        this.as();
    };
    HighDensityScatterSeriesView.prototype.cb = function (a) {
        if (this.e.jf != null) {
            this.e.jf.setTimeout(a, 0);
        }
        else {
            window.setTimeout(a, 0);
        }
    };
    HighDensityScatterSeriesView.prototype.a8 = function (a, b) {
        _super.prototype.a8.call(this, a, b);
        if (b) {
            if (!this.b2.fs) {
                return;
            }
            var c = new Rectangle();
            c.n = this.bx.left;
            c.o = this.bx.top;
            c.width = this.bx.width;
            c.height = this.bx.height;
            c._fill = this.br();
            a.w(c);
            return;
        }
        if (this.b5 == null) {
            return;
        }
        var d = truncate(Math.round(this.bx.left));
        var e = truncate(Math.round(this.bx.top));
        var f = truncate(Math.round(this.bx.width));
        var g = truncate(Math.round(this.bx.height));
        this.k.o(this.b5.getNativeElement(), this.e._opacity, d, e, f, g, d, e, f, g);
    };
    HighDensityScatterSeriesView.prototype.b4 = function (a, b) {
        return Color.e(toNullable(Color.$, a), toNullable(Color.$, null)) && Color.e(toNullable(Color.$, b), toNullable(Color.$, null));
    };
    HighDensityScatterSeriesView.prototype.ca = function () {
        if (this.b0 != null) {
            for (var a = 0; a < this.b0.length; a++) {
                this.b0[a] = 0;
            }
            this.cc();
        }
    };
    HighDensityScatterSeriesView.prototype.an = function (a) {
        _super.prototype.an.call(this, a);
        if (this.b0 == null) {
            this.e.a4.exportSeriesPixelsData(a, null, this.b8, this.b7);
            return;
        }
        var b = new Array(intDivide(this.b0.length, 4));
        var c;
        for (var d = 0; d < intDivide(this.b0.length, 4); d++) {
            c = d * 4;
            b[d] = this.b0[c + 3] << 24 | this.b0[c] << 16 | this.b0[c + 1] << 8 | this.b0[c + 2];
        }
        this.e.a4.exportSeriesPixelsData(a, b, this.b8, this.b7);
    };
    HighDensityScatterSeriesView.$t = markType(HighDensityScatterSeriesView, 'HighDensityScatterSeriesView', SeriesView.$);
    return HighDensityScatterSeriesView;
}(SeriesView));
export { HighDensityScatterSeriesView };
