/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { MarkerSeries } from "./MarkerSeries";
import { Base, runOn, delegateCombine, Number_$type, enumGetBox, Point_$type, typeCast, fromEnum, markType, markDep } from "igniteui-react-core";
import { PolarAxisInfoCache } from "./PolarAxisInfoCache";
import { SeriesRenderer$2 } from "./SeriesRenderer$2";
import { PolarFrame } from "./PolarFrame";
import { DependencyProperty } from "igniteui-react-core";
import { NumericAngleAxis } from "./NumericAngleAxis";
import { NumericRadiusAxis } from "./NumericRadiusAxis";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { ScatterItemSearchMode_$type } from "./ScatterItemSearchMode";
import { HighlightingInfo } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { PolarAxes } from "./PolarAxes";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { SeriesRenderingArguments } from "./SeriesRenderingArguments";
import { AxisRange } from "./AxisRange";
import { Dictionary$2 } from "igniteui-react-core";
import { OwnedPoint } from "./OwnedPoint";
import { GeometryUtil } from "igniteui-react-core";
import { DataContext } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { Clipper } from "igniteui-react-core";
import { PolarTrendLineManager } from "./PolarTrendLineManager";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { AssigningPolarStyleEventArgs } from "./AssigningPolarStyleEventArgs";
import { AssigningPolarMarkerStyleEventArgs } from "./AssigningPolarMarkerStyleEventArgs";
import { SeriesRenderManager } from "./SeriesRenderManager";
import { DataLegendSeriesValueInfo } from "igniteui-react-core";
import { DataLegendSeriesContext } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { NumericMarkerManager } from "./NumericMarkerManager";
import { GeometryGroup } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var PolarBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarBase, _super);
    function PolarBase() {
        var _this = _super.call(this) || this;
        _this.w7 = null;
        _this.wy = null;
        _this.w5 = null;
        _this.aan = null;
        _this.aam = null;
        _this.xj = null;
        _this.xq = null;
        _this.xr = null;
        _this.xb = new PolarFrame();
        _this.xd = new PolarFrame();
        _this.w9 = new PolarFrame();
        _this.w4 = null;
        _this.x9 = null;
        _this.xf = 1;
        _this.xv = false;
        _this.xu = false;
        _this.xo = null;
        _this.xp = null;
        _this.assigningPolarStyle = null;
        _this.assigningPolarMarkerStyle = null;
        _this.xe = null;
        _this.xc = null;
        _this.w8 = null;
        _this.xe = new PolarSeriesRenderManager();
        _this.xg = _this.xh();
        _this.xc = new PolarFrame();
        _this.xd.x = runOn(_this, _this.aal);
        _this.xb.x = runOn(_this, _this.aal);
        _this.w9.x = runOn(_this, _this.aal);
        _this.xj = new SeriesRenderer$2(PolarFrame.$, PolarBaseView.$, 0, runOn(_this, _this.zm), runOn(_this, _this.zq), runOn(_this, _this.dr), runOn(_this, _this.q0), runOn(_this, _this.zf));
        return _this;
    }
    PolarBase.prototype.ci = function () {
        return new PolarBaseView(this);
    };
    PolarBase.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.w6 = a;
    };
    PolarBase.prototype.n4 = function () {
        _super.prototype.n4.call(this);
        this.w2 = null;
        this.w3 = null;
    };
    PolarBase.prototype.get_fa = function () {
        return true;
    };
    PolarBase.prototype.dz = function (a, b, c, d) {
        var _this = this;
        if (!this.hasMarkers) {
            return false;
        }
        var e = this.w2;
        var f = new ScalerParams(1, this.c1.vh, this.u9, e.ch);
        f.c = this.getEffectiveViewport1(this.cl);
        var g = this.w3;
        var h = new ScalerParams(1, this.c1.vh, this.u9, g.ch);
        h.c = this.getEffectiveViewport1(this.cl);
        a.clear();
        this.vl.ci(function (i) {
            if (i._visibility == 0) {
                var j = new SeriesPointOfInterest();
                var k = i.n;
                var l = i.o;
                if (k < _this.u9.left || k > _this.u9.right || l < _this.u9.top || l > _this.u9.bottom) {
                    return;
                }
                var m = void 0;
                var n = void 0;
                var o = _this.w4.f(k, l, _this.cl.by, _this.cl.bx, m, n);
                m = o.p4;
                n = o.p5;
                j.b = m;
                j.c = n;
                j.a = i.content;
                a.add(j);
            }
        });
        return true;
    };
    PolarBase.prototype.zf = function () {
        if (this.c2.g) {
            this.c2.t();
        }
    };
    PolarBase.prototype.zh = function () {
        this.w4.e(this.w7.w, this.xs, this.xt, this.aan, this.aam, function (a, b) { return Math.cos(b); }, function (a, b) { return Math.sin(b); }, true);
    };
    PolarBase.prototype.fv = function () {
        return this.highlightedItemsSource != null || (this.yx != null && this.yv != null);
    };
    PolarBase.prototype.x7 = function () {
        return false;
    };
    PolarBase.prototype.hb = function () {
        var a = _super.prototype.hb.call(this);
        {
            var b = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.ad = "AngleMemberPath";
                $ret.p = true;
                $ret.y = "HighlightedAngleMemberPath";
                $ret.q = true;
                return $ret;
            })());
            b.valueResolving = delegateCombine(b.valueResolving, runOn(this, this.zi));
            a.add(b);
        }
        {
            var c = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.ad = "RadiusMemberPath";
                $ret.p = true;
                $ret.y = "HighlightedRadiusMemberPath";
                $ret.q = true;
                return $ret;
            })());
            c.valueResolving = delegateCombine(c.valueResolving, runOn(this, this.zj));
            a.add(c);
        }
        if (this.x7()) {
            var d = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "DashArray";
                $ret.p = true;
                $ret.x = ((function () {
                    var $ret = new DoubleCollection();
                    $ret.add(5);
                    $ret.add(5);
                    return $ret;
                })());
                $ret.q = true;
                return $ret;
            })());
            a.add(d);
        }
        if (!this.x7()) {
            var e = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "Brush";
                $ret.p = true;
                $ret.y = "ActualBrush";
                $ret.q = true;
                return $ret;
            })());
            e.valueResolving = delegateCombine(e.valueResolving, runOn(this, this.qu));
            a.add(e);
        }
        if (!this.x7()) {
            var f = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "Outline";
                $ret.p = true;
                $ret.y = "ActualOutline";
                $ret.q = true;
                return $ret;
            })());
            f.valueResolving = delegateCombine(f.valueResolving, runOn(this, this.qu));
            a.add(f);
        }
        return a;
    };
    PolarBase.prototype.zj = function (a, b) {
        if (this.yx != null) {
            b.value = this.yx;
            return;
        }
        b.value = this.za;
    };
    PolarBase.prototype.zi = function (a, b) {
        if (this.yv != null) {
            b.value = this.yv;
            return;
        }
        b.value = this.ys;
    };
    Object.defineProperty(PolarBase.prototype, "xs", {
        get: function () {
            return this.xq;
        },
        set: function (a) {
            if (this.xq != a) {
                var b = this.xs;
                this.xq = a;
                this.raisePropertyChanged("AngleColumn", b, this.xs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBase.prototype, "xt", {
        get: function () {
            return this.xr;
        },
        set: function (a) {
            if (this.xr != a) {
                var b = this.xt;
                this.xr = a;
                this.raisePropertyChanged("RadiusColumn", b, this.xt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBase.prototype, "aag", {
        get: function () {
            return this.c(PolarBase.zr);
        },
        set: function (a) {
            this.h(PolarBase.zr, a);
        },
        enumerable: false,
        configurable: true
    });
    PolarBase.prototype.xa = function () {
        var a = this.w9;
        if (this.dr()) {
            if (this.c2.g) {
                this.c2.t();
            }
            a = this.xd;
        }
        return a;
    };
    PolarBase.prototype.o6 = function () {
        _super.prototype.o6.call(this);
        if (this.w3 != null) {
            this.w3.h8(false);
        }
        if (this.w2 != null) {
            this.w2.h8(false);
        }
    };
    PolarBase.prototype.oc = function (a, b, c, d) {
        var e = false;
        this.w6.cy.g$e(a, b, c, d);
        if (this.w2 != null && !this.w2.c1()) {
            e = true;
        }
        if (this.w3 != null && !this.w3.c1()) {
            e = true;
        }
        if (e) {
            this.qm(true);
        }
    };
    PolarBase.prototype.rj = function (a, b) {
        this.qm(false);
    };
    PolarBase.prototype.rk = function (a, b) {
        this.qm(false);
    };
    PolarBase.prototype.gw = function (a, b, c) {
        var d = true;
        if (!_super.prototype.gw.call(this, a, b, c) || !c.o() || b.isEmpty || a.isEmpty || this.w2 == null || this.w3 == null || this.xs == null || this.xt == null || this.xs.count == 0 || this.xt.count == 0 || this.dd == null || this.dd.count != this.xs.count || this.dd.count != this.xt.count || this.w4 == null || this.w2.bi == null || this.w3.bi == null || this.w2.lx == this.w2.lw || this.w3.lx == this.w3.lw) {
            d = false;
        }
        return d;
    };
    PolarBase.prototype.qn = function (a) {
        _super.prototype.qn.call(this, a);
        var b;
        var c;
        var d = this.getViewInfo(c, b);
        c = d.p0;
        b = d.p1;
        if (!this.gw(c, b, this.cl)) {
            this.n7(true, this.cl);
            return;
        }
        this.aan = b;
        this.aam = c;
        this.w5 = new PolarAxisInfoCache(this.w2, this.w3, this.dd);
        var e = new SeriesRenderingArguments(this, c, b, a, this.gb);
        var f = this.xj.g(e, this.xb, this.w9, this.xd, this.w6);
        this.xb = f.p1;
        this.w9 = f.p2;
        this.xd = f.p3;
    };
    PolarBase.prototype.aal = function (a) {
        var b = this.w4.h(a.x, a.y, this.aan, this.aam, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
        return b;
    };
    PolarBase.prototype.aq = function (a) {
        if (a != null && a == this.w2 && this.xs != null) {
            return new AxisRange(this.xs.minimum, this.xs.maximum);
        }
        if (a != null && a == this.w3 && this.xt != null) {
            return new AxisRange(this.xt.minimum, this.xt.maximum);
        }
        return null;
    };
    PolarBase.prototype.fx = function (a) {
        var b = this.cl.by;
        b = b.copy();
        var c = this.cl.bx;
        var d = !b.isEmpty && !c.isEmpty && this.dd != null ? this.dd.indexOf(a) : -1;
        if (this.w2 == null || this.xs == null || this.w3 == null || this.xt == null) {
            return false;
        }
        if (d < 0 || d > this.xs.count - 1 || d > this.xt.count - 1) {
            return false;
        }
        var e = this.w2.getScaledAngle(this.xs.item(d));
        var f = this.w3.nu(this.xt.item(d));
        var g = 0.5 + (Math.cos(e) * f);
        var h = 0.5 + (Math.sin(e) * f);
        if (!isNaN_(g)) {
            if (g < b.left + 0.1 * b.width) {
                g = g + 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
            if (g > b.right - 0.1 * b.width) {
                g = g - 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
        }
        if (!isNaN_(h)) {
            if (h < b.top + 0.1 * b.height) {
                h = h + 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
            if (h > b.bottom - 0.1 * b.height) {
                h = h - 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
        }
        if (this.ct != null) {
            this.ct.au(this.c1, b, true);
        }
        return d >= 0;
    };
    PolarBase.prototype.j2 = function (a) {
        var b = this.jj(a);
        if (this.dd != null && b >= 0 && b < this.dd.count) {
            return this.dd.item(b);
        }
        return null;
    };
    PolarBase.prototype.jj = function (a) {
        var b = truncate(Math.round(this.h6(a)));
        return b;
    };
    PolarBase.prototype.h6 = function (a) {
        switch (this.xg) {
            case 1: return this.yd(a);
            case 3: return this.ye(a);
            case 2: return this.yb(a);
            case 4: return this.yc(a);
        }
        return -1;
    };
    PolarBase.prototype.yc = function (a) {
        return this.yf(a, false);
    };
    PolarBase.prototype.yb = function (a) {
        var b = this.up(a);
        var c = b.x;
        var d = b.y;
        if (this.dd == null || this.w2 == null || this.w3 == null || this.xs == null || this.xt == null) {
            return -1;
        }
        if (this.dd.count > this.yh) {
            return -1;
        }
        if (!this.xz()) {
            return -1;
        }
        var e = this.x9;
        var f = 1.7976931348623157E+308;
        var g = -1;
        for (var h = 0; h < this.xs.count; h++) {
            var i = e._inner[h].x;
            var j = e._inner[h].y;
            var k = (c - i) * (c - i) + (d - j) * (d - j);
            if (k < f) {
                f = k;
                g = h;
            }
        }
        return g;
    };
    PolarBase.prototype.xz = function () {
        var a = this.w9;
        if (this.dr()) {
            a = this.xd;
        }
        if (a == null || a.w.count == 0) {
            return false;
        }
        this.x9 = a.w;
        return true;
    };
    PolarBase.prototype.yf = function (a, b) {
        if (!this.x2) {
            return -1;
        }
        var c = { $type: Point_$type, x: 0, y: 0 };
        var d = true;
        var e = this.w9;
        if (this.dr()) {
            e = this.xd;
        }
        if (e == null) {
            return -1;
        }
        if (e.m == null) {
            return -1;
        }
        if (this.dd == null || this.dd.count > this.yh) {
            return -1;
        }
        if (!this.xz()) {
            return -1;
        }
        var f = this.x9;
        var g = this.up(a);
        var h = 1.7976931348623157E+308;
        var i = -1;
        for (var j = 0; j < f.count; j++) {
            var k = f._inner[j];
            if (j > 0) {
                if (isNaN_(k.x) || isNaN_(k.y) || isNaN_(c.x) || isNaN_(c.y)) {
                    c = k;
                    continue;
                }
                if (!b || e.j.containsKey(this.dd.item(j)) || e.j.containsKey(this.dd.item(j - 1))) {
                    var l = GeometryUtil.d(g, c, k);
                    if (l < h) {
                        h = l;
                        i = j;
                    }
                }
            }
            c = k;
        }
        if (i >= 0) {
            var m = f._inner[i];
            var n = f._inner[i - 1];
            if (!b || (e.j.containsKey(this.dd.item(i)) && e.j.containsKey(this.dd.item(i - 1)))) {
                var o = GeometryUtil.i(g, n, m);
                return (i - 1) + o;
            }
            else if (e.j.containsKey(this.dd.item(i))) {
                return i;
            }
            else {
                return i - 1;
            }
        }
        return -1;
    };
    PolarBase.prototype.ye = function (a) {
        return this.yf(a, true);
    };
    PolarBase.prototype.yd = function (a) {
        var _this = this;
        var b = null;
        var c = 1.7976931348623157E+308;
        var d = this.up(a);
        var e = d.x;
        var f = d.y;
        if (this.w6.cz.e > this.yh) {
            return -1;
        }
        this.w6.c2(function (g) {
            if (g._visibility == 0) {
                var h = _this.w6.cs(g);
                var i = h.left + h.width / 2;
                var j = h.top + h.height / 2;
                var k = (e - i) * (e - i) + (f - j) * (f - j);
                if (k < c) {
                    c = k;
                    b = g;
                }
            }
        });
        if (b != null) {
            return b.ak;
        }
        return -1;
    };
    PolarBase.prototype.uu = function (a, b, c) {
        var _this = this;
        if (this.w2 == null || this.w3 == null || this.xs == null || this.xt == null) {
            return { $type: Point_$type, x: NaN, y: NaN };
        }
        var d = this.cl.by;
        var e = this.cl.bx;
        var f = this.getEffectiveViewport();
        var g = new ScalerParams(0, d, e, this.w2.ch, f);
        var h = ((function () {
            var $ret = new ScalerParams(0, d, e, _this.w3.ch, f);
            $ret.b = _this.id();
            return $ret;
        })());
        if (b) {
            var i = this.h6(a);
            if (i == -1) {
                return { $type: Point_$type, x: NaN, y: NaN };
            }
            var j = truncate(Math.floor(i));
            var k = truncate(Math.ceil(i));
            if (j < 0) {
                j = 0;
            }
            if (k < 0) {
                k = 0;
            }
            if (k > this.dd.count - 1) {
                k = this.dd.count - 1;
            }
            if (j > this.dd.count - 1) {
                j = this.dd.count - 1;
            }
            if (k == j) {
                return this.w4.h(this.xs.item(j), this.xt.item(j), d, e, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
            }
            var l = i - Math.floor(i);
            var m = this.w4.h(this.xs.item(j), this.xt.item(j), d, e, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
            var n = this.w4.h(this.xs.item(k), this.xt.item(k), d, e, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
            var o = m.x;
            var p = m.y;
            var q = n.x;
            var r = n.y;
            var s = q - o;
            var t = r - p;
            return { $type: Point_$type, x: o + s * l, y: p + t * l };
        }
        else {
            var u = this.jj(a);
            if (u == -1) {
                return { $type: Point_$type, x: NaN, y: NaN };
            }
            return this.w4.h(this.xs.item(u), this.xt.item(u), d, e, this.w5.e, this.w5.d, this.w5.g, this.w5.f, this.w5.i, this.w5.h);
        }
    };
    PolarBase.prototype.ag = function () {
        return [this.w2, this.w3];
    };
    PolarBase.prototype.j5 = function (a, b) {
        var c = this.mh(b);
        if (c == PolarBase.$$p[3]) {
            return this.j6(a, b, this.ys);
        }
        if (c == PolarBase.$$p[15]) {
            return this.j6(a, b, this.za);
        }
        if (c == PolarBase.$$p[5]) {
            return this.j6(a, b, this.yv);
        }
        if (c == PolarBase.$$p[6]) {
            return this.j6(a, b, this.yx);
        }
        return _super.prototype.j5.call(this, a, b);
    };
    PolarBase.prototype.li = function (a) {
        var b = this.mh(a);
        if (b == PolarBase.$$p[3]) {
            return this.ys;
        }
        if (b == PolarBase.$$p[15]) {
            return this.za;
        }
        if (b == PolarBase.$$p[5]) {
            return this.yv;
        }
        if (b == PolarBase.$$p[6]) {
            return this.yx;
        }
        return _super.prototype.li.call(this, a);
    };
    PolarBase.prototype.p5 = function (a, b, c, d) {
        _super.prototype.p5.call(this, a, b, c, d);
        if (this.w6.cy.g$b(a, b, c, d)) {
            this.qm(false);
            this.ph();
        }
        switch (b) {
            case PolarBase.$$p[1]:
            case PolarBase.$$p[2]:
            case PolarBase.$$p[13]:
            case PolarBase.$$p[14]:
                this.pb();
                break;
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.xs);
                    c.deregisterColumn(this.xt);
                    this.xs = null;
                    this.xt = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.xs = this.da(this.ys);
                    this.xt = this.da(this.za);
                }
                if ((this.w3 != null && !this.w3.c1()) || (this.w2 != null && !this.w2.c1())) {
                    this.qm(this.f0 && c != null);
                }
                break;
            case PolarBase.$$p[0]:
                if (this.w2 != null && this.w3 != null) {
                    this.w4 = new PolarAxes(this.w3, this.w2);
                }
                if (c != null) {
                    c.b0(this);
                }
                if (d != null) {
                    d.ct(this);
                }
                if (this.w2 != null && !this.w2.c1()) {
                    this.qm(false);
                }
                else if (c != null && d == null) {
                    this.n7(true, this.cl);
                }
                break;
            case PolarBase.$$p[12]:
                if (this.w2 != null && this.w3 != null) {
                    this.w4 = new PolarAxes(this.w3, this.w2);
                }
                if (c != null) {
                    c.b0(this);
                }
                if (d != null) {
                    d.ct(this);
                }
                if (this.w3 != null && !this.w3.c1()) {
                    this.qm(false);
                }
                else if (c != null && d == null) {
                    this.n7(true, this.cl);
                }
                if (this.w2 != null && !this.w2.c1()) {
                    this.w2.h4();
                }
                break;
            case PolarBase.$$p[3]:
                if (this.dd != null) {
                    this.dd.deregisterColumn(this.xs);
                    this.xs = this.da(this.ys);
                }
                break;
            case "AngleColumn":
                this.w6.cy.g$i();
                if (this.w2 != null && !this.w2.c1()) {
                    this.qm(this.f0 && this.dv);
                }
                break;
            case PolarBase.$$p[15]:
                if (this.dd != null) {
                    this.dd.deregisterColumn(this.xt);
                    this.xt = this.da(this.za);
                }
                break;
            case "RadiusColumn":
                this.w6.cy.g$i();
                if (this.w3 != null && !this.w3.c1()) {
                    this.qm(this.f0 && this.dv);
                }
                break;
            case PolarBase.$$p[16]:
                this.qm(false);
                this.ph();
                break;
            case PolarBase.$$p[11]:
                this.qm(false);
                this.ph();
                break;
            case "TransitionProgress":
                this.w5 = new PolarAxisInfoCache(this.w2, this.w3, this.dd);
                this.aan = this.cl.by;
                this.aam = this.cl.bx;
                this.xd.v = this.x8;
                this.xd.c(this.i6, this.xb, this.w9);
                if (this.dt(this.cl)) {
                    return;
                }
                if (this.i6 == 1) {
                    this.zq(this.w9, this.w6);
                    this.pk();
                }
                else {
                    this.zq(this.xd, this.w6);
                }
                if (this.c1 != null) {
                    this.c1.p6(this);
                }
                break;
            case "TrendLineBrush":
                this.qb(b);
                break;
            case PolarBase.$$p[4]:
                this.qm(false);
                this.ph();
                break;
            case "TrendLineType":
                this.ph();
                break;
            case PolarBase.$$p[8]:
                this.xv = this.x4();
                this.qm(false);
                break;
            case PolarBase.$$p[7]:
                this.xu = this.x3();
                this.qm(false);
                break;
            case PolarBase.$$p[9]:
                this.xg = this.xh();
                break;
        }
    };
    Object.defineProperty(PolarBase.prototype, "xg", {
        get: function () {
            return this.xf;
        },
        set: function (a) {
            var b = this.xf;
            this.xf = a;
            if (b != this.xf) {
                this.raisePropertyChanged("ActualItemSearchMode", enumGetBox(ScatterItemSearchMode_$type, b), enumGetBox(ScatterItemSearchMode_$type, this.xf));
            }
        },
        enumerable: false,
        configurable: true
    });
    PolarBase.prototype.xh = function () {
        if (this.xi != 0) {
            return this.xi;
        }
        return this.x2 ? 4 : 1;
    };
    PolarBase.prototype.get_x2 = function () {
        return false;
    };
    Object.defineProperty(PolarBase.prototype, "x2", {
        get: function () {
            return this.get_x2();
        },
        enumerable: false,
        configurable: true
    });
    PolarBase.prototype.x4 = function () {
        return this.x1;
    };
    PolarBase.prototype.x3 = function () {
        return this.x0;
    };
    PolarBase.prototype.xx = function (a) {
        if (typeCast(NumericRadiusAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    PolarBase.prototype.xw = function (a) {
        if (typeCast(NumericAngleAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    PolarBase.prototype.n7 = function (a, b) {
        _super.prototype.n7.call(this, a, b);
        var c = b;
        if (a) {
            c.cz.clear();
        }
        c.cy.g$d();
    };
    PolarBase.prototype.wz = function (a, b) {
        var c = a.top - 10;
        var d = a.bottom + 10;
        var e = a.left - 10;
        var f = a.right + 10;
        var g = ((function () {
            var $ret = new Clipper(1, e, d, f, c, false);
            $ret.i = b;
            return $ret;
        })());
        return g;
    };
    PolarBase.prototype.ze = function (a, b, c, d) {
        a.g = new Dictionary$2(Base.$, OwnedPoint.$, 1, b);
        var e = this.dd;
        var _loop_1 = function (f) {
            var g = a.w._inner[f];
            if (!isInfinity(g.x) && !isInfinity(g.y)) {
                var h_1 = { $type: Point_$type, x: this_1.xs.item(f), y: this_1.xt.item(f) };
                var i_1 = { $type: Point_$type, x: g.x, y: g.y };
                a.g.addItem(e.item(f), ((function () {
                    var $ret = new OwnedPoint();
                    $ret.a = e.item(f);
                    $ret.b = h_1;
                    $ret.c = i_1;
                    return $ret;
                })()));
            }
        };
        var this_1 = this;
        for (var f = 0; f < b; f++) {
            _loop_1(f);
        }
    };
    PolarBase.prototype.zm = function (a, b) {
        var _this = this;
        var c = b.by;
        var d = b.bx;
        a.j.clear();
        a.n.clear();
        var e = Math.min(this.xs != null ? this.xs.count : 0, this.xt != null ? this.xt.count : 0);
        if (e < 1) {
            return;
        }
        this.w5 = new PolarAxisInfoCache(this.w2, this.w3, this.dd);
        this.w7 = a;
        this.aam = d;
        this.aan = c;
        b.cw.l(a.j, this.yi, c, d, this.hu);
        if (e <= this.yi) {
            this.ze(a, e, c, d);
        }
        var f = this.wz(d, a.n);
        var g = Math.min(this.w2.lx, this.w2.lw);
        var h = Math.max(this.w2.lw, this.w2.lx);
        b.cy.i = this.x8;
        b.cy.h = 0;
        b.cy.k = this.w3.no;
        b.cy.j = this.w3.nn;
        b.cy.l = function (i, j) { return _this.w4.c(i, j, c, d, Math.cos); };
        b.cy.m = function (i, j) { return _this.w4.d(i, j, c, d, Math.sin); };
        var i = new List$1(Number_$type, 0);
        for (var j = 0; j < this.xs.count; j++) {
            if (this.xs.item(j) >= g && this.xs.item(j) <= h) {
                i.add(this.xs.item(j));
            }
        }
        var k = this.xt;
        if (i.count != this.xs.count) {
            k = new List$1(Number_$type, 0);
            for (var l = 0; l < this.xs.count; l++) {
                if (this.xs.item(l) >= g && this.xs.item(l) <= h) {
                    k.add(this.xt.item(l));
                }
            }
        }
        b.cy.n(a.n, this.xk, i, k, this.yj, runOn(this.w2, this.w2.getScaledAngle), runOn(this.w3, this.w3.nu), ((function () {
            var $ret = new TrendResolutionParams();
            $ret.d = _this.hu;
            $ret.h = d;
            $ret.i = c;
            return $ret;
        })()), f, g, h);
    };
    PolarBase.prototype.get_ez = function () {
        return true;
    };
    PolarBase.prototype.xm = function (a, b, c) {
        return null;
    };
    PolarBase.prototype.xn = function (a, b, c) {
        var d = this.xa();
        var e = this.w6.b1(this.up(b));
        var f = -1;
        if (e == null) {
            if (a != null) {
                f = this.dd.indexOf(a);
            }
            else {
                return null;
            }
        }
        else {
            f = e.ak;
        }
        if (f == -1) {
            return null;
        }
        var g = new HighlightingInfo();
        g.i = this;
        g.g = f;
        g.f = f;
        g.c = false;
        g.d = true;
        if (c != null && c.g == g.g && c.f == g.f) {
            return c;
        }
        return g;
    };
    PolarBase.prototype.xl = function (a, b, c) {
        var d = new HighlightingInfo();
        d.i = this;
        d.g = 0;
        d.f = this.dd.count - 1;
        d.c = true;
        if (c != null && c.g == d.g && c.f == d.f) {
            return c;
        }
        return d;
    };
    PolarBase.prototype.c6 = function (a, b, c) {
        if (this.d1 && this.fk(this.bo) && !c) {
            var d = this.xm(a, b, this.xo);
            this.xo = d;
            return d;
        }
        else {
            var e = this.xl(a, b, this.xo);
            this.xo = e;
            return e;
        }
    };
    PolarBase.prototype.c7 = function (a, b, c) {
        if (this.fk(this.bo) && !c) {
            var d = this.xn(a, b, this.xp);
            this.xp = d;
            return d;
        }
        else {
            var e = this.xl(a, b, this.xp);
            e.d = true;
            this.xp = e;
            return e;
        }
    };
    PolarBase.prototype.x6 = function () {
        return (this.assigningPolarStyle != null && this.xv) || (this.bo != 1);
    };
    PolarBase.prototype.x5 = function () {
        return (this.assigningPolarMarkerStyle != null && this.xu) || (this.bo != 1) || (this.cf != 1) || (this.ce != 1);
    };
    PolarBase.prototype.zq = function (a, b) {
        this.pt();
        var c = b.by;
        var d = b.bx;
        var e = this.getEffectiveViewport1(b);
        var f = this.u1(b);
        this.w5 = new PolarAxisInfoCache(this.w2, this.w3, this.dd);
        if (this.vr()) {
            b.cw.j(a.j, this.vt);
            if (this.x5()) {
                this.zg(b, a);
            }
        }
        b.cp();
        var g = this.wz(d, b.cy.g$j.an);
        b.cy.g$h(a.n, g);
        this.zd(d, c, e, f, b);
    };
    PolarBase.prototype.ww = function (a, b) {
        return this.wx(a, b);
    };
    PolarBase.prototype.wx = function (a, b) {
        if (b < a || a < 0 || a > this.xs.count || b < 0 || b > this.xs.count) {
            return null;
        }
        var c = new Array((b - a) + 1);
        for (var d = a; d <= b; d++) {
            var e = d;
            c[d - a] = this.dd.item(d);
        }
        return c;
    };
    PolarBase.prototype.zg = function (a, b) {
        var _this = this;
        a.b6 = true;
        this.xe.ay(this, this.x5(), runOn(this, this.ww));
        var c = this.xe.d;
        var d = c != null;
        var e = this.getEffectiveViewport1(a);
        var f = this.dd == null ? 0 : this.dd.count;
        this.w6.ci(function (g) {
            if (g._visibility == 0) {
                var h = g.ak;
                var i = g.content;
                if (i == null) {
                    i = new DataContext();
                    g.content = i;
                }
                if (d) {
                    _this.zk(h, f, a.q);
                }
                _this.xe.ac(g, i);
            }
        });
    };
    PolarBase.prototype.zl = function (a, b, c) {
        var d = this.bo != 1;
        var e = this.cf != 1;
        var f = this.ce != 1;
        this.xe.a0(this.xe.b, a, b, false);
        this.xe.ab(this.hs);
        var g = this.xe.ax;
        var h = null;
        var i = null;
        var j = null;
        var k = this.dd;
        if (d && this.c1 != null) {
            h = this.c1.dj.getHighlightingInfo(this, k, g.z, g.y, false);
            g.c = h;
        }
        if (e && this.c1 != null) {
            i = this.c1.dk.getHighlightingInfo(this, k, g.z, g.y, false);
            if (i == null && this.be != null) {
                i = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, g.z, g.y, false);
            }
            g.d = i;
        }
        if (f && this.c1 != null) {
            j = this.c1.di.getHighlightingInfo(this, k, g.z, g.y, false);
            g.b = j;
        }
        g.h = c;
        this.zo(g);
        this.xe.z(this, h, i, j, c, d, e, f, a < 0);
    };
    PolarBase.prototype.zk = function (a, b, c) {
        var d = this.bo != 1;
        var e = this.cf != 1;
        var f = this.ce != 1;
        this.xe.a0(this.xe.d, a, b, true);
        this.xe.aa(this.hs);
        var g = this.xe.aw;
        var h = null;
        var i = null;
        var j = null;
        var k = this.dd;
        var l = null;
        var m = null;
        var n = null;
        if (d && this.c1 != null) {
            h = this.c1.dj.getHighlightingInfo(this, k, g.z, g.y, true);
            if (this.c1.dj.isCrossContextHighlight(this)) {
                l = this.c1.dj.getHighlightingInfo(this, k, g.z, g.y, true);
            }
            g.c = h;
        }
        if (e && this.c1 != null) {
            i = this.c1.dk.getHighlightingInfo(this, k, g.z, g.y, true);
            if (i == null && this.be != null) {
                i = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, g.z, g.y, true);
            }
            if (this.c1.dk.isCrossContextHighlight(this)) {
                m = this.c1.dk.getHighlightingInfo(this, k, g.z, g.y, true);
            }
            g.d = i;
        }
        if (f && this.c1 != null) {
            j = this.c1.di.getHighlightingInfo(this, k, g.z, g.y, true);
            if (this.c1.di.isCrossContextHighlight(this)) {
                n = this.c1.di.getHighlightingInfo(this, k, g.z, g.y, true);
            }
            g.d = i;
        }
        g.h = c;
        this.zn(g);
        this.xe.y(this, h, i, j, c, d, e, f, g.v, this.c1.dj.totalHighWaterMark, g.x, this.c1.dk.totalHighWaterMark, g.t, this.c1.di.totalHighWaterMark);
    };
    PolarBase.prototype.zo = function (a) {
        if (this.assigningPolarStyle != null && this.xv) {
            this.assigningPolarStyle(this, a);
        }
    };
    PolarBase.prototype.zn = function (a) {
        if (this.assigningPolarMarkerStyle != null && this.xu) {
            this.assigningPolarMarkerStyle(this, a);
        }
    };
    PolarBase.prototype.zd = function (a, b, c, d, e) {
        e.c1(a, b, c, d);
    };
    PolarBase.prototype.ra = function () {
        _super.prototype.ra.call(this);
        if (this.index < 0) {
            return;
        }
        this.w6.c4();
    };
    PolarBase.prototype.qo = function (a, b) {
        _super.prototype.qo.call(this, a, b);
        if (!this.gj) {
            this.cl.a4(b);
            return;
        }
        this.cl.a4(b);
        if (this.dt(this.ck)) {
            return;
        }
        var c = this.ck;
        if (!this.gc) {
            this.xc = new PolarFrame();
            this.zm(this.xc, c);
        }
        this.gc = false;
        this.zq(this.xc, c);
        this.gj = false;
    };
    PolarBase.prototype.ql = function (a, b, c, d, e) {
        _super.prototype.ql.call(this, a, b, c, d, e);
        var f = this.a2.a$i.item(d);
        var g = f;
        f.a3(c);
        if (this.dt(g)) {
            return;
        }
        if (this.w8 == null) {
            this.w8 = new PolarFrame();
        }
        this.zm(this.w8, g);
        this.zq(this.w8, g);
    };
    PolarBase.prototype.zp = function (a, b) {
        var e_1, _a, e_2, _b;
        var c = new List$1(Base.$, 0);
        try {
            for (var _c = __values(fromEnum(b.c)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var d = _d.value;
                if (!a.containsKey(d)) {
                    c.add1(d);
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                b.h(e);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
    };
    PolarBase.prototype.wv = function (a, b, c) {
        this.zh();
        return this.w7.w.toArray();
    };
    PolarBase.prototype.ya = function (a) {
        var e_3, _a;
        var b = new List$1(Number_$type, 0);
        var c = this.dd;
        try {
            for (var _b = __values(fromEnum(this.w6.cz.c)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                b.add(c.indexOf(d));
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        return b;
    };
    PolarBase.prototype.aak = function (a) {
        return { $type: Point_$type, x: this.xs.item(a), y: this.xt.item(a) };
    };
    PolarBase.prototype.ow = function (a) {
        _super.prototype.ow.call(this, a);
        this.a4.exportTrendlineData(this, a, this.w6.cy.g$j);
    };
    PolarBase.prototype.getDataLegendSeriesContextAt = function (a, b) {
        var c = { $type: Point_$type, x: a, y: b };
        var d = this.j2(c);
        var e = d == null ? NaN : this.ic(d, "RadiusMemberPath");
        var f = d == null ? NaN : this.ic(d, "AngleMemberPath");
        var g = new DataLegendSeriesValueInfo();
        g.l = e;
        g.a = 11;
        g.r = this.za != null ? this.za : "Radius";
        g.q = "Radius";
        g.s = this.y6 != null ? this.y6 : "R:";
        g.t = this.y8 != null ? this.y8 : "";
        var h = new DataLegendSeriesValueInfo();
        h.l = f;
        h.a = 10;
        h.r = this.ys != null ? this.ys : "Angle";
        h.q = "Angle";
        h.s = this.yo != null ? this.yo : "A:";
        h.t = this.yq != null ? this.yq : "";
        var i = new DataLegendSeriesContext();
        i.e = ((function () {
            var $ret = new List$1(DataLegendSeriesValueInfo.$, 0);
            $ret.add(g);
            $ret.add(h);
            return $ret;
        })());
        i.h = this.lh();
        return i;
    };
    PolarBase.$t = markType(PolarBase, 'PolarBase', MarkerSeries.$);
    PolarBase.zr = DependencyProperty.i("ActualTrendLineBrush", Brush.$, PolarBase.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    PolarBase.$$p = markDep(DependencyProperty, PropertyMetadata, PolarBase, 'raisePropertyChanged', ['AngleAxis:w2:zs', [NumericAngleAxis.$, null], 'AngleMemberAsLegendLabel:yo:zt', [2, null], 'AngleMemberAsLegendUnit:yq:zu', [2, null], 'AngleMemberPath:ys:zv', [2], 'ClipSeriesToBounds:xy:zw', [0, false], 'HighlightedAngleMemberPath:yv:zx', [2, null], 'HighlightedRadiusMemberPath:yx:zy', [2, null], 'IsCustomPolarMarkerStyleAllowed:x0:zz', [0, false], 'IsCustomPolarStyleAllowed:x1:z0', [0, false], 'ItemSearchMode:xi:z1', [ScatterItemSearchMode_$type, enumGetBox(ScatterItemSearchMode_$type, 0)], 'ItemSearchThreshold:yh:z2', [1, 10000], 'MaximumMarkers:yi:z3', [1, 400], 'RadiusAxis:w3:z4', [NumericRadiusAxis.$, null], 'RadiusMemberAsLegendLabel:y6:z5', [2, null], 'RadiusMemberAsLegendUnit:y8:z6', [2, null], 'RadiusMemberPath:za:z7', [2], 'UseCartesianInterpolation:x8:aaf', [0, true], 'TrendLineType:xk:aad', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness:yg:aac', [1, 1.5], 'TrendLinePeriod:yj:aab', [1, 7], 'TrendLineZIndex:yk:aae', [1, 1], 'TrendLineBrush:aah:z8', [Brush.$, null], 'TrendLineDashArray:aai:z9', [DoubleCollection.$], 'TrendLineDashCap:aaj:aaa', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return PolarBase;
}(MarkerSeries));
export { PolarBase };
/**
 * @hidden
 */
var PolarSeriesRenderManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarSeriesRenderManager, _super);
    function PolarSeriesRenderManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.aw = null;
        _this.ax = null;
        return _this;
    }
    PolarSeriesRenderManager.prototype.c = function () {
        this.aw = new AssigningPolarMarkerStyleEventArgs();
        return this.aw;
    };
    PolarSeriesRenderManager.prototype.a = function () {
        this.ax = new AssigningPolarStyleEventArgs();
        return this.ax;
    };
    PolarSeriesRenderManager.prototype.ay = function (a, b, c) {
        this.w(a, b, c);
    };
    PolarSeriesRenderManager.prototype.az = function (a, b, c) {
        this.x(a, b, c);
    };
    PolarSeriesRenderManager.prototype.a0 = function (a, b, c, d) {
        if (b == -1) {
            a.e = false;
            a.z = 0;
            a.y = c - 1;
        }
        else {
            if (d) {
                a.z = b;
                a.y = b;
            }
            else {
                a.e = false;
                a.z = b;
                a.y = b;
            }
        }
    };
    PolarSeriesRenderManager.$t = markType(PolarSeriesRenderManager, 'PolarSeriesRenderManager', SeriesRenderManager.$);
    return PolarSeriesRenderManager;
}(SeriesRenderManager));
export { PolarSeriesRenderManager };
/**
 * @hidden
 */
var PolarBaseView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarBaseView, _super);
    function PolarBaseView(a) {
        var _this = _super.call(this, a) || this;
        _this.cx = null;
        _this.cw = null;
        _this.cy = null;
        _this.cz = null;
        _this.cx = a;
        _this.cz = new HashPool$2(Base.$, Marker.$);
        _this.ck(_this.cz);
        _this.cy = new PolarTrendLineManager();
        return _this;
    }
    PolarBaseView.prototype.au = function () {
        _super.prototype.au.call(this);
        this.cw = this.cv();
        if (!this.q) {
            this.cx.yi = 1000;
            this.b4.vp = Defaults.e;
        }
    };
    PolarBaseView.prototype.c2 = function (a) {
        this.cz.g(a);
    };
    PolarBaseView.prototype.cv = function () {
        var _this = this;
        var a = new NumericMarkerManager(0, function (b) { return _this.cz.item(b); }, function (b) { return _this.cx.w5.c.item(b); }, runOn(this, this.c3), runOn(this, this.cu), runOn(this, this.c0));
        a.n = true;
        a.p = runOn(this.cx, this.cx.aak);
        return a;
    };
    PolarBaseView.prototype.c3 = function (a) {
        this.cx.zp(a, this.cz);
    };
    PolarBaseView.prototype.cu = function () {
        return this.cx.wv(this.cz, this.by, this.bx);
    };
    PolarBaseView.prototype.c0 = function () {
        return this.cx.ya(this.cz);
    };
    PolarBaseView.prototype.c1 = function (a, b, c, d) {
        if (this.cx.xy) {
            var e = new GeometryGroup();
            this.cx.w3.n2(e, a, b, c, d);
        }
        else {
        }
    };
    PolarBaseView.prototype.c4 = function () {
        if (this.cx.aah != null) {
            this.cx.aag = this.cx.aah;
        }
        else {
            this.cx.aag = this.cx.tw;
        }
    };
    PolarBaseView.prototype.ci = function (a) {
        this.cz.f(a);
    };
    PolarBaseView.prototype.a7 = function (a, b) {
        if (a.d) {
            if (this.cx.xk != 0 && !b) {
                var c = this.cy.g$j;
                c.ad = this.cx.yg;
                c._stroke = this.cx.aag;
                c.aj = this.cx.aaj;
                c.ai = this.cx.aai;
                a.v(c);
            }
        }
        _super.prototype.a7.call(this, a, b);
    };
    PolarBaseView.prototype.c5 = function () {
        return Rect.empty;
    };
    PolarBaseView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'><span>" + "${item." + this.cx.ys + "}" + "</span><br/><span";
        var b = this.e.a2.a$t(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.cx.title + ": </span><span class='ui-priority-primary'>" + "${item." + this.cx.za + "}</span></div>";
        return a;
    };
    PolarBaseView.$t = markType(PolarBaseView, 'PolarBaseView', MarkerSeriesView.$);
    return PolarBaseView;
}(MarkerSeriesView));
export { PolarBaseView };
