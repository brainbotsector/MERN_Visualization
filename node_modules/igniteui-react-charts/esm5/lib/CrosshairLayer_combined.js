/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { AnnotationLayer } from "./AnnotationLayer";
import { Brush } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Series } from "./Series";
import { Thickness } from "igniteui-react-core";
import { Visibility_$type } from "igniteui-react-core";
import { CrosshairLayerFrame } from "./CrosshairLayerFrame";
import { List$1 } from "igniteui-react-core";
import { Axis } from "./Axis";
import { Dictionary$2 } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { AxisAnnotation } from "./AxisAnnotation";
import { Base, Number_$type, enumGetBox, fromEnum, Point_$type, markType, markDep, runOn } from "igniteui-react-core";
import { AxisAnnotationFrameManager } from "./AxisAnnotationFrameManager";
import { Tuple$2 } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { DeviceUtils } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { PathFigure } from "igniteui-react-core";
import { LineSegment } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_, truncate } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { Defaults } from "./Defaults";
import { TranslateTransform } from "igniteui-react-core";
import { LineGeometry } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
var CrosshairLayer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CrosshairLayer, _super);
    function CrosshairLayer() {
        var _this = _super.call(this) || this;
        _this.xAxisAnnotationFormatLabel = null;
        _this.yAxisAnnotationFormatLabel = null;
        _this.aaz = null;
        _this.ym = null;
        _this.yl = null;
        var a = new CrosshairLayerFrame();
        var b = new CrosshairLayerFrame();
        var c = new CrosshairLayerFrame();
        var d = _this.jt / 1000;
        _this.vr = a;
        _this.vq = b;
        _this.vs = c;
        _this.ab = CrosshairLayer.$;
        return _this;
    }
    CrosshairLayer.prototype.bb = function () {
        return new CrosshairLayer();
    };
    CrosshairLayer.prototype.get_ec = function () {
        return true;
    };
    CrosshairLayer.prototype.get_ea = function () {
        return true;
    };
    CrosshairLayer.prototype.ci = function () {
        return new CrosshairLayerView(this);
    };
    CrosshairLayer.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.ye = a;
    };
    CrosshairLayer.prototype.yg = function () {
        return this.xAxisAnnotationFormatLabel != null;
    };
    CrosshairLayer.prototype.yh = function () {
        return this.yAxisAnnotationFormatLabel != null;
    };
    Object.defineProperty(CrosshairLayer.prototype, "aa1", {
        get: function () {
            return new Thickness(1, this.yp, this.yr, this.yq, this.yo);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayer.prototype, "aa2", {
        get: function () {
            return new Thickness(1, this.yv, this.yx, this.yw, this.yu);
        },
        enumerable: false,
        configurable: true
    });
    CrosshairLayer.prototype.w4 = function (a, b) {
        if (this.yf == null || this.yf == a) {
            if (!this.at.c) {
                this.qm(b);
            }
        }
    };
    CrosshairLayer.prototype.w6 = function (a, b) {
        var e_1, _a;
        var _this = this;
        _super.prototype.w6.call(this, a, b);
        var c = a;
        var d = this.yk;
        var e = this.yj;
        c.af.clear();
        c.ag.clear();
        c.ae.clear();
        c.ah.clear();
        AxisAnnotationFrameManager.b(c);
        if (this.vx(this.yf)) {
            this.zw(this.yf, c, d, e);
        }
        else {
            try {
                for (var _b = __values(fromEnum(this.c1.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var f = _c.value;
                    if (this.vx(f)) {
                        this.zw(f, c, d, e);
                    }
                    if (f.isStacked) {
                        f.o0(function (g) {
                            if (_this.vx(g)) {
                                _this.zw(g, c, d, e);
                            }
                            if (g.d2) {
                                g.oy(function (h) {
                                    if (_this.vx(h)) {
                                        _this.zw(h, c, d, e);
                                    }
                                    return true;
                                });
                            }
                            return true;
                        });
                    }
                    if (f.d2) {
                        f.oy(function (g) {
                            if (_this.vx(g)) {
                                _this.zw(g, c, d, e);
                            }
                            return true;
                        });
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        }
    };
    CrosshairLayer.prototype.vx = function (a) {
        if (!_super.prototype.vx.call(this, a)) {
            return false;
        }
        if (this.y5 != null) {
            if (a.ew) {
                var b = a.mg();
                if (!Base.equalsStatic(this.y5, b)) {
                    return false;
                }
            }
            else {
                if (!Base.equalsStatic(this.y5, a.name)) {
                    return false;
                }
            }
        }
        var c = this.wz(a);
        if (!c.c) {
            return false;
        }
        return true;
    };
    CrosshairLayer.prototype.pl = function () {
        _super.prototype.pl.call(this);
        if (!this.at.c && !this.dr()) {
            return;
        }
        if (this.dr()) {
            this.zx(this.vs, false);
        }
        else {
            this.zx(this.vq, false);
        }
    };
    CrosshairLayer.prototype.vh = function () {
        return 1;
    };
    CrosshairLayer.prototype.v4 = function () {
        return 0.1;
    };
    CrosshairLayer.prototype.v7 = function () {
        return -0.4;
    };
    CrosshairLayer.prototype.v6 = function () {
        return 0.5;
    };
    CrosshairLayer.prototype.x3 = function () {
        return this.ve == 3 ? this.aa0() : null;
    };
    CrosshairLayer.prototype.x4 = function () {
        return this.vf == 3 ? this.aa0() : null;
    };
    CrosshairLayer.prototype.aa0 = function () {
        if (this.aaz == null) {
            this.aaz = new DoubleCollection();
            this.aaz.add(DeviceUtils.g(5));
            this.aaz.add(DeviceUtils.g(5));
        }
        return this.aaz;
    };
    CrosshairLayer.prototype.zw = function (a, b, c, d) {
        var e = this.wz(a);
        if (!e.c) {
            return;
        }
        var f = e.d;
        f = a.uu(f, c, d);
        var g = false;
        var h = this.tw;
        if (h == null) {
            h = this.t2;
        }
        if (h == null) {
            h = a.tw;
            g = true;
        }
        var i = false;
        var j = this.aat;
        if (j == null) {
            if (this.t2 != null) {
                j = this.t2;
            }
            else {
                j = a.tw;
                i = true;
            }
        }
        var k = false;
        var l = this.aaw;
        if (l == null) {
            if (this.t2 != null) {
                l = this.t2;
            }
            else {
                l = a.tw;
                k = true;
            }
        }
        var m = h;
        var n = h;
        var o = j;
        var p = l;
        if (this.aar != null) {
            m = this.aar;
        }
        else if (g) {
            switch (this.ve) {
                case 0:
                case 1:
                    m = this.ye.ce(m, this.v1);
                    break;
                case 2:
                    m = this.ye.cg(m, this.v1);
                    break;
                case 4:
                    m = this.ye.cf(m, this.v1);
                    break;
            }
        }
        if (this.aas != null) {
            n = this.aas;
        }
        else if (g) {
            switch (this.vf) {
                case 0:
                case 1:
                    n = this.ye.ce(n, this.v3);
                    break;
                case 2:
                    n = this.ye.cg(n, this.v3);
                    break;
                case 4:
                    n = this.ye.cf(n, this.v3);
                    break;
            }
        }
        if (i) {
            switch (this.vf) {
                case 1:
                    o = this.ye.ce(o, this.v3);
                    break;
                case 2:
                    o = this.ye.cg(o, this.v3);
                    break;
            }
        }
        if (k) {
            switch (this.ve) {
                case 1:
                    p = this.ye.ce(p, this.v1);
                    break;
                case 2:
                    p = this.ye.cg(p, this.v1);
                    break;
            }
        }
        b.ae.add(m);
        b.ah.add(n);
        b.af.add(f.y);
        b.ag.add(f.x);
        if (this.yi && !isNaN_(f.y)) {
            AxisAnnotationFrameManager.c(b, f, a, this.c1, this.getEffectiveViewport(), h, o, this.yn, this.aav, this.aau, this.aa1, this.ys, p, this.yt, this.aay, this.aax, this.aa2, this.yy, this.aa4 == 0, this.aa3 == 0);
        }
    };
    CrosshairLayer.prototype.zx = function (a, b) {
        var c = false;
        if (this.yl == null) {
            c = true;
            this.ym = new List$1(Axis.$, 0);
            this.yl = new Dictionary$2(Axis.$, Pool$1.$.specialize(AxisAnnotation.$), 0);
        }
        AxisAnnotationFrameManager.d(this, a, c, this.yl, this.ym, b, this.yz, this.y0, this.xAxisAnnotationFormatLabel, this.yAxisAnnotationFormatLabel);
    };
    CrosshairLayer.prototype.zv = function (a, b, c, d, e) {
        var f = a.item(b);
        b++;
        if (e) {
            f._stroke = d.ah._inner[c];
            f._fill = d.ah._inner[c];
        }
        else {
            f._stroke = d.ae._inner[c];
            f._fill = d.ae._inner[c];
        }
        f.ad = this.hv;
        f.ai = e ? this.x2 : this.x1;
        f.am = this.un;
        f.al = this.um;
        f.ak = this.um;
        f.aj = this.ul;
        f.ac = this.ix;
        return new Tuple$2(Path.$, Number_$type, f, b);
    };
    CrosshairLayer.prototype.w9 = function (a, b) {
        _super.prototype.w9.call(this, a, b);
        var c = this.ye.b8;
        var d = a;
        var e = d.af.count;
        var f = 0;
        var g = b.bx.left;
        var h = b.bx.right;
        var i = b.bx.top;
        var j = b.bx.bottom;
        var k = this.aa4 == 0;
        var l = this.aa3 == 0;
        for (var m = 0; m < e; m++) {
            var n = Math.floor(d.af._inner[m]);
            var o = Math.floor(d.ag._inner[m]);
            var p = null;
            if (k) {
                if (isNaN_(n)) {
                    continue;
                }
                var q = this.zv(c, f, m, d, true);
                p = q.c;
                f = q.d;
                var r = new PathGeometry();
                var s = new PathFigure();
                s._startPoint = { $type: Point_$type, x: o, y: i };
                var t = new LineSegment(1);
                t.c = { $type: Point_$type, x: o, y: j };
                s._segments.add(t);
                r.c.add(s);
                p.an = r;
            }
            if (l) {
                if (isNaN_(n)) {
                    continue;
                }
                var u = this.zv(c, f, m, d, false);
                p = u.c;
                f = u.d;
                var v = new PathGeometry();
                var w = new PathFigure();
                w._startPoint = { $type: Point_$type, x: g, y: n };
                var x = new LineSegment(1);
                x.c = { $type: Point_$type, x: h, y: n };
                w._segments.add(x);
                v.c.add(w);
                p.an = v;
            }
        }
        c.count = f;
        if (this.dr()) {
            this.zx(this.vs, true);
        }
        else {
            this.zx(this.vq, false);
        }
    };
    CrosshairLayer.prototype.fu = function () {
        return true;
    };
    CrosshairLayer.prototype.p5 = function (a, b, c, d) {
        _super.prototype.p5.call(this, a, b, c, d);
        switch (b) {
            case "SeriesViewer":
                if (d == null) {
                    if (this.yl != null && this.yl.count > 0) {
                        var e = void 0;
                        if (this.dr()) {
                            e = this.vs;
                        }
                        else {
                            e = this.vq;
                        }
                        AxisAnnotationFrameManager.b(e);
                        AxisAnnotationFrameManager.d(this, e, true, this.yl, this.ym, true, this.yz, this.y0, this.xAxisAnnotationFormatLabel, this.yAxisAnnotationFormatLabel);
                    }
                }
                break;
            case CrosshairLayer.$$p[1]:
                this.qm(true);
                break;
            case CrosshairLayer.$$p[8]:
                this.qm(true);
                break;
            case CrosshairLayer.$$p[4]:
            case CrosshairLayer.$$p[5]:
                this.qm(true);
                break;
            case CrosshairLayer.$$p[2]:
            case CrosshairLayer.$$p[10]:
            case CrosshairLayer.$$p[9]:
            case CrosshairLayer.$$p[12]:
            case CrosshairLayer.$$p[14]:
            case CrosshairLayer.$$p[16]:
            case CrosshairLayer.$$p[15]:
            case CrosshairLayer.$$p[13]:
            case CrosshairLayer.$$p[17]:
            case CrosshairLayer.$$p[18]:
            case CrosshairLayer.$$p[20]:
            case CrosshairLayer.$$p[22]:
            case CrosshairLayer.$$p[24]:
            case CrosshairLayer.$$p[26]:
            case CrosshairLayer.$$p[25]:
            case CrosshairLayer.$$p[23]:
            case CrosshairLayer.$$p[27]:
            case CrosshairLayer.$$p[28]:
            case CrosshairLayer.$$p[0]:
            case CrosshairLayer.$$p[7]:
            case CrosshairLayer.$$p[6]:
                this.qm(true);
                break;
        }
    };
    CrosshairLayer.$t = markType(CrosshairLayer, 'CrosshairLayer', AnnotationLayer.$);
    CrosshairLayer.$$p = markDep(DependencyProperty, PropertyMetadata, CrosshairLayer, 'raisePropertyChanged', ['HorizontalLineStroke:aar:zy', [Brush.$, null], 'HorizontalLineVisibility:aa3:zz', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'IsAxisAnnotationEnabled:yi:z0', [0, false], 'SkipUnknownValues:yj:z1', [0, true], 'TargetSeriesName:y5:z2', [2, null], 'TargetSeries:yf:z3', [Series.$, null], 'UseInterpolation:yk:z4', [0, true], 'VerticalLineStroke:aas:z5', [Brush.$, null], 'VerticalLineVisibility:aa4:z6', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'XAxisAnnotationBackgroundCornerRadius:yn:z7', [1, DeviceUtils.g(3)], 'XAxisAnnotationBackground:aat:z8', [Brush.$, null], 'XAxisAnnotationInterpolatedValuePrecision:yz:z9', [1, -1], 'XAxisAnnotationOutline:aau:aaa', [Brush.$, null], 'XAxisAnnotationPaddingBottom:yo:aab', [1, NaN], 'XAxisAnnotationPaddingLeft:yp:aac', [1, NaN], 'XAxisAnnotationPaddingRight:yq:aad', [1, NaN], 'XAxisAnnotationPaddingTop:yr:aae', [1, NaN], 'XAxisAnnotationStrokeThickness:ys:aaf', [1, NaN], 'XAxisAnnotationTextColor:aav:aag', [Brush.$, null], 'YAxisAnnotationBackgroundCornerRadius:yt:aah', [1, DeviceUtils.g(3)], 'YAxisAnnotationBackground:aaw:aai', [Brush.$, null], 'YAxisAnnotationInterpolatedValuePrecision:y0:aaj', [1, -1], 'YAxisAnnotationOutline:aax:aak', [Brush.$, null], 'YAxisAnnotationPaddingBottom:yu:aal', [1, NaN], 'YAxisAnnotationPaddingLeft:yv:aam', [1, NaN], 'YAxisAnnotationPaddingRight:yw:aan', [1, NaN], 'YAxisAnnotationPaddingTop:yx:aao', [1, NaN], 'YAxisAnnotationStrokeThickness:yy:aap', [1, NaN], 'YAxisAnnotationTextColor:aay:aaq', [Brush.$, null]]);
    return CrosshairLayer;
}(AnnotationLayer));
export { CrosshairLayer };
/**
 * @hidden
 */
var CrosshairLayerView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CrosshairLayerView, _super);
    function CrosshairLayerView(a) {
        var _this = _super.call(this, a) || this;
        _this.b7 = null;
        _this.b8 = null;
        _this.b9 = null;
        _this.b7 = a;
        _this.b9 = new List$1(Path.$, 0);
        return _this;
    }
    CrosshairLayerView.prototype.au = function () {
        var _this = this;
        _super.prototype.au.call(this);
        this.b8 = ((function () {
            var $ret = new Pool$1(Path.$);
            $ret.create = runOn(_this, _this.ch);
            $ret.activate = runOn(_this, _this.ca);
            $ret.disactivate = runOn(_this, _this.cc);
            $ret.destroy = runOn(_this, _this.cb);
            return $ret;
        })());
        this.b7.i5 = Defaults.j;
    };
    CrosshairLayerView.prototype.ch = function () {
        var a = new Path();
        a.j = new TranslateTransform();
        this.b9.add(a);
        return a;
    };
    CrosshairLayerView.prototype.ca = function (a) {
        a._visibility = 0;
    };
    CrosshairLayerView.prototype.cc = function (a) {
        a._visibility = 1;
    };
    CrosshairLayerView.prototype.cb = function (a) {
        this.b9.remove(a);
    };
    CrosshairLayerView.prototype.cd = function (a, b, c, d) {
        if (a.an == null || a.an.c.x != d || a.an.d.x != c) {
            var e = ((function () {
                var $ret = new LineGeometry();
                $ret.d = { $type: Point_$type, x: c, y: b };
                $ret.c = { $type: Point_$type, x: d, y: b };
                return $ret;
            })());
            a.an = e;
        }
    };
    CrosshairLayerView.prototype.ce = function (a, b) {
        if (a == null) {
            return a;
        }
        return BrushUtil.m(a, b);
    };
    CrosshairLayerView.prototype.cg = function (a, b) {
        if (a == null) {
            return a;
        }
        return BrushUtil.o(a, b);
    };
    CrosshairLayerView.prototype.cf = function (a, b) {
        if (a == null) {
            return a;
        }
        var c = new Brush();
        c.color = Color.u(truncate((a.color.l * b)), a.color.o, a.color.n, a.color.m);
        return c;
    };
    CrosshairLayerView.prototype.a8 = function (a, b) {
        _super.prototype.a8.call(this, a, b);
        if (a.d && !b) {
            for (var c = 0; c < this.b9.count; c++) {
                var d = this.b9._inner[c];
                if (d._visibility == 0) {
                    a.t(d);
                }
            }
        }
    };
    CrosshairLayerView.prototype.an = function (a) {
        _super.prototype.an.call(this, a);
        for (var b = 0; b < this.b9.count; b++) {
            this.e.a4.exportPathData(a, this.b9._inner[b], "crosshairLine", ["Main", "Crosshair"]);
        }
    };
    CrosshairLayerView.$t = markType(CrosshairLayerView, 'CrosshairLayerView', AnnotationLayerView.$);
    return CrosshairLayerView;
}(AnnotationLayerView));
export { CrosshairLayerView };
