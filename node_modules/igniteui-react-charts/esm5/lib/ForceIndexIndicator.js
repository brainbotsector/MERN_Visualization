/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { ForceIndexIndicatorStrategy } from "./ForceIndexIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var ForceIndexIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ForceIndexIndicator, _super);
    function ForceIndexIndicator() {
        return _super.call(this) || this;
    }
    ForceIndexIndicator.prototype.bb = function () {
        return new ForceIndexIndicator();
    };
    ForceIndexIndicator.prototype.get_zh = function () {
        return 1;
    };
    ForceIndexIndicator.prototype.get_aaa = function () {
        return new ForceIndexIndicatorStrategy();
    };
    Object.defineProperty(ForceIndexIndicator.prototype, "aaa", {
        get: function () {
            return this.get_aaa();
        },
        enumerable: false,
        configurable: true
    });
    ForceIndexIndicator.prototype.get_aan = function () {
        return ForceIndexIndicator.$;
    };
    Object.defineProperty(ForceIndexIndicator.prototype, "aan", {
        get: function () {
            return this.get_aan();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ForceIndexIndicator.prototype, "aav", {
        get: function () {
            return typeGetValue(this.c(ForceIndexIndicator.aaw));
        },
        set: function (a) {
            this.h(ForceIndexIndicator.aaw, a);
        },
        enumerable: false,
        configurable: true
    });
    ForceIndexIndicator.prototype.aag = function () {
        return this.aav;
    };
    ForceIndexIndicator.prototype.aap = function (a) {
        this.aav = a;
    };
    ForceIndexIndicator.$t = markType(ForceIndexIndicator, 'ForceIndexIndicator', StrategyBasedIndicator.$);
    ForceIndexIndicator.aaw = StrategyBasedIndicator.aas(0, ForceIndexIndicator.$);
    return ForceIndexIndicator;
}(StrategyBasedIndicator));
export { ForceIndexIndicator };
