/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { FinancialSeries } from "./FinancialSeries";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { IndicatorDisplayType_$type } from "./IndicatorDisplayType";
import { DependencyProperty } from "igniteui-react-core";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { CategoryFrame } from "./CategoryFrame";
import { Number_$type, typeCast, enumGetBox, EnumUtil, runOn, markType, markDep } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { ISortingAxis_$type } from "./ISortingAxis";
import { CategoryTrendLineManagerFactory } from "./CategoryTrendLineManagerFactory";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { CategorySeries } from "./CategorySeries";
import { NotImplementedException } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { GeometryGroup } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { LineGeometry } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { Extensions } from "igniteui-react-core";
import { IndicatorRenderer } from "./IndicatorRenderer";
/**
 * @hidden
 */
var FinancialIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialIndicator, _super);
    function FinancialIndicator() {
        var _this = _super.call(this) || this;
        _this._indicatorColumn = null;
        _this.zf = null;
        _this.vp = new CategoryFrame(3);
        _this.vr = new CategoryFrame(3);
        _this.vn = new CategoryFrame(3);
        _this.indicatorColumn = new List$1(Number_$type, 0);
        _this.zf = new AxisRange(-100, 100);
        return _this;
    }
    FinancialIndicator.prototype.get_es = function () {
        return true;
    };
    FinancialIndicator.prototype.ci = function () {
        return new FinancialIndicatorView(this);
    };
    FinancialIndicator.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.zg = a;
    };
    FinancialIndicator.prototype.zt = function (a) {
        if (this.v4 != null && !this.v4.c1()) {
            this.qm(true);
        }
    };
    FinancialIndicator.prototype.zl = function (a, b, c) {
        if (isNaN_(b.x) || isNaN_(b.y)) {
            return false;
        }
        var d = this.v4;
        var e = 0;
        if (d != null) {
            e = d.e4(d.l7);
        }
        if ((a.y >= e && a.y <= b.y) || (a.y <= e && a.y >= b.y)) {
            return true;
        }
        return false;
    };
    FinancialIndicator.prototype.bt = function () {
        if (this.bu == 0) {
            return 1;
        }
        else {
            return _super.prototype.bt.call(this);
        }
    };
    FinancialIndicator.prototype.u5 = function (a) {
        if (this.vl == null || this.v4 == null) {
            return Rect.empty;
        }
        var b = this.up(a);
        var c = this.cl.by;
        var d = this.cl.bx;
        var e = this.getEffectiveViewport1(this.cl);
        var f = new ScalerParams(0, c, d, this.v4.ch, e);
        f.b = this.id();
        var g = this.aj(this.vl, this.vn.f, this.xi(this.cl), this.xk(this.cl), a, true);
        if (g == null) {
            return Rect.empty;
        }
        var h = g[0];
        var i = g[1];
        var j = Math.abs(b.x - h[0]);
        var k = Math.abs(b.x - i[0]);
        var l = this.v4.ej(this.v4.l7, f);
        var m = 1;
        if (j < k) {
            var n = h[0] - 0.5 * m;
            var o = h[1];
            var p = l;
            return new Rect(0, n, Math.min(o, p), m, Math.max(o, p) - Math.min(o, p));
        }
        else {
            var q = i[0] - 0.5 * m;
            var r = i[1];
            var s = l;
            return new Rect(0, q, Math.min(r, s), m, Math.max(r, s) - Math.min(r, s));
        }
    };
    FinancialIndicator.prototype.gf = function (a, b) {
        var c = this.uu(this.uz(a), true, false);
        if (this.zi == 1) {
            if (this.zl(a, c, b)) {
                return true;
            }
        }
        if (this.zi == 1 || this.zi == 0) {
            if (this.ge(a, b)) {
                return true;
            }
        }
        if (this.zi == 2) {
            if (this.gi(a, b)) {
                return true;
            }
        }
        return false;
    };
    FinancialIndicator.prototype.oc = function (a, b, c, d) {
        _super.prototype.oc.call(this, a, b, c, d);
        if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
            this.vl.i$i();
        }
        if (this.zg.ca) {
            this.zg.b8.g$e(a, b, c, d);
        }
        if (d != null && this.wx.containsKey(d)) {
            var e = this.wx.tryGetValue(d, d);
            d = e.p1;
        }
        if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
            a = 4;
            b = 0;
            c = this.dd.count;
        }
        switch (a) {
            case 3:
                if (this.zk(b, c, d)) {
                    this.zv(b, c, d);
                    this.zt(true);
                }
                break;
            case 2:
                if (this.zk(b, this.dd.count - b, d)) {
                    this.zv(b, this.dd.count - b, d);
                    this.zt(true);
                }
                break;
            case 1:
                if (this.zk(b, this.dd.count - b, d)) {
                    var f = new Array(c);
                    for (var g = 0; g < c; g++) {
                        f[g] = 0;
                    }
                    this.indicatorColumn.s(b, f);
                    this.zv(b, this.dd.count - b, d);
                    this.zt(true);
                }
                break;
            case 0:
                if (this.zk(b, this.dd.count - b, d)) {
                    this.indicatorColumn.v(b, c);
                    this.zv(b, this.dd.count - b, d);
                    this.zt(true);
                }
                break;
            case 4:
                if (this.zk(b, this.dd.count - b, d)) {
                    this.indicatorColumn = new List$1(Number_$type, 2, this.dd.count);
                    var h = new Array(c);
                    for (var i = 0; i < c; i++) {
                        h[i] = 0;
                    }
                    this.indicatorColumn.s(0, h);
                    this.zv(b, this.dd.count - b, d);
                    this.zt(true);
                }
                break;
        }
    };
    FinancialIndicator.prototype.get_zh = function () {
        return 0;
    };
    Object.defineProperty(FinancialIndicator.prototype, "zh", {
        get: function () {
            return this.get_zh();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialIndicator.prototype, "z6", {
        get: function () {
            return this.c(FinancialIndicator.zw);
        },
        set: function (a) {
            this.h(FinancialIndicator.zw, a);
        },
        enumerable: false,
        configurable: true
    });
    FinancialIndicator.prototype.zq = function () {
        return -1;
    };
    Object.defineProperty(FinancialIndicator.prototype, "indicatorColumn", {
        get: function () {
            return this._indicatorColumn;
        },
        set: function (a) {
            this._indicatorColumn = a;
        },
        enumerable: false,
        configurable: true
    });
    FinancialIndicator.prototype.p5 = function (a, b, c, d) {
        switch (b) {
            case "XAxis":
                this.zg.cg();
                break;
            case "TrendLineType":
                var e = EnumUtil.getEnumValue(TrendLineType_$type, d);
                if (e != 0) {
                    this.zg.b8 = CategoryTrendLineManagerFactory.a(this.zg.b8, this.vl, this.ro, this, this.dg);
                }
                break;
        }
        _super.prototype.p5.call(this, a, b, c, d);
        if (this.zg.ca && this.zg.b8.g$b(a, b, c, d)) {
            this.qm(false);
            var f = typeCast(FinancialIndicatorView.$, this.ck);
            if (f != null && f.ca) {
                f.b8.g$b(a, b, c, d);
            }
            this.ph();
        }
        switch (b) {
            case "FastItemsSource":
                if (this.dd != null) {
                    this.indicatorColumn = new List$1(Number_$type, 2, this.dd.count);
                    var g = new Array(this.dd.count);
                    for (var h = 0; h < this.dd.count; h++) {
                        g[h] = 0;
                    }
                    this.indicatorColumn.s(0, g);
                    this.zv(0, this.dd.count, null);
                    if (this.v4 != null && !this.v4.c1()) {
                        this.v2.b0.e(this.hu);
                        this.qm(this.f0 && c != null);
                    }
                }
                break;
            case "TrendLineBrush":
                this.qb(b);
                break;
            case FinancialIndicator.$$p[0]:
                this.n7(true, this.cl);
                this.rb();
                this.qm(false);
                this.ph();
                break;
            case "OpenColumn":
            case "HighColumn":
            case "LowColumn":
            case "CloseColumn":
            case "VolumeColumn":
                if (this.dd != null) {
                    if (this.indicatorColumn.count != this.dd.count) {
                        this.indicatorColumn = new List$1(Number_$type, 2, this.dd.count);
                        var i = new Array(this.dd.count);
                        for (var j = 0; j < this.dd.count; j++) {
                            i[j] = 0;
                        }
                        this.indicatorColumn.s(0, i);
                    }
                    if (this.zk(0, this.dd.count - 1, b)) {
                        this.zu();
                    }
                }
                break;
            case "XAxis":
                if (this.vl != null && (typeCast(ISortingAxis_$type, this.vl) !== null || typeCast(ISortingAxis_$type, c) !== null)) {
                    this.zu();
                }
                break;
            case "YAxis":
            case FinancialIndicator.$$p[1]:
                this.zu();
                this.ph();
                break;
            case "TrendLineType":
                this.ph();
                break;
        }
    };
    FinancialIndicator.prototype.il = function (a, b, c) {
        if (this.indicatorColumn == null) {
            return _super.prototype.il.call(this, a, b, c);
        }
        var d = this.getEffectiveViewport1(this.cl);
        var e = this.xc(this.cl.by, this.cl.bx, d);
        var f = new ScalerParams(0, this.cl.by, this.cl.bx, this.vl.ch, d);
        f.c = this.c1.vw;
        return this.io(this.indicatorColumn, a, this.vl, f, e, runOn(this, this.xb), b, c);
    };
    FinancialIndicator.prototype.jq = function (a, b) {
        if (this.indicatorColumn == null) {
            return _super.prototype.jq.call(this, a, b);
        }
        return this.jr(a, b, this.vl, runOn(this, this.xb), this.indicatorColumn);
    };
    FinancialIndicator.prototype.jo = function (a, b) {
        if (this.indicatorColumn == null) {
            return _super.prototype.jo.call(this, a, b);
        }
        return this.jp(a, b, this.vl, runOn(this, this.xb), this.indicatorColumn);
    };
    FinancialIndicator.prototype.get_gv = function () {
        return true;
    };
    FinancialIndicator.prototype.zk = function (a, b, c) {
        if (c == null) {
            return true;
        }
        if (this.zm(a, b).contains(c)) {
            return true;
        }
        return false;
    };
    FinancialIndicator.prototype.zv = function (a, b, c) {
        this.zj(a, b);
    };
    FinancialIndicator.prototype.aq = function (a) {
        if (this.dd == null) {
            return null;
        }
        if (a != null && a == this.v4) {
            return this.zf;
        }
        return null;
    };
    FinancialIndicator.prototype.fx = function (a) {
        var b = this.dd != null ? this.dd.indexOf(a) : -1;
        var c = this.cl.by;
        c = c.copy();
        var d = this.cl.bx;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.u3(this.cl);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            if (this.vl != null) {
                var g = new ScalerParams(0, e, e, this.vl.ch, f);
                var h = this.vl.ej(b, g);
                if (h < c.left + 0.1 * c.width) {
                    h = h + 0.4 * c.width;
                }
                if (h > c.right - 0.1 * c.width) {
                    h = h - 0.4 * c.width;
                }
                c.x = h - 0.5 * c.width;
            }
            if (this.v4 != null && this.indicatorColumn != null && b < this.indicatorColumn.count) {
                var i = new ScalerParams(0, e, e, this.v4.ch, f);
                i.b = this.id();
                var j = this.v4.ej(this.indicatorColumn._inner[b], i);
                if (j < c.top + 0.1 * c.height) {
                    j = j + 0.4 * c.height;
                }
                if (j > c.bottom - 0.1 * c.height) {
                    j = j - 0.4 * c.height;
                }
                c.y = j - 0.5 * c.height;
            }
            this.ct.au(this.c1, c, true);
        }
        return b >= 0;
    };
    FinancialIndicator.prototype.gw = function (a, b, c) {
        var d = _super.prototype.gw.call(this, a, b, c);
        if (this.indicatorColumn == null || this.indicatorColumn.count == 0) {
            d = false;
        }
        return d;
    };
    FinancialIndicator.prototype.yr = function (a, b) {
        var _this = this;
        _super.prototype.yr.call(this, a, b);
        var c = b.by;
        var d = b.bx;
        var e = this.getEffectiveViewport1(b);
        var f = this.vl;
        var g = this.v4;
        var h = new ScalerParams(0, c, d, f.ch, e);
        var i = new ScalerParams(0, c, d, g.ch, e);
        i.b = this.id();
        var j = this.vl.ag();
        var k = j[0];
        var l = j[1];
        a.f.clear();
        a.n.clear();
        a.q.clear();
        var m = 0;
        var n = typeCast(ISortingAxis_$type, this.vl);
        if (n != null && n.i$b.count != this.dd.count) {
            return;
        }
        m = this.xc(c, d, e);
        var o = this.zq();
        if (o == -1) {
            o = this.trendLinePeriod;
        }
        var p = typeCast(FinancialIndicatorView.$, b);
        if (p.ca) {
            p.b8.prepareLineCore(a.q, this.trendLineType, this.indicatorColumn, o, function (q) { return _this.vl.ej(q, h); }, function (q) { return _this.v4.ej(q, i); }, ((function () {
                var $ret = new TrendResolutionParams();
                $ret.e = b.b0.b;
                $ret.f = b.b0.c;
                $ret.g = b.b0.d;
                $ret.a = m;
                $ret.d = _this.hu;
                $ret.h = d;
                $ret.i = c;
                $ret.b = l;
                $ret.c = k;
                return $ret;
            })()));
        }
        var q = this.vl.em(2, h) - this.vl.em(1, h);
        for (var r = b.b0.c; r <= b.b0.d; ++r) {
            var s = void 0;
            if (n == null) {
                s = b.b0.getBucket(r);
            }
            else {
                var t = n.i$b._inner[r];
                var u = n.i$d(t);
                var v = this.indicatorColumn._inner[r];
                var w = v;
                var x = u;
                while (r < b.b0.d) {
                    t = n.i$b._inner[r + 1];
                    x = n.i$d(t);
                    if (x - u > q) {
                        break;
                    }
                    r++;
                    var y = this.indicatorColumn._inner[r];
                    v = Math.min(v, y);
                    w = Math.max(w, y);
                }
                var z = NaN;
                if (!isNaN_(u)) {
                    z = this.vl.ej(u, h);
                }
                s = [z, v, w];
            }
            if (!isNaN_(s[0])) {
                if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
                    s[0] = s[0] + m;
                }
                else {
                    s[0] = f.ej(s[0], h) + m;
                }
                s[1] = g.ej(s[1], i);
                if (b.b0.b > 1 || n != null) {
                    s[2] = g.ej(s[2], i);
                }
                else {
                    s[2] = s[1];
                }
                a.f.add(s);
            }
        }
        return;
    };
    FinancialIndicator.prototype.n7 = function (a, b) {
        _super.prototype.n7.call(this, a, b);
        var c = b;
        c.cb(a);
        if (c.ca) {
            c.b8.g$d();
        }
    };
    FinancialIndicator.prototype.vv = function () {
        switch (this.zi) {
            case 1: return 1;
            case 2: return 1;
            case 0: return 12;
        }
        return 1;
    };
    FinancialIndicator.prototype.yt = function (a, b) {
        _super.prototype.yt.call(this, a, b);
        var c = typeCast(FinancialIndicatorView.$, b);
        var d = function (e) { return a.f._inner[e][0]; };
        var e = function (f) { return a.f._inner[f][1]; };
        if (c.ca) {
            c.b8.g$d();
            c.b8.g$g(a.q);
        }
        var f = b.bx;
        var g = this.getEffectiveViewport1(b);
        var h = 0;
        var i = this.tw;
        var j = this.zb;
        if (b.b3(a)) {
            c.cb(false);
            if (a.f.count > 0) {
                switch (this.zi) {
                    case 0:
                        var k = CategorySeries.ww(a.f, a.f.count - 1, f, b.by, false);
                        c.cf(a.f.count, d, e, true, k);
                        break;
                    case 1:
                        if (this.v4 != null) {
                            h = this.xg(b);
                        }
                        else {
                            h = 0.5 * (f.top + f.bottom);
                        }
                        var l = CategorySeries.ww(a.f, a.f.count - 1, f, b.by, false);
                        c.cd(a.f.count, d, e, true, h, l);
                        break;
                    case 2:
                        h = this.xg(b);
                        c.ce(a.f.count, d, e, true, h);
                        break;
                    default: throw new NotImplementedException(0);
                }
            }
            b.b5(a);
        }
        var m = a.f;
        var n = this.dd.count;
        this.vu.a2(this, this.wt(), runOn(this, this.vd), this.xi(b), this.xk(b));
        var o = false;
        var p = this.vu.b;
        if (p != null) {
            o = true;
        }
        this.vu.ak = i;
        this.vu.ag = i;
        if (o) {
            var q = new ScalerParams(0, b.by, b.bx, this.vl.ch, g);
            this.vu.f = false;
            this.yq(m, -1, n, this.vl, q, b.q, -1);
        }
        this.vu.ad(c.cx, true, false, true, false);
        this.vu.ad(c.cz, true, false, true, false);
        this.vu.ad(c.cy, false, true, false, false);
        c.cy._opacity = 0.8 * this.vu.j * this.hq;
        this.vu.ad(c.cw, true, false, false, false);
        this.vu.ak = j;
        this.vu.ag = j;
        if (o) {
            var r = new ScalerParams(0, b.by, b.bx, this.vl.ch, g);
            this.vu.f = true;
            this.yq(m, -1, n, this.vl, r, b.q, -1);
        }
        this.vu.ad(c.ct, true, false, true, false);
        this.vu.ad(c.cv, true, false, true, false);
        this.vu.ad(c.cu, false, true, false, false);
        c.cu._opacity = 0.8 * this.vu.j * this.hq;
        this.vu.ad(c.cs, true, false, false, false);
        c.ch();
    };
    FinancialIndicator.prototype.ra = function () {
        _super.prototype.ra.call(this);
        if (this.index < 0) {
            return;
        }
        if (this.zg.ca) {
            this.zg.ci();
        }
    };
    FinancialIndicator.prototype.zu = function () {
        if (this.zg.ca) {
            this.zg.b8.g$i();
        }
        this.zj(0, this.indicatorColumn.count);
        if (this.v4 != null && !this.v4.c1()) {
            this.qm(this.f0 && this.dv);
        }
    };
    FinancialIndicator.prototype.ow = function (a) {
        _super.prototype.ow.call(this, a);
        this.a4.exportTrendlineData(this, a, this.zg.b8.g$j);
    };
    FinancialIndicator.prototype.a6 = function (a) {
        if (this.zi == 1 || this.zi == 2) {
            return 3;
        }
        else if (this.zi == 0) {
            return 2;
        }
        return a;
    };
    FinancialIndicator.$t = markType(FinancialIndicator, 'FinancialIndicator', FinancialSeries.$, [ITrendLineSeries_$type]);
    FinancialIndicator.zw = DependencyProperty.i("ActualTrendLineBrush", Brush.$, FinancialIndicator.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    FinancialIndicator.$$p = markDep(DependencyProperty, PropertyMetadata, FinancialIndicator, 'raisePropertyChanged', ['DisplayType:zi:zx', [IndicatorDisplayType_$type, enumGetBox(IndicatorDisplayType_$type, 0)], 'IgnoreFirst:zo:zy', [1, 0], 'TrendLineType::z4', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness::z3', [1, 1.5], 'TrendLinePeriod::z2', [1, 7], 'TrendLineBrush::zz', [Brush.$, null], 'TrendLineZIndex:zp:z5', [1, 1001], 'TrendLineDashArray:z7:z0', [DoubleCollection.$], 'TrendLineDashCap:z8:z1', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return FinancialIndicator;
}(FinancialSeries));
export { FinancialIndicator };
/**
 * @hidden
 */
var FinancialIndicatorBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialIndicatorBucketCalculator, _super);
    function FinancialIndicatorBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.f = null;
        _this.f = a;
        return _this;
    }
    FinancialIndicatorBucketCalculator.prototype.getBucket = function (a) {
        var b = a * this.b;
        var c = Math.min(b + this.b - 1, this.f.b6.indicatorColumn.count - 1);
        var d = NaN;
        var e = NaN;
        for (var f = b; f <= c; ++f) {
            var g = this.f.b6.indicatorColumn._inner[f];
            if (!isNaN_(d)) {
                if (!isNaN_(g)) {
                    d = Math.min(d, g);
                    e = Math.max(e, g);
                }
            }
            else {
                d = g;
                e = g;
            }
        }
        if (!isNaN_(d)) {
            return [0.5 * (b + c), d, e];
        }
        return [NaN, NaN, NaN];
    };
    FinancialIndicatorBucketCalculator.$t = markType(FinancialIndicatorBucketCalculator, 'FinancialIndicatorBucketCalculator', FinancialBucketCalculator.$);
    return FinancialIndicatorBucketCalculator;
}(FinancialBucketCalculator));
export { FinancialIndicatorBucketCalculator };
/**
 * @hidden
 */
var FinancialIndicatorView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialIndicatorView, _super);
    function FinancialIndicatorView(a) {
        var _this = _super.call(this, a) || this;
        _this.b6 = null;
        _this.b9 = null;
        _this.cx = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.ct = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cy = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cu = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cz = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cv = ((function () {
            var $ret = new Path();
            $ret.an = new PathGeometry();
            return $ret;
        })());
        _this.cw = ((function () {
            var $ret = new Path();
            $ret.an = new GeometryGroup();
            return $ret;
        })());
        _this.cs = ((function () {
            var $ret = new Path();
            $ret.an = new GeometryGroup();
            return $ret;
        })());
        _this.b7 = null;
        _this.cp = new Path();
        _this.cr = new Path();
        _this.cq = new Path();
        _this.co = new Path();
        _this.cl = new Path();
        _this.cn = new Path();
        _this.cm = new Path();
        _this.ck = new Path();
        _this.b6 = a;
        _this.b9 = ((function () {
            var $ret = new Pool$1(LineGeometry.$);
            $ret.create = runOn(_this, _this.cj);
            $ret.destroy = runOn(_this, _this.cc);
            return $ret;
        })());
        return _this;
    }
    FinancialIndicatorView.prototype.b1 = function () {
        return new FinancialIndicatorBucketCalculator(this);
    };
    FinancialIndicatorView.prototype.au = function () {
        _super.prototype.au.call(this);
        if (!this.q) {
            this.b6.zb = Defaults.ah;
            this.b6.zi = this.b6.zh;
        }
    };
    FinancialIndicatorView.prototype.cj = function () {
        return new LineGeometry();
    };
    FinancialIndicatorView.prototype.cc = function (a) {
    };
    Object.defineProperty(FinancialIndicatorView.prototype, "b8", {
        get: function () {
            if (this.b7 == null) {
                this.b7 = CategoryTrendLineManagerFactory.a(this.b7, this.e.as(), this.e.ro, this.e, this.e.dg);
            }
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialIndicatorView.prototype, "ca", {
        get: function () {
            return this.b7 != null;
        },
        enumerable: false,
        configurable: true
    });
    FinancialIndicatorView.prototype.cb = function (a) {
        Extensions.e(this.cx.an);
        Extensions.e(this.cy.an);
        Extensions.e(this.cz.an);
        Extensions.e(this.ct.an);
        Extensions.e(this.cu.an);
        Extensions.e(this.cv.an);
        Extensions.d(this.cw.an);
        Extensions.d(this.cs.an);
        if (a) {
            this.b9.count = 0;
        }
        this.as();
    };
    FinancialIndicatorView.prototype.ch = function () {
    };
    FinancialIndicatorView.prototype.cf = function (a, b, c, d, e) {
        IndicatorRenderer.g(a, b, c, d, this.by, this.bx, this.cx, this.ct, this.b0.b, this.e.hu, e);
        this.as();
    };
    FinancialIndicatorView.prototype.cd = function (a, b, c, d, e, f) {
        IndicatorRenderer.e(a, b, c, d, this.by, this.bx, this.cx, this.cy, this.ct, this.cu, e, this.b0.b, this.e.hu, f);
        this.as();
    };
    FinancialIndicatorView.prototype.ce = function (a, b, c, d, e) {
        IndicatorRenderer.f(a, b, c, d, this.bx, e, this.b9, this.cw, this.cs);
        this.as();
    };
    FinancialIndicatorView.prototype.ci = function () {
        this.b6.z6 = null;
        if (this.b6.trendLineBrush != null) {
            this.b6.z6 = this.b6.trendLineBrush;
        }
        else {
            this.b6.z6 = this.b6.tw;
        }
    };
    FinancialIndicatorView.prototype.be = function () {
        _super.prototype.be.call(this);
        var a = this.br();
        this.cp.an = this.cx.an;
        this.cr.an = this.cz.an;
        this.cq.an = this.cy.an;
        this.co.an = this.cw.an;
        this.cl.an = this.ct.an;
        this.cn.an = this.cv.an;
        this.cm.an = this.cu.an;
        this.ck.an = this.cs.an;
        this.cp._stroke = a;
        this.cr._stroke = a;
        this.cp.ad = this.e.hv + 3;
        this.cr.ad = this.e.hv + 3;
        this.cq._fill = a;
        this.cq._opacity = 1;
        this.co._stroke = a;
        this.co.ad = this.e.hv + 3;
        this.cl._stroke = a;
        this.cn._stroke = a;
        this.cl.ad = this.e.hv + 3;
        this.cn.ad = this.e.hv + 3;
        this.cm._fill = a;
        this.cm._opacity = 1;
        this.ck._stroke = a;
        this.ck.ad = this.e.hv + 3;
    };
    FinancialIndicatorView.prototype.a8 = function (a, b) {
        _super.prototype.a8.call(this, a, b);
        if (a.d) {
            if (b) {
                if (this.b6.zi == 2) {
                    a.t(this.co);
                    a.t(this.ck);
                }
                else {
                    a.t(this.cq);
                    a.t(this.cp);
                    a.t(this.cr);
                    a.t(this.cm);
                    a.t(this.cl);
                    a.t(this.cn);
                }
            }
            else {
                if (this.b6.zi == 2) {
                    a.t(this.cw);
                    a.t(this.cs);
                }
                else {
                    a.t(this.cy);
                    a.t(this.cx);
                    a.t(this.cz);
                    a.t(this.cu);
                    a.t(this.ct);
                    a.t(this.cv);
                }
            }
        }
    };
    FinancialIndicatorView.prototype.a7 = function (a, b) {
        if (a.d) {
            if (this.b6.trendLineType != 0 && !b) {
                var c = this.b8.g$j;
                c.ad = this.b6.trendLineThickness;
                c._stroke = this.b6.z6;
                c.aj = this.b6.z8;
                c.ai = this.b6.z7;
                a.v(c);
            }
        }
        _super.prototype.a7.call(this, a, b);
    };
    FinancialIndicatorView.prototype.an = function (a) {
        _super.prototype.an.call(this, a);
        this.e.a4.exportPathData(a, this.cw, "positiveColumnsShape", ["Positive", "Main"]);
        this.e.a4.exportPathData(a, this.cs, "negativeColumnsShape", ["Negative"]);
        this.e.a4.exportPathData(a, this.cx, "positive0", ["Positive", "Main"]);
        this.e.a4.exportPathData(a, this.cz, "positive1", ["Positive"]);
        this.e.a4.exportPathData(a, this.cy, "positive01", ["PositiveFill"]);
        this.e.a4.exportPathData(a, this.ct, "negative0", ["Negative", "Main"]);
        this.e.a4.exportPathData(a, this.cv, "negative1", ["Negative"]);
        this.e.a4.exportPathData(a, this.cu, "negative01", ["NegativeFill"]);
    };
    FinancialIndicatorView.prototype.cg = function () {
        if (this.ca) {
            this.b7 = CategoryTrendLineManagerFactory.a(this.b7, this.e.as(), this.e.ro, this.e, this.e.dg);
        }
    };
    FinancialIndicatorView.$t = markType(FinancialIndicatorView, 'FinancialIndicatorView', FinancialSeriesView.$);
    return FinancialIndicatorView;
}(FinancialSeriesView));
export { FinancialIndicatorView };
