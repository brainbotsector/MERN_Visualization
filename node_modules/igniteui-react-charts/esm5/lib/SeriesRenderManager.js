/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var SeriesRenderManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SeriesRenderManager, _super);
    function SeriesRenderManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ag = null;
        _this.ah = null;
        _this.m = 0;
        _this.am = null;
        _this.ao = 0;
        _this.k = 0;
        _this.l = 0;
        _this.j = 0;
        _this.i = 0;
        _this.au = 0;
        _this.aq = 0;
        _this.ap = 0;
        _this.ak = null;
        _this.al = null;
        _this.t = 0;
        _this.an = null;
        _this.ar = 0;
        _this.r = 0;
        _this.s = 0;
        _this.q = 0;
        _this.p = 0;
        _this.av = 0;
        _this.at = 0;
        _this.as = 0;
        _this.ai = null;
        _this.aj = null;
        _this.n = 0;
        _this.o = 0;
        _this.f = false;
        _this.e = false;
        _this.ae = null;
        _this.af = null;
        _this.g = 0;
        _this.h = 0;
        _this.b = null;
        _this.d = null;
        return _this;
    }
    SeriesRenderManager.prototype.w = function (a, b, c) {
        this.e = false;
        this.ai = a.t8();
        this.aj = a.t9();
        this.n = 1;
        this.o = a.h3();
        this.ae = this.ai;
        this.af = this.aj;
        this.g = this.n;
        this.h = this.o;
        var d = b;
        this.d = null;
        if (d) {
            this.d = this.c();
            this.d.m = 0;
            this.d.q = 0;
            this.d.u = 0;
            this.d.v = 0;
            this.d.x = 0;
            this.d.t = 0;
            this.d.n = 0;
            this.d.r = 0;
            this.d.w = 0;
            this.d.l = 0;
            this.d.p = 0;
            this.d.s = 0;
            if (a.c1 != null && a.bo != 1) {
                this.d.m = a.c1.dj.maxMarkerHighlightingProgress;
                this.d.q = a.c1.dj.sumMarkerHighlightingProgress;
                this.d.v = a.c1.dj.totalHighWaterMark;
                this.d.u = a.c1.dj.totalHighlightingProgress;
            }
            if (a.c1 != null && a.cf != 1) {
                this.d.n = a.c1.dk.maxMarkerHighlightingProgress;
                this.d.r = a.c1.dk.sumMarkerHighlightingProgress;
                this.d.x = a.c1.dk.totalHighWaterMark;
                this.d.w = a.c1.dk.totalHighlightingProgress;
            }
            if (a.c1 != null && a.ce != 1) {
                this.d.l = a.c1.di.maxMarkerHighlightingProgress;
                this.d.p = a.c1.di.sumMarkerHighlightingProgress;
                this.d.t = a.c1.di.totalHighWaterMark;
                this.d.s = a.c1.di.totalHighlightingProgress;
            }
            this.d.a = c;
        }
    };
    SeriesRenderManager.prototype.c = function () {
        return null;
    };
    SeriesRenderManager.prototype.x = function (a, b, c) {
        this.f = false;
        this.ak = a.tw;
        this.al = a.t0;
        this.t = a.hv;
        this.an = a.uk;
        this.ar = a.ul;
        this.r = 0;
        this.s = 0;
        this.q = 1;
        this.p = a.ix;
        this.at = a.um;
        this.as = a.um;
        this.av = a.un;
        this.ag = this.ak;
        this.ah = this.al;
        this.m = this.t;
        this.am = this.an;
        this.ao = this.ar;
        this.k = this.r;
        this.l = this.s;
        this.j = this.q;
        this.i = this.p;
        this.aq = this.at;
        this.ap = this.as;
        this.au = this.av;
        var d = b;
        this.b = null;
        if (d) {
            this.b = this.a();
            this.b.m = 0;
            this.b.q = 0;
            this.b.v = 0;
            this.b.x = 0;
            this.b.t = 0;
            this.b.u = 0;
            this.b.n = 0;
            this.b.r = 0;
            this.b.w = 0;
            this.b.l = 0;
            this.b.p = 0;
            this.b.s = 0;
            if (a.c1 != null && a.bo != 1) {
                this.b.m = a.c1.dj.maxHighlightingProgress;
                this.b.q = a.c1.dj.sumHighlightingProgress;
                this.b.v = a.c1.dj.totalHighWaterMark;
                this.b.u = a.c1.dj.totalHighlightingProgress;
            }
            if (a.c1 != null && a.cf != 1) {
                this.b.n = a.c1.dk.maxHighlightingProgress;
                this.b.r = a.c1.dk.sumHighlightingProgress;
                this.b.x = a.c1.dk.totalHighWaterMark;
                this.b.w = a.c1.dk.totalHighlightingProgress;
            }
            if (a.c1 != null && a.cf != 1) {
                this.b.l = a.c1.di.maxHighlightingProgress;
                this.b.p = a.c1.di.sumHighlightingProgress;
                this.b.t = a.c1.di.totalHighWaterMark;
                this.b.s = a.c1.di.totalHighlightingProgress;
            }
            this.b.a = c;
        }
    };
    SeriesRenderManager.prototype.a = function () {
        return null;
    };
    SeriesRenderManager.prototype.ad = function (a, b, c, d, e) {
        var f = this.ag;
        if (e) {
            f = this.ah;
        }
        if (c) {
            a._fill = f;
        }
        else {
            if (b) {
                a._stroke = f;
            }
            else {
                a._fill = f;
                a._stroke = this.ah;
            }
            a.ad = this.m;
            a.ai = this.am;
            a.aj = this.ao;
            if (d) {
                a.ac = this.i;
                a.am = this.au;
                a.al = this.aq;
                a.ak = this.ap;
            }
        }
        a._opacity = this.j;
    };
    SeriesRenderManager.prototype.ac = function (a, b) {
        a._opacity = this.g;
        b.itemBrush = this.ae;
        b.thickness = this.h;
        b.actualItemBrush = b.itemBrush;
        b.outline = this.af;
    };
    SeriesRenderManager.prototype.u = function (a, b, c, d, e, f, g, h, i, j, k, l) {
        if (a.bo == 1 && a.cf == 1 && a.ce == 1) {
            return;
        }
        this.j = a.a2.a$j(a, b, c, d, this.j, e, f, g, h, i, j, k, l);
        this.ag = a.a2.a$as(a, b, c, d, e, f, g, h, i, j, this.ag, false);
        this.ah = a.a2.a$as(a, b, c, d, e, f, g, h, i, j, this.ah, true);
        this.m = a.a2.a$k(a, b, c, d, this.m);
    };
    SeriesRenderManager.prototype.v = function (a, b, c, d, e, f, g, h, i, j, k) {
        if (a.bo == 1 && a.cf == 1 && a.ce == 1) {
            return;
        }
        this.g = a.a2.a$j(a, b, c, d, this.g, e, f, g, h, i, j, k, false);
        this.ae = a.a2.a$as(a, b, c, d, e, f, g, h, i, j, this.ae, false);
        this.af = a.a2.a$as(a, b, c, d, e, f, g, h, i, j, this.af, true);
        this.h = a.a2.a$k(a, b, c, d, this.h);
    };
    SeriesRenderManager.prototype.ab = function (a) {
        this.ag = this.ak;
        this.ah = this.al;
        this.m = this.t;
        this.am = this.an;
        this.ao = this.ar;
        this.k = this.r;
        this.l = this.s;
        this.j = this.q;
        var b = this.b;
        b.aa = this.ag;
        b.ab = this.ah;
        b.ae = this.m;
        b.af = this.am;
        b.ag = this.ao;
        b.ac = this.k;
        b.ad = this.l;
        b.o = this.j;
        b.g = this.f;
        b.k = a;
        b.f = false;
    };
    SeriesRenderManager.prototype.z = function (a, b, c, d, e, f, g, h, i) {
        var j = this.b;
        this.ag = j.aa;
        this.ah = j.ab;
        this.m = j.ae;
        this.am = j.af;
        this.ao = j.ag;
        this.k = j.ac;
        this.l = j.ad;
        this.j = j.o;
        if ((f || g || h) && !j.f && !e) {
            this.u(a, b, c, d, j.v, j.v, j.x, j.x, j.t, j.t, j.k, i);
        }
    };
    SeriesRenderManager.prototype.aa = function (a) {
        this.ae = this.ai;
        this.af = this.aj;
        this.g = this.n;
        this.h = this.o;
        var b = this.d;
        b.aa = this.ae;
        b.ab = this.af;
        b.o = this.g;
        b.g = this.e;
        b.k = a;
        b.f = false;
    };
    SeriesRenderManager.prototype.y = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var o = this.d;
        this.ae = o.aa;
        this.af = o.ab;
        this.g = o.o;
        if ((f || g || h) && !o.f && !e) {
            this.v(a, b, c, d, i, j, k, l, m, n, o.k);
        }
    };
    SeriesRenderManager.$t = markType(SeriesRenderManager, 'SeriesRenderManager');
    return SeriesRenderManager;
}(Base));
export { SeriesRenderManager };
