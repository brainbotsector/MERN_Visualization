/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { FinancialSeries } from "./FinancialSeries";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { TrendLineType_$type } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { PriceDisplayType_$type } from "./PriceDisplayType";
import { Series } from "./Series";
import { Defaults } from "./Defaults";
import { enumGetBox, EnumUtil, Number_$type, typeCast, fromEnum, runOn, Point_$type, markType, markDep } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { ISortingAxis_$type } from "./ISortingAxis";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { Rect } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { RectUtil } from "igniteui-react-core";
import { CategoryTrendLineManagerFactory } from "./CategoryTrendLineManagerFactory";
import { AxisRange } from "./AxisRange";
import { ScalerParams } from "./ScalerParams";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { Pool$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { PathGeometry } from "igniteui-react-core";
import { PathFigure } from "igniteui-react-core";
import { LineSegment } from "igniteui-react-core";
import { GeometryGroup } from "igniteui-react-core";
import { LineGeometry } from "igniteui-react-core";
import { RectangleGeometry } from "igniteui-react-core";
import { DataLegendSeriesValueInfo } from "igniteui-react-core";
import { DataLegendSeriesContext } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity } from "igniteui-react-core";
import { boxArray$1 } from "igniteui-react-core";
import { round10N } from "igniteui-react-core";
import { FinancialPriceBucketCalculator } from "./FinancialPriceBucketCalculator";
import { Extensions } from "igniteui-react-core";
/**
 * @hidden
 */
var FinancialPriceSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialPriceSeries, _super);
    function FinancialPriceSeries() {
        var _this = _super.call(this) || this;
        _this.zi = true;
        _this.zj = 0;
        _this.zk = 0;
        _this.ab = FinancialPriceSeries.$;
        _this.vp = new CategoryFrame(5);
        _this.vr = new CategoryFrame(5);
        _this.vn = new CategoryFrame(5);
        return _this;
    }
    FinancialPriceSeries.prototype.bb = function () {
        return new FinancialPriceSeries();
    };
    FinancialPriceSeries.prototype.get_eu = function () {
        return true;
    };
    FinancialPriceSeries.prototype.i0 = function () {
        if (!isNaN_(this.iz)) {
            return _super.prototype.i0.call(this);
        }
        return Defaults.k;
    };
    FinancialPriceSeries.prototype.ci = function () {
        return new FinancialPriceSeriesView(this);
    };
    FinancialPriceSeries.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.zg = a;
    };
    Object.defineProperty(FinancialPriceSeries.prototype, "aas", {
        get: function () {
            return this.c(FinancialPriceSeries.aaa);
        },
        set: function (a) {
            this.h(FinancialPriceSeries.aaa, a);
        },
        enumerable: false,
        configurable: true
    });
    FinancialPriceSeries.prototype.oc = function (a, b, c, d) {
        _super.prototype.oc.call(this, a, b, c, d);
        if (this.vl != null && typeCast(ISortingAxis_$type, this.vl) !== null) {
            this.vl.i$i();
        }
        this.zg.b0.e(this.hu);
        if (this.zg.ca) {
            this.zg.b8.g$e(a, b, c, d);
        }
        if (this.v4 != null) {
            this.v4.c1();
        }
        this.qm(true);
        if (a == 0 || a == 2 || a == 3 || a == 4) {
            this.zi = true;
        }
        else if (a == 1) {
            for (var e = b; e < b + c; e++) {
                var f = 0;
                f += this.wf.item(e);
                f += this.wg.item(e);
                f += this.we.item(e);
                this.zj += f / 3;
            }
            this.zk = this.zj / this.wf.count;
        }
    };
    FinancialPriceSeries.prototype.bt = function () {
        if (this.bu == 0) {
            return 1;
        }
        else {
            return _super.prototype.bt.call(this);
        }
    };
    FinancialPriceSeries.prototype.u5 = function (a) {
        if (this.vn == null || this.vn.f.count == 0) {
            return Rect.empty;
        }
        var b = this.up(a);
        var c = this.cl.by;
        var d = this.cl.bx;
        var e = this.getEffectiveViewport1(this.cl);
        var f = this.aj(this.vl, this.vn.f, this.xi(this.cl), this.xk(this.cl), a, true);
        var g = f[0];
        var h = f[1];
        var i = Math.abs(b.x - g[0]);
        var j = Math.abs(b.x - h[0]);
        var k = this.zl(this.v2, e);
        k = Math.max(k, 3);
        var l = (k - 1) / 2;
        if (i < j) {
            var m = g[0] - l;
            var n = g[0];
            var o = g[0] + l;
            var p = g[1];
            var q = g[2];
            var r = g[3];
            var s = g[4];
            var t = Math.min(Math.min(Math.min(p, q), r), s);
            var u = Math.max(Math.max(Math.max(p, q), r), s);
            return new Rect(0, m, t, Math.abs(o - m), u - t);
        }
        else {
            var v = h[0] - l;
            var w = h[0];
            var x = h[0] + l;
            var y = h[1];
            var z = h[2];
            var aa = h[3];
            var ab = h[4];
            var ac = Math.min(Math.min(Math.min(y, z), aa), ab);
            var ad = Math.max(Math.max(Math.max(y, z), aa), ab);
            return new Rect(0, v, ac, Math.abs(x - v), ad - ac);
        }
    };
    FinancialPriceSeries.prototype.zf = function (a, b) {
        var c = a[0] - b;
        var d = a[0];
        var e = a[0] + b;
        var f = a[1];
        var g = a[2];
        var h = a[3];
        var i = a[4];
        var j = Math.min(Math.min(Math.min(f, g), h), i);
        var k = Math.max(Math.max(Math.max(f, g), h), i);
        var l = Math.min(g, h);
        var m = Math.max(g, h);
        var n = Math.min(f, i);
        var o = Math.max(f, i);
        if (this.zh == 1) {
            var p = new Array(3);
            var q = new Rect(0, c, f, b, 0);
            var r = new Rect(0, d, i, b, 0);
            var s = new Rect(0, d, l, 0, m - l);
            p[0] = q;
            p[1] = r;
            p[2] = s;
            return p;
        }
        else {
            var t = new Array(2);
            var u = new Rect(0, d, l, 0, m - l);
            var v = new Rect(0, c, n, b * 2, o - n);
            t[0] = u;
            t[1] = v;
            return t;
        }
    };
    FinancialPriceSeries.prototype.ak = function (a) {
        var b = new List$1(Rect.$, 0);
        var c = this.up(a);
        var d = this.cl.by;
        var e = this.cl.bx;
        var f = this.getEffectiveViewport1(this.cl);
        var g = this.aj(this.vl, this.vn.f, this.xi(this.cl), this.xk(this.cl), a, true);
        var h = g[0];
        var i = g[1];
        var j = Math.abs(c.x - h[0]);
        var k = Math.abs(c.x - i[0]);
        var l = this.zl(this.v2, f);
        l = Math.max(l, 3);
        var m = (l - 1) / 2;
        if (j < k) {
            return this.zf(h, m);
        }
        else {
            return this.zf(i, m);
        }
    };
    FinancialPriceSeries.prototype.gf = function (a, b) {
        if (this.gi(a, b)) {
            return true;
        }
        return false;
    };
    FinancialPriceSeries.prototype.gi = function (a, b) {
        var c = this.u6(a);
        if (c.isEmpty) {
            return false;
        }
        var d = RectUtil.r(c, (this.hv / 2) + this.h9(b));
        if (d.containsPoint(a)) {
            var e = this.al(a);
            if (e != null) {
                for (var f = 0; f < e.length; f++) {
                    var g = e[f];
                    var h = RectUtil.r(g, (this.hv / 2) + this.h9(b));
                    if (h.containsPoint(a)) {
                        return true;
                    }
                }
            }
        }
        return false;
    };
    FinancialPriceSeries.prototype.p5 = function (a, b, c, d) {
        switch (b) {
            case FinancialPriceSeries.$$p[3]:
            case FinancialPriceSeries.$$p[4]:
            case FinancialPriceSeries.$$p[5]:
            case FinancialPriceSeries.$$p[6]:
            case FinancialPriceSeries.$$p[0]:
            case FinancialPriceSeries.$$p[1]:
            case FinancialPriceSeries.$$p[8]:
            case FinancialPriceSeries.$$p[9]:
                this.pb();
                break;
            case FinancialSeries.$$p[14]:
                this.zg.cg();
                if (this.c1 != null) {
                    this.c1.nm();
                }
                break;
            case "TrendLineType":
                var e = EnumUtil.getEnumValue(TrendLineType_$type, d);
                if (e != 0) {
                    this.zg.b8 = CategoryTrendLineManagerFactory.a(this.zg.b8, this.vl, this.ro, this, this.dg);
                }
                break;
        }
        _super.prototype.p5.call(this, a, b, c, d);
        if (this.zg.ca && this.zg.b8 != null && this.zg.b8.g$b(a, b, c, d)) {
            this.qm(false);
            this.ph();
        }
        switch (b) {
            case FinancialPriceSeries.$$p[2]:
                if (this.ro != null) {
                    this.z9();
                    this.rb();
                    this.vn.x();
                    this.yt(this.vn, this.zg);
                }
                this.ph();
                break;
            case "ActualHighlightingMode":
            case "ActualSelectionMode":
            case "ActualFocusMode":
                this.qm(true);
                break;
            case "TrendLineBrush":
                this.qb(b);
                break;
            case "TrendLineType":
                this.ph();
                break;
            case FinancialSeries.$$p[10]:
            case FinancialPriceSeries.$$p[7]:
                this.pz();
                break;
        }
    };
    FinancialPriceSeries.prototype.z9 = function () {
        this.zg.ck();
        if (this.ck != null) {
            this.ck.ck();
        }
    };
    FinancialPriceSeries.prototype.aq = function (a) {
        if (a != null && a == this.v4 && this.wg != null && !isNaN_(this.wg.minimum) && this.wf != null && !isNaN_(this.wf.maximum)) {
            return new AxisRange(this.wg.minimum, this.wf.maximum);
        }
        return null;
    };
    FinancialPriceSeries.prototype.ar = function (a) {
        if (a.isEmpty && this.c1 != null) {
            a = this.c1.vh;
        }
        if (this.wg == null || this.wf == null) {
            return null;
        }
        var b = this.u1(this.cl);
        var c = new ScalerParams(0, a, this.c1.vw, this.vl.ch, this.getEffectiveViewport());
        var d = (this.vl.em(b.left, c));
        var e = (this.vl.em(b.right, c));
        if (this.vl.ch) {
            var f = d;
            d = e;
            e = f;
        }
        var g = null;
        if (this.vl.cn) {
            g = this.vl;
            d = g.i$f(d);
            e = g.i$f(e);
        }
        else {
            d = Math.floor(d);
            e = Math.ceil(e);
        }
        d = Math.max(0, Math.min(this.wg.count - 1, d));
        e = Math.max(0, Math.min(this.wg.count - 1, e));
        var h = 1.7976931348623157E+308;
        var i = -1.7976931348623157E+308;
        for (var j = truncate(d); j <= truncate(e); j++) {
            var k = j;
            if (g != null) {
                k = g.i$b._inner[j];
            }
            var l = this.wg.item(k);
            if (this.wg.mayContainUnknowns) {
                if (isInfinity(l) || isNaN_(l)) {
                    continue;
                }
            }
            var m = this.wf.item(k);
            if (this.wf.mayContainUnknowns) {
                if (isInfinity(m) || isNaN_(m)) {
                    continue;
                }
            }
            h = Math.min(h, l);
            i = Math.max(i, m);
        }
        var n = new AxisRange(h, i);
        n = this.ap(n, this.v4, a);
        return n;
    };
    FinancialPriceSeries.prototype.id = function () {
        return Series.ie(this.wh, typeCast(ISortingAxis_$type, this.vl));
    };
    FinancialPriceSeries.prototype.fx = function (a) {
        var b = this.dd != null ? this.dd.indexOf(a) : -1;
        var c = this.cl.by;
        c = c.copy();
        var d = this.cl.bx;
        var e = new Rect(0, 0, 0, 1, 1);
        var f = this.u3(this.cl);
        if (b >= 0 && Rect.l_op_Inequality(c, null) && Rect.l_op_Inequality(d, null)) {
            if (this.vl != null) {
                var g = new ScalerParams(0, e, e, this.vl.ch, f);
                var h = this.vl.ej(b, g);
                if (h < c.left + 0.1 * c.width) {
                    h = h + 0.4 * c.width;
                }
                if (h > c.right - 0.1 * c.width) {
                    h = h - 0.4 * c.width;
                }
                c.x = h - 0.5 * c.width;
            }
            if (this.v4 != null && this.wg != null && this.wf != null && b < this.wg.count && b < this.wf.count) {
                var i = new ScalerParams(0, e, e, this.v4.ch, f);
                i.b = this.id();
                var j = this.v4.ej(this.wg.item(b), i);
                var k = this.v4.ej(this.wf.item(b), i);
                if (!isNaN_(j) && !isNaN_(k)) {
                    var l = Math.abs(j - k);
                    if (c.height < l) {
                        c.height = l;
                        c.y = Math.min(j, k);
                    }
                    else {
                        if (j < c.top + 0.1 * c.height) {
                            j = j + 0.4 * c.height;
                        }
                        if (j > c.bottom - 0.1 * c.height) {
                            j = j - 0.4 * c.height;
                        }
                        c.y = j - 0.5 * c.height;
                    }
                }
            }
            this.ct.au(this.c1, c, true);
        }
        return b >= 0;
    };
    FinancialPriceSeries.prototype.gw = function (a, b, c) {
        var d = _super.prototype.gw.call(this, a, b, c);
        if (this.wh == null || this.we == null || this.wf == null || this.wg == null) {
            d = false;
        }
        return d;
    };
    FinancialPriceSeries.prototype.yr = function (a, b) {
        var e_1, _a;
        var _this = this;
        _super.prototype.yr.call(this, a, b);
        var c = b.by;
        var d = b.bx;
        var e = this.getEffectiveViewport1(b);
        var f = this.vl;
        var g = this.v4;
        var h = new ScalerParams(0, c, d, f.ch, e);
        var i = ((function () {
            var $ret = new ScalerParams(0, c, d, g.ch, e);
            $ret.b = _this.id();
            return $ret;
        })());
        var j = this.vl.ag();
        var k = j[0];
        var l = j[1];
        a.f.clear();
        if (a.m != null) {
            a.m.clear();
        }
        a.n.clear();
        a.q.clear();
        var m = 0;
        var n = typeCast(ISortingAxis_$type, this.vl);
        if (n != null && (n.i$b == null || n.i$b.count != this.dd.count)) {
            return;
        }
        m = this.xc(c, d, e);
        var o = typeCast(FinancialPriceSeriesView.$, b);
        var p = this.hu;
        var q = b.b0.b;
        if (this.trendLineType != 0) {
            var r = new Array(this.dd.count);
            var s = 0;
            try {
                for (var _b = __values(fromEnum(this.w3)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var t = _c.value;
                    r[s] = t;
                    s++;
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            if (this.zg.ca) {
                this.zg.b8.prepareLineCore(a.q, this.trendLineType, boxArray$1(r), this.trendLinePeriod, function (u) { return _this.vl.ej(u, h); }, function (u) { return _this.v4.ej(u, i); }, ((function () {
                    var $ret = new TrendResolutionParams();
                    $ret.e = b.b0.b;
                    $ret.f = b.b0.c;
                    $ret.g = b.b0.d;
                    $ret.a = m;
                    $ret.d = p;
                    $ret.h = d;
                    $ret.c = k;
                    $ret.b = l;
                    return $ret;
                })()));
            }
        }
        var u = this.vl.em(2, h) - this.vl.em(1, h);
        for (var v = b.b0.c; v <= b.b0.d; ++v) {
            var w = void 0;
            var x = v * q;
            if (n == null) {
                w = b.b0.getBucket(v);
            }
            else {
                var y = n.i$b._inner[v];
                x = y;
                var z = n.i$d(y);
                var aa = this.wh.item(y);
                var ab = this.wf.item(y);
                var ac = this.wg.item(y);
                var ad = this.we.item(y);
                var ae = aa;
                var af = ab;
                var ag = ac;
                var ah = ad;
                var ai = z;
                while (v < b.b0.d) {
                    y = n.i$b._inner[v + 1];
                    ai = n.i$d(y);
                    if (ai - z > u * p) {
                        break;
                    }
                    x = y;
                    v++;
                    af = Math.max(af, this.wf.item(y));
                    ag = Math.min(ag, this.wg.item(y));
                    ah = this.we.item(y);
                }
                var aj = NaN;
                if (!isNaN_(z)) {
                    aj = this.vl.ej(z, h);
                }
                w = [aj, ae, af, ag, ah];
            }
            if (!isNaN_(w[0])) {
                if (n != null) {
                    w[0] = w[0] + m;
                }
                else {
                    w[0] = f.ej(w[0], h) + m;
                }
                w[1] = g.ej(w[1], i);
                w[2] = g.ej(w[2], i);
                w[3] = g.ej(w[3], i);
                w[4] = g.ej(w[4], i);
                if (n != null) {
                    if (a.m == null) {
                        a.m = new List$1(Number_$type, 0);
                    }
                    a.m.add(x);
                }
                a.f.add(w);
            }
        }
        return;
    };
    FinancialPriceSeries.prototype.n7 = function (a, b) {
        _super.prototype.n7.call(this, a, b);
        var c = typeCast(FinancialPriceSeriesView.$, b);
        c.ce();
        if (a) {
            c.b9.count = 0;
        }
        if (c.ca && c.b8 != null) {
            c.b8.g$d();
        }
    };
    FinancialPriceSeries.prototype.rj = function (a, b) {
        _super.prototype.rj.call(this, a, b);
        if (this.c1 != null) {
            this.c1.nm();
        }
    };
    FinancialPriceSeries.prototype.vb = function (a, b) {
        if (this.vl != null && this.vl.categoryMode == 0) {
            var c = this.getEffectiveViewport1(this.cl);
            var d = this.zl(this.v2, c) / 2;
            return new Thickness(1, d, 0, d, 0);
        }
        return _super.prototype.vb.call(this, a, b);
    };
    FinancialPriceSeries.prototype.get_d1 = function () {
        return true;
    };
    FinancialPriceSeries.prototype.yt = function (a, b) {
        _super.prototype.yt.call(this, a, b);
        if (this.vl == null || this.v4 == null) {
            return;
        }
        var c = false;
        if (b.b3(a)) {
            c = true;
            b.b5(a);
        }
        this.vu.a2(this, this.wt(), runOn(this, this.vd), this.xi(b), this.xk(b));
        var d = false;
        var e = this.vu.b;
        if (e != null) {
            d = true;
        }
        var f = typeCast(FinancialPriceSeriesView.$, b);
        f.cd();
        f.cb = false;
        if (f.ca) {
            f.b8.g$d();
        }
        if (this.trendLineType != 0) {
            f.b8.g$g(a.q);
        }
        if (d) {
            this.z7(a, b, c);
        }
        else {
            f.b9.count = 0;
            this.z6(a, b);
        }
    };
    FinancialPriceSeries.prototype.ib = function () {
        var a = this.getEffectiveViewport1(this.cl);
        return this.zl(this.v2, a);
    };
    FinancialPriceSeries.prototype.z7 = function (a, b, c) {
        var d = this.zh;
        var e = this.getEffectiveViewport1(b);
        var f = this.zl(b, e);
        var g = (f - 1) / 2;
        var h = typeCast(ISortingAxis_$type, this.vl) !== null;
        var i = typeCast(FinancialPriceSeriesView.$, b);
        i.cb = true;
        var j = a.f;
        var k = 0;
        var l = this.dd.count;
        var m = this.vl;
        var n = new ScalerParams(0, b.by, b.bx, m.ch, e);
        var o = this.tw;
        var p = this.zb;
        if (p == null) {
            p = o;
        }
        var q = this.t0;
        var r = this.aat;
        if (r == null) {
            r = q;
        }
        var _loop_1 = function (s) {
            var t = j._inner[s][0] - g;
            var u = j._inner[s][0];
            var v = j._inner[s][0] + g;
            var w = j._inner[s][1];
            var x = j._inner[s][2];
            var y = j._inner[s][3];
            var z = j._inner[s][4];
            if (isNaN_(w) || isNaN_(x) || isNaN_(y) || isNaN_(z)) {
                return "continue";
            }
            var aa = i.b9.item(k);
            k++;
            var ab = w < z;
            var ac = new PathGeometry();
            if (c) {
                switch (d) {
                    case 0:
                        if (ab) {
                            var ad = w;
                            w = z;
                            z = ad;
                        }
                        var ae = new PathFigure();
                        ae._startPoint = { $type: Point_$type, x: u, y: y };
                        ae._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: u, y: w };
                            return $ret;
                        })()));
                        var af = new PathFigure();
                        af._startPoint = { $type: Point_$type, x: t, y: z };
                        af._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: v, y: z };
                            return $ret;
                        })()));
                        af._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: v, y: w };
                            return $ret;
                        })()));
                        af._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: t, y: w };
                            return $ret;
                        })()));
                        af._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: t, y: z };
                            return $ret;
                        })()));
                        var ag = new PathFigure();
                        ag._startPoint = { $type: Point_$type, x: u, y: z };
                        ag._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: u, y: x };
                            return $ret;
                        })()));
                        ac.c.add(ae);
                        ac.c.add(af);
                        ac.c.add(ag);
                        break;
                    case 1:
                        var ah = new PathFigure();
                        ah._startPoint = { $type: Point_$type, x: t, y: w };
                        ah._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: u, y: w };
                            return $ret;
                        })()));
                        var ai = new PathFigure();
                        ai._startPoint = { $type: Point_$type, x: u, y: y };
                        ai._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: u, y: x };
                            return $ret;
                        })()));
                        var aj = new PathFigure();
                        aj._startPoint = { $type: Point_$type, x: u, y: z };
                        aj._segments.add(((function () {
                            var $ret = new LineSegment(1);
                            $ret.c = { $type: Point_$type, x: v, y: z };
                            return $ret;
                        })()));
                        ac.c.add(ah);
                        ac.c.add(ai);
                        ac.c.add(aj);
                        break;
                }
            }
            if (ab) {
                this_1.vu.ak = p;
                this_1.vu.ag = p;
                this_1.vu.ah = r;
                this_1.vu.al = r;
                this_1.vu.f = true;
            }
            else {
                this_1.vu.ak = o;
                this_1.vu.ag = o;
                this_1.vu.ah = q;
                this_1.vu.al = q;
                this_1.vu.f = false;
            }
            var ak = this_1.vu.aw(l, s)[0];
            if (h && a.m != null && s >= 0 && s < a.m.count) {
                ak = truncate(Math.round(a.m._inner[s]));
            }
            this_1.yq(j, s, l, m, n, b.q, ak);
            if (d == 1) {
                this_1.vu.ad(aa, true, false, false, false);
            }
            else {
                this_1.vu.ad(aa, false, false, false, false);
            }
            if (c) {
                aa.an = ac;
            }
        };
        var this_1 = this;
        for (var s = 0; s < j.count; ++s) {
            _loop_1(s);
        }
        i.b9.count = k;
        i.cf();
    };
    FinancialPriceSeries.prototype.zl = function (a, b) {
        var c = this.vl.k4(a.by, a.bx, b);
        c = Math.max(c, this.hu * 0.9);
        c = Math.max(c, 3);
        return c;
    };
    FinancialPriceSeries.prototype.z6 = function (a, b) {
        var c = this.zh;
        var d = this.getEffectiveViewport1(b);
        var e = this.zl(b, d);
        var f = (e - 1) / 2;
        var g = typeCast(FinancialPriceSeriesView.$, b);
        var h = g.cn();
        var i = g.cm();
        var j = a.f;
        var _loop_2 = function (k) {
            var l = j._inner[k][0] - f;
            var m = j._inner[k][0];
            var n = j._inner[k][0] + f;
            var o = j._inner[k][1];
            var p = j._inner[k][2];
            var q = j._inner[k][3];
            var r = j._inner[k][4];
            if (isNaN_(o) || isNaN_(p) || isNaN_(q) || isNaN_(r)) {
                return "continue";
            }
            var s = o < r;
            var t = s ? i : h;
            switch (c) {
                case 0:
                    if (s) {
                        var u = o;
                        o = r;
                        r = u;
                    }
                    t.d.add(((function () {
                        var $ret = new LineGeometry();
                        $ret.d = { $type: Point_$type, x: m, y: q };
                        $ret.c = { $type: Point_$type, x: m, y: o };
                        return $ret;
                    })()));
                    t.d.add(((function () {
                        var $ret = new RectangleGeometry();
                        $ret.e = new Rect(0, l, r, n - l, o - r);
                        return $ret;
                    })()));
                    t.d.add(((function () {
                        var $ret = new LineGeometry();
                        $ret.d = { $type: Point_$type, x: m, y: r };
                        $ret.c = { $type: Point_$type, x: m, y: p };
                        return $ret;
                    })()));
                    break;
                case 1:
                    t.d.add(((function () {
                        var $ret = new LineGeometry();
                        $ret.d = { $type: Point_$type, x: l, y: o };
                        $ret.c = { $type: Point_$type, x: m, y: o };
                        return $ret;
                    })()));
                    t.d.add(((function () {
                        var $ret = new LineGeometry();
                        $ret.d = { $type: Point_$type, x: m, y: q };
                        $ret.c = { $type: Point_$type, x: m, y: p };
                        return $ret;
                    })()));
                    t.d.add(((function () {
                        var $ret = new LineGeometry();
                        $ret.d = { $type: Point_$type, x: m, y: r };
                        $ret.c = { $type: Point_$type, x: n, y: r };
                        return $ret;
                    })()));
                    break;
            }
        };
        for (var k = 0; k < j.count; ++k) {
            _loop_2(k);
        }
    };
    FinancialPriceSeries.prototype.j9 = function (a, b) {
        if (this.zg.ca && a == this.zg.b8.g$j) {
            return null;
        }
        return _super.prototype.j9.call(this, a, b);
    };
    FinancialPriceSeries.prototype.ra = function () {
        _super.prototype.ra.call(this);
        if (this.index < 0) {
            return;
        }
        this.zg.cl();
    };
    FinancialPriceSeries.prototype.ow = function (a) {
        _super.prototype.ow.call(this, a);
        if (this.zg.ca) {
            this.a4.exportTrendlineData(this, a, this.zg.b8.g$j);
        }
    };
    FinancialPriceSeries.prototype.uf = function () {
        return this.aat;
    };
    FinancialPriceSeries.prototype.qw = function (a, b) {
        _super.prototype.qw.call(this, a, b);
        this.aat = b;
    };
    FinancialPriceSeries.prototype.a6 = function (a) {
        if (this.zh == 0) {
            return 3;
        }
        else if (this.zh == 1) {
            if (this.a5 == 1) {
                return 3;
            }
            return 2;
        }
        return a;
    };
    FinancialPriceSeries.prototype.getDataLegendSeriesContextAt = function (a, b) {
        var c = { $type: Point_$type, x: a, y: b };
        var d = this.ij(c, false, false);
        var e = this.ih(c, false, false);
        var f = new DataLegendSeriesValueInfo();
        f.a = 4;
        f.l = this.xd(c, false, false);
        f.q = "Close";
        f.r = this.xp != null ? this.xp : "Close";
        f.s = this.zo != null ? this.zo : "C:";
        f.t = this.zq != null ? this.zq : "";
        var g = new DataLegendSeriesValueInfo();
        g.l = this.xe(c, false, false);
        g.a = 3;
        g.q = "Open";
        g.r = this.yb != null ? this.yb : "Open";
        g.s = this.z2 != null ? this.z2 : "O:";
        g.t = this.z4 != null ? this.z4 : "";
        g.k = true;
        var h = new DataLegendSeriesValueInfo();
        h.l = (f.l - g.l) / g.l * 100;
        h.l = round10N(h.l, 1);
        h.a = 9;
        h.q = "Change";
        h.r = "Change";
        h.s = "";
        h.v = "";
        h.x = "+";
        h.w = "%";
        h.y = "%";
        h.t = null;
        h.c = false;
        h.k = true;
        h.e = false;
        h.f = true;
        h.h = false;
        h.g = false;
        h.d = false;
        h.n = 1;
        h.m = 1;
        g.z = h.l >= 0 ? this.tw : this.zb;
        f.z = h.l >= 0 ? this.tw : this.zb;
        h.z = h.l >= 0 ? this.tw : this.zb;
        var i = new DataLegendSeriesValueInfo();
        i.l = e > d ? d : e;
        i.a = 1;
        i.q = "Low";
        i.r = this.x7 != null ? this.x7 : "Low";
        i.s = this.zx != null ? this.zx : "L:";
        i.t = this.zz != null ? this.zz : "";
        i.k = true;
        var j = new DataLegendSeriesValueInfo();
        j.l = e > d ? e : d;
        j.a = 2;
        j.q = "High";
        j.r = this.x2 != null ? this.x2 : "High";
        j.s = this.zt != null ? this.zt : "H:";
        j.t = this.zv != null ? this.zv : "";
        j.k = true;
        var k = new DataLegendSeriesValueInfo();
        k.l = (j.l + i.l + f.l) / 3;
        k.l = round10N(k.l, 2);
        k.a = 5;
        k.q = "TypicalPrice";
        k.r = "TypicalPrice";
        k.s = "TP:";
        k.t = "";
        k.k = true;
        var l = new DataLegendSeriesValueInfo();
        l.l = this.xf(c, false, false);
        l.a = 8;
        l.q = "Volume";
        l.r = this.yf != null ? this.yf : "Volume";
        l.s = "VOL:";
        l.t = "";
        l.k = true;
        l.n = 0;
        l.m = 0;
        l.e = false;
        l.f = false;
        l.h = false;
        var m = new List$1(DataLegendSeriesValueInfo.$, 0);
        m.add(g);
        m.add(j);
        m.add(i);
        m.add(f);
        m.add(k);
        m.add(h);
        m.add(l);
        var n = new DataLegendSeriesContext();
        n.h = this.lh();
        n.e = m;
        return n;
    };
    FinancialPriceSeries.prototype.z8 = function () {
        if (this.zi) {
            this.zj = 0;
            for (var a = 0; a < this.wf.count; a++) {
                var b = 0;
                b += this.wf.item(a);
                b += this.wg.item(a);
                b += this.we.item(a);
                this.zj += b / 3;
            }
            this.zk = this.zj / this.wf.count;
            this.zi = false;
        }
    };
    FinancialPriceSeries.prototype.am = function (a) {
        var b = NaN;
        switch (a) {
            case 2:
                b = this.wf.maximum;
                break;
            case 1:
                b = this.wg.minimum;
                break;
            case 3:
                if (this.zi) {
                    this.z8();
                }
                b = this.zk;
                break;
        }
        var c = this.v4;
        if (c.cp) {
            return [NaN, b];
        }
        else {
            return [b, NaN];
        }
    };
    FinancialPriceSeries.prototype.ux = function (a) {
        var b = NaN;
        switch (a) {
            case 2:
                b = this.wf.maximum;
                break;
            case 1:
                b = this.wg.minimum;
                break;
            case 3:
                if (this.zi) {
                    this.z8();
                }
                b = this.zk;
                break;
        }
        if (isNaN_(b)) {
            return { $type: Point_$type, x: NaN, y: NaN };
        }
        var c = this.v4;
        var d = this.getEffectiveViewport1(this.cl);
        var e = new ScalerParams(0, this.cl.by, this.cl.bx, c.ch, d);
        if (c.cp) {
            e.b = this.id();
        }
        e.c = d;
        if (c.cp) {
            return { $type: Point_$type, x: NaN, y: c.ej(b, e) };
        }
        else {
            return { $type: Point_$type, x: c.ej(b, e), y: NaN };
        }
    };
    FinancialPriceSeries.prototype.uy = function (a) {
        var b = this.v4;
        var c = this.getEffectiveViewport1(this.cl);
        var d = new ScalerParams(0, this.cl.by, this.cl.bx, b.ch, c);
        if (b.cp) {
            d.b = this.id();
        }
        d.c = c;
        if (b.cp) {
            return { $type: Point_$type, x: NaN, y: b.ej(a[1], d) };
        }
        else {
            return { $type: Point_$type, x: b.ej(a[0], d), y: NaN };
        }
    };
    FinancialPriceSeries.$t = markType(FinancialPriceSeries, 'FinancialPriceSeries', FinancialSeries.$, [ITrendLineSeries_$type]);
    FinancialPriceSeries.aaa = DependencyProperty.i("ActualTrendLineBrush", Brush.$, FinancialPriceSeries.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    FinancialPriceSeries.$$p = markDep(DependencyProperty, PropertyMetadata, FinancialPriceSeries, 'raisePropertyChanged', ['CloseMemberAsLegendLabel:zo:aab', [2, null], 'CloseMemberAsLegendUnit:zq:aac', [2, null], 'DisplayType:zh:aad', [PriceDisplayType_$type, enumGetBox(PriceDisplayType_$type, 0)], 'HighMemberAsLegendLabel:zt:aae', [2, null], 'HighMemberAsLegendUnit:zv:aaf', [2, null], 'LowMemberAsLegendLabel:zx:aag', [2, null], 'LowMemberAsLegendUnit:zz:aah', [2, null], 'NegativeOutline:aat:aai', [Brush.$, null], 'OpenMemberAsLegendLabel:z2:aaj', [2, null], 'OpenMemberAsLegendUnit:z4:aak', [2, null], 'TrendLineType::aaq', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness::aap', [1, 1.5], 'TrendLinePeriod::aao', [1, 7], 'TrendLineBrush::aal', [Brush.$, null], 'TrendLineZIndex:zn:aar', [1, 1001], 'TrendLineDashArray:aau:aam', [DoubleCollection.$], 'TrendLineDashCap:aav:aan', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return FinancialPriceSeries;
}(FinancialSeries));
export { FinancialPriceSeries };
/**
 * @hidden
 */
var FinancialPriceSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialPriceSeriesView, _super);
    function FinancialPriceSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.b6 = null;
        _this.b9 = null;
        _this.cc = null;
        _this.cq = ((function () {
            var $ret = new Path();
            $ret.an = new GeometryGroup();
            return $ret;
        })());
        _this.cp = ((function () {
            var $ret = new Path();
            $ret.an = new GeometryGroup();
            return $ret;
        })());
        _this.b7 = null;
        _this.co = new Path();
        _this.cb = false;
        _this.b6 = a;
        _this.cc = new List$1(Path.$, 0);
        _this.b9 = ((function () {
            var $ret = new Pool$1(Path.$);
            $ret.create = runOn(_this, _this.cr);
            $ret.activate = runOn(_this, _this.ch);
            $ret.disactivate = runOn(_this, _this.cj);
            $ret.destroy = runOn(_this, _this.ci);
            return $ret;
        })());
        return _this;
    }
    FinancialPriceSeriesView.prototype.cr = function () {
        var a = new Path();
        this.cc.add(a);
        a._visibility = 1;
        return a;
    };
    FinancialPriceSeriesView.prototype.ch = function (a) {
        a._visibility = 0;
    };
    FinancialPriceSeriesView.prototype.cj = function (a) {
        a._visibility = 1;
    };
    FinancialPriceSeriesView.prototype.ci = function (a) {
        this.cc.remove(a);
    };
    FinancialPriceSeriesView.prototype.b1 = function () {
        return new FinancialPriceBucketCalculator(this);
    };
    FinancialPriceSeriesView.prototype.au = function () {
        _super.prototype.au.call(this);
        if (!this.q) {
            this.b6.zh = Defaults.g;
            this.b6.zb = Defaults.ah;
            this.b6.aat = Defaults.ai;
            this.b6.i5 = Defaults.l;
            this.b6.ud = this.b6.t0;
        }
    };
    Object.defineProperty(FinancialPriceSeriesView.prototype, "b8", {
        get: function () {
            if (this.b7 == null) {
                this.b7 = CategoryTrendLineManagerFactory.a(this.b7, this.e.as(), this.e.ro, this.e, this.e.dg);
            }
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialPriceSeriesView.prototype, "ca", {
        get: function () {
            return this.b7 != null;
        },
        enumerable: false,
        configurable: true
    });
    FinancialPriceSeriesView.prototype.ck = function () {
        if (this.b6.zh == 1) {
            this.cq._stroke = this.e.tw;
        }
        else {
            this.cq._stroke = this.e.t0;
        }
        if (this.b6.zh == 1) {
            this.cp._stroke = this.b2.zb;
        }
        else {
            this.cp._stroke = this.b6.aat;
        }
    };
    FinancialPriceSeriesView.prototype.ce = function () {
        this.as();
        this.b9.count = 0;
        this.cd();
    };
    FinancialPriceSeriesView.prototype.cd = function () {
        var a = typeCast(GeometryGroup.$, this.cq.an);
        var b = typeCast(GeometryGroup.$, this.cp.an);
        Extensions.d(a);
        Extensions.d(b);
    };
    FinancialPriceSeriesView.prototype.cn = function () {
        this.as();
        return typeCast(GeometryGroup.$, this.cq.an);
    };
    FinancialPriceSeriesView.prototype.cm = function () {
        this.as();
        return typeCast(GeometryGroup.$, this.cp.an);
    };
    FinancialPriceSeriesView.prototype.cl = function () {
        this.b6.aas = null;
        if (this.b6.trendLineBrush != null) {
            this.b6.aas = this.b6.trendLineBrush;
        }
        else {
            this.b6.aas = this.b6.tw;
        }
    };
    FinancialPriceSeriesView.prototype.bd = function () {
        _super.prototype.bd.call(this);
        this.cq.ad = this.e.hv;
        this.cq.ai = this.e.uk;
        this.cq.aj = this.e.ul;
        if (this.b6.zh == 1) {
            this.cq._stroke = this.e.tw;
        }
        else {
            this.cq._stroke = this.e.t0;
            this.cq._fill = this.e.tw;
        }
        this.cp.ad = this.e.hv;
        this.cp.ai = this.e.uk;
        this.cp.aj = this.e.ul;
        if (this.b6.zh == 1) {
            this.cp._stroke = this.b2.zb;
        }
        else {
            this.cp._stroke = this.b6.aat;
            this.cp._fill = this.b2.zb;
        }
    };
    FinancialPriceSeriesView.prototype.be = function () {
        _super.prototype.be.call(this);
        var a = this.br();
        this.cq.ad = this.e.hv + 3;
        if (this.b6.zh == 1) {
            this.cq._stroke = a;
        }
        else {
            this.cq._stroke = a;
            this.cq._fill = a;
        }
        this.cp.ad = this.e.hv + 3;
        if (this.b6.zh == 1) {
            this.cp._stroke = a;
        }
        else {
            this.cp._stroke = a;
            this.cp._fill = a;
        }
    };
    FinancialPriceSeriesView.prototype.ac = function (a) {
        return this.cc._inner[a];
    };
    FinancialPriceSeriesView.prototype.ab = function (a) {
        var b = this.cc._inner[a];
        this.co._visibility = b._visibility;
        this.co.an = b.an;
        var c = this.bs(a);
        this.co._fill = c;
        this.co._stroke = c;
        this.co.ad = this.e.hv + 3;
        return this.co;
    };
    FinancialPriceSeriesView.prototype.a8 = function (a, b) {
        _super.prototype.a8.call(this, a, b);
        if (a.d) {
            if (this.cb) {
                for (var c = 0; c < this.cc.count; c++) {
                    var d = this.aa(c, b);
                    if (d._visibility == 0) {
                        a.t(d);
                    }
                }
            }
            else {
                a.t(this.cq);
                a.t(this.cp);
            }
        }
    };
    FinancialPriceSeriesView.prototype.a7 = function (a, b) {
        if (a.d) {
            if (this.b6.trendLineType != 0 && !b) {
                var c = this.b8.g$j;
                c.ad = this.b6.trendLineThickness;
                c._stroke = this.b6.aas;
                c.ai = this.b6.aau;
                c.aj = this.b6.aav;
                a.v(c);
            }
        }
        _super.prototype.a7.call(this, a, b);
    };
    FinancialPriceSeriesView.prototype.an = function (a) {
        _super.prototype.an.call(this, a);
        if (this.b6.wt()) {
            for (var b = 0; b < this.cc.count; b++) {
                var c = this.cc._inner[b];
                if (c._fill == this.b6.zb) {
                    this.e.a4.exportPathData(a, c, "negativePathShape" + b, ["Negative"]);
                }
                else {
                    this.e.a4.exportPathData(a, c, "positivePathShape" + b, ["Positive", "Main"]);
                }
            }
        }
        else {
            this.e.a4.exportPathData(a, this.cq, "positivePathShape", ["Positive", "Main"]);
            this.e.a4.exportPathData(a, this.cp, "negativePathShape", ["Negative"]);
        }
    };
    FinancialPriceSeriesView.prototype.cf = function () {
        this.as();
    };
    FinancialPriceSeriesView.prototype.cg = function () {
        if (this.ca) {
            this.b7 = CategoryTrendLineManagerFactory.a(this.b7, this.e.as(), this.e.ro, this.e, this.e.dg);
        }
    };
    FinancialPriceSeriesView.$t = markType(FinancialPriceSeriesView, 'FinancialPriceSeriesView', FinancialSeriesView.$);
    return FinancialPriceSeriesView;
}(FinancialSeriesView));
export { FinancialPriceSeriesView };
