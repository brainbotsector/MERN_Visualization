/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CategorySeries } from "./CategorySeries";
import { IIsCategoryBased_$type } from "./IIsCategoryBased";
import { IHasSingleValueCategory_$type } from "./IHasSingleValueCategory";
import { IHasCategoryTrendline_$type } from "./IHasCategoryTrendline";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { IAnchoredCategorySeriesInteractionManager_$type } from "./IAnchoredCategorySeriesInteractionManager";
import { DVContainer } from "igniteui-react-core";
import { Point_$type, enumGetBox, typeCast, runOn, delegateCombine, markType, markDep } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Series } from "./Series";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { CategoryFrame } from "./CategoryFrame";
import { ICategoryScaler_$type } from "./ICategoryScaler";
import { IScaler_$type } from "./IScaler";
import { CategorySeriesView } from "./CategorySeriesView";
import { CategorySeriesMarkerCollisionAvoidance_$type } from "./CategorySeriesMarkerCollisionAvoidance";
import { ConsolidatedItemHitTestBehavior_$type } from "./ConsolidatedItemHitTestBehavior";
import { CategoryFramePreparer } from "./CategoryFramePreparer";
import { DataLegendSeriesValueInfo } from "igniteui-react-core";
import { DataLegendSeriesContext } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ISortingAxis_$type } from "./ISortingAxis";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { NumericAxisBase } from "./NumericAxisBase";
import { CategoryBucketCalculator } from "./CategoryBucketCalculator";
import { AxisRange } from "./AxisRange";
import { NumericYAxis } from "./NumericYAxis";
import { ScalerParams } from "./ScalerParams";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { CategoryMarkerManager } from "./CategoryMarkerManager";
import { CollisionAvoider } from "./CollisionAvoider";
import { NonCollisionAvoider } from "./NonCollisionAvoider";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { PropertyMetadata } from "igniteui-react-core";
import { truncate, isNaN_, isInfinity } from "igniteui-react-core";
import { CategoryTrendLineManagerFactory } from "./CategoryTrendLineManagerFactory";
/**
 * @hidden
 */
var AnchoredCategorySeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredCategorySeries, _super);
    function AnchoredCategorySeries() {
        var _this = _super.call(this) || this;
        _this.yz = null;
        _this.y4 = false;
        _this.y1 = null;
        _this.yw = null;
        _this.zb = null;
        _this.za = null;
        _this.y3 = true;
        _this.y5 = 0;
        _this.y6 = 0;
        _this.w7 = new CategoryFramePreparer(1, _this, _this.xb, _this, _this, _this.xb.cu);
        return _this;
    }
    Object.defineProperty(AnchoredCategorySeries.prototype, "y0", {
        get: function () {
            var _this = this;
            if (this.yz == null) {
                this.yz = DVContainer.instance.createInstance(IAnchoredCategorySeriesInteractionManager_$type, function () { return _this.dg.n; });
            }
            return this.yz;
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeries.prototype.getHostReferenceValue = function () {
        return this.id();
    };
    AnchoredCategorySeries.prototype.lj = function () {
        return AnchoredCategorySeries.$$p[5];
    };
    AnchoredCategorySeries.prototype.ci = function () {
        var a = new AnchoredCategorySeriesView(this);
        return a;
    };
    AnchoredCategorySeries.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.yv = a;
    };
    AnchoredCategorySeries.prototype.j5 = function (a, b) {
        var c = this.mh(b);
        if (c == AnchoredCategorySeries.$$p[5]) {
            return this.j6(a, b, this.zl);
        }
        if (c == AnchoredCategorySeries.$$p[1]) {
            return this.j6(a, b, this.zd);
        }
        return _super.prototype.j5.call(this, a, b);
    };
    AnchoredCategorySeries.prototype.li = function (a) {
        var b = this.mh(a);
        if (b == AnchoredCategorySeries.$$p[5]) {
            return this.zl;
        }
        if (b == AnchoredCategorySeries.$$p[1]) {
            return this.zd;
        }
        return _super.prototype.li.call(this, a);
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "valueColumn", {
        get: function () {
            return this.y1;
        },
        set: function (a) {
            if (this.y1 != a) {
                var b = this.y1;
                this.y1 = a;
                if (!this.y4) {
                    this.raisePropertyChanged("ValueColumn", b, this.y1);
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeries.prototype.getDataLegendSeriesContextAt = function (a, b) {
        var c = new DataLegendSeriesValueInfo();
        c.a = 0;
        c.l = this.il({ $type: Point_$type, x: a, y: b }, false, false);
        c.r = this.zl != null ? this.zl : "Value";
        c.q = "Value";
        c.s = this.zh != null ? this.zh : "V:";
        c.t = this.zj != null ? this.zj : "";
        var d = new DataLegendSeriesContext();
        d.e = ((function () {
            var $ret = new List$1(DataLegendSeriesValueInfo.$, 0);
            $ret.add(c);
            return $ret;
        })());
        d.h = this.lh();
        return d;
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "z8", {
        get: function () {
            return this.c(AnchoredCategorySeries.zu);
        },
        set: function (a) {
            this.h(AnchoredCategorySeries.zu, a);
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeries.prototype.fx = function (a) {
        var b = new Rect(0, 0, 0, 1, 1);
        var c = this.fetchXAxis();
        var d = this.fetchYAxis();
        var e = this.u3(this.cl);
        var f = c != null ? this.w7.r(typeCast(ICategoryScaler_$type, c), b, b, e) : 0;
        return this.y0.c$a(this, this.valueColumn, c, d, f, a);
    };
    AnchoredCategorySeries.prototype.ys = function (a, b, c) {
        if (b < a || a < 0 || a > this.valueColumn.count || b < 0 || b > this.valueColumn.count || c == null) {
            return null;
        }
        var d = new Array((b - a) + 1);
        var e = c.cn;
        var f = null;
        if (e) {
            f = c.i$b;
        }
        for (var g = a; g <= b; g++) {
            var h = g;
            if (e) {
                h = f._inner[h];
            }
            d[g - a] = this.dd.item(g);
        }
        return d;
    };
    AnchoredCategorySeries.prototype.p5 = function (a, b, c, d) {
        _super.prototype.p5.call(this, a, b, c, d);
        if (this.yv.c6 && this.yv.c5.g$b(a, b, c, d)) {
            var e = false;
            if (b == "FastItemsSource") {
                e = this.f0 && c != null;
            }
            this.qm(e);
            this.ph();
        }
        switch (b) {
            case AnchoredCategorySeries.$$p[3]:
            case AnchoredCategorySeries.$$p[4]:
                this.pb();
                break;
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.valueColumn);
                    this.valueColumn = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.valueColumn = this.da(this.zl);
                }
                var f = typeCast(NumericAxisBase.$, this.fetchYAxis());
                if (f != null && !f.c1()) {
                    this.yv.cu.g(this.hu);
                    this.qm(this.f0 && c != null);
                }
                break;
            case AnchoredCategorySeries.$$p[5]:
                if (this.dd != null) {
                    this.dd.deregisterColumn(this.valueColumn);
                    this.valueColumn = this.da(this.zl);
                }
                this.zb = this.zl;
                break;
            case AnchoredCategorySeries.$$p[1]:
                this.za = this.zd;
                this.qm(true);
                break;
            case "ValueColumn":
                if (this.yv.c6) {
                    this.yv.c5.g$i();
                }
                var g = typeCast(NumericAxisBase.$, this.fetchYAxis());
                if (g != null && !g.c1()) {
                    this.yv.cu.g(this.hu);
                    this.qm(this.f0 && this.dv);
                }
                this.zt();
                this.rg();
                break;
            case "TrendLineBrush":
                this.qb(b);
                break;
            case "ErrorBarSettings":
                this.qm(false);
                break;
            case "TrendLineType":
                this.ph();
                break;
            case AnchoredCategorySeries.$$p[2]:
                this.qm(false);
                break;
        }
    };
    AnchoredCategorySeries.prototype.aq = function (a) {
        if (this.valueColumn == null || this.valueColumn.count == 0) {
            return null;
        }
        if (a == this.fetchXAxis()) {
            return new AxisRange(0, this.valueColumn.count - 1);
        }
        if (a == this.fetchYAxis()) {
            return new AxisRange(this.valueColumn.minimum, this.valueColumn.maximum);
        }
        return null;
    };
    AnchoredCategorySeries.prototype.oc = function (a, b, c, d) {
        switch (a) {
            case 4:
            case 1:
            case 0:
                this.yv.cu.g(this.hu);
                break;
        }
        if (this.yv.c6) {
            this.yv.c5.g$e(a, b, c, d);
        }
        this.zt();
        this.rg();
        if (a == 0 || a == 2 || a == 3 || a == 4) {
            this.y3 = true;
        }
        else if (a == 1) {
            for (var e = b; e < b + c; e++) {
                this.y5 += this.valueColumn.item(e);
            }
            this.y6 = this.y5 / this.valueColumn.count;
        }
    };
    AnchoredCategorySeries.prototype.x2 = function () {
        return this.y7(this.xb);
    };
    AnchoredCategorySeries.prototype.y7 = function (a) {
        var b = 0;
        var c = a.by;
        var d = a.bx;
        var e = this.getEffectiveViewport1(a);
        var f = typeCast(NumericYAxis.$, this.fetchYAxis());
        if (!c.isEmpty && !d.isEmpty && f != null) {
            var g = new ScalerParams(0, c, d, f.ch, e);
            if (f.cp) {
                g.b = this.id();
            }
            b = f.ej(f.l7, g);
        }
        return b;
    };
    AnchoredCategorySeries.prototype.zr = function (a, b, c) {
        var d = this.y7(c);
        if (a.count > 0) {
            var e = d;
            a.add({ $type: Point_$type, x: a._inner[a.count - 1].x, y: e });
            a.add({ $type: Point_$type, x: a._inner[0].x, y: e });
        }
    };
    AnchoredCategorySeries.prototype.yt = function (a, b, c, d) {
        return this.yu(a, b, c, d, false);
    };
    AnchoredCategorySeries.prototype.yu = function (a, b, c, d, e) {
        return CategorySeries.ww(a, b, c, d, e);
    };
    AnchoredCategorySeries.prototype.fv = function () {
        return this.highlightedItemsSource != null || this.zd != null;
    };
    AnchoredCategorySeries.prototype.hb = function () {
        var a = _super.prototype.hb.call(this);
        {
            var b = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.ad = "ValueMemberPath";
                $ret.p = true;
                $ret.y = "HighlightedValueMemberPath";
                $ret.q = true;
                return $ret;
            })());
            b.valueResolving = delegateCombine(b.valueResolving, runOn(this, this.zn));
            a.add(b);
        }
        return a;
    };
    AnchoredCategorySeries.prototype.zn = function (a, b) {
        if (this.zd != null) {
            b.value = this.zd;
            return;
        }
        b.value = this.zl;
    };
    AnchoredCategorySeries.prototype.gw = function (a, b, c) {
        var d = _super.prototype.gw.call(this, a, b, c);
        var e = c;
        if (this.valueColumn == null || this.valueColumn.count == 0 || e.cu.d < 1) {
            d = false;
        }
        return d;
    };
    AnchoredCategorySeries.prototype.n7 = function (a, b) {
        _super.prototype.n7.call(this, a, b);
        var c = b;
        c.c0();
        if (c.c6) {
            c.c5.g$d();
        }
    };
    AnchoredCategorySeries.prototype.yi = function (a, b) {
        _super.prototype.yi.call(this, a, b);
        this.w8(b).d(a, b);
    };
    AnchoredCategorySeries.prototype.yl = function (a, b) {
        _super.prototype.yl.call(this, a, b);
        var c = typeCast(AnchoredCategorySeriesView.$, b);
        c.b6 = true;
        if (c.c6) {
            c.c5.g$g(a.q);
        }
        if (this.vr()) {
            CategoryMarkerManager.e(this, a.n, b.cx, this.vt);
            this.yf(b, a);
            b.cp();
        }
        this.zo(a, b);
    };
    AnchoredCategorySeries.prototype.ql = function (a, b, c, d, e) {
        _super.prototype.ql.call(this, a, b, c, d, e);
        var f = this.a2.a$i.item(d);
        var g = f;
        g.cu.g(this.hu);
        f.a3(c);
        if (this.dt(g)) {
            return;
        }
        if (this.yw == null) {
            this.yw = new CategoryFrame(3);
        }
        this.yw.v();
        this.yi(this.yw, g);
        this.yl(this.yw, g);
    };
    AnchoredCategorySeries.prototype.zo = function (a, b) {
    };
    AnchoredCategorySeries.prototype.ra = function () {
        _super.prototype.ra.call(this);
        if (this.index < 0) {
            return;
        }
        this.yv.da();
        if (this.trendLineBrush != null) {
            this.yv.c8();
        }
        else {
            this.yv.c7();
        }
    };
    AnchoredCategorySeries.prototype.j9 = function (a, b) {
        if (this.yv.c6 && a == this.yv.c5.g$j) {
            return null;
        }
        return _super.prototype.j9.call(this, a, b);
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "currentCategoryMode", {
        get: function () {
            return this.preferredCategoryMode(typeCast(CategoryAxisBase.$, this.w1()));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "scaler", {
        get: function () {
            return typeCast(ICategoryScaler_$type, this.w1());
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "yScaler", {
        get: function () {
            return typeCast(IScaler_$type, this.xh());
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "bucketizer", {
        get: function () {
            return this.yv.cu;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeries.prototype, "currentMode2Index", {
        get: function () {
            return this.x6();
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeries.prototype.provideCollisionDetector = function () {
        if (this.yx == 1) {
            return new CollisionAvoider();
        }
        return NonCollisionAvoider.b;
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "trendlinePreparer", {
        get: function () {
            return this.yv.c6 ? this.yv.c5 : null;
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeries.prototype.ow = function (a) {
        _super.prototype.ow.call(this, a);
        if (this.yv.c6) {
            this.a4.exportTrendlineData(this, a, this.yv.c5.g$j);
        }
    };
    AnchoredCategorySeries.prototype.j2 = function (a) {
        var _this = this;
        var b = this.fetchXAxis();
        var c = this.fetchYAxis();
        return this.y0.c$b(this, a, this.x3(this.cl), this.valueColumn, b, c, this.yy == 1, function (d) { return _super.prototype.j2.call(_this, d); });
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "mayContainUnknowns", {
        get: function () {
            return this.valueColumn == null || this.valueColumn.mayContainUnknowns;
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeries.prototype.id = function () {
        return Series.ie(this.valueColumn, typeCast(ISortingAxis_$type, this.fetchXAxis()));
    };
    AnchoredCategorySeries.prototype.get_y9 = function () {
        return 0;
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "y9", {
        get: function () {
            return this.get_y9();
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeries.prototype.ar = function (a) {
        if (a.isEmpty && this.c1 != null) {
            a = this.c1.vh;
        }
        if (this.valueColumn == null) {
            return null;
        }
        var b = this.u1(this.cl);
        var c = this.w1();
        var d = new ScalerParams(0, a, this.c1.vw, c.ch, this.getEffectiveViewport());
        var e = (c.em(b.left, d));
        var f = (c.em(b.right, d));
        if (c.ch) {
            var g = e;
            e = f;
            f = g;
        }
        e -= this.y9;
        f += this.y9;
        var h = null;
        if (c.cn) {
            h = c;
            e = h.i$f(e);
            f = h.i$f(f);
        }
        else {
            e = Math.floor(e);
            f = Math.ceil(f);
        }
        if (isNaN_(e) || isNaN_(f)) {
            return null;
        }
        e = Math.max(0, Math.min(this.valueColumn.count - 1, e));
        f = Math.max(0, Math.min(this.valueColumn.count - 1, f));
        var i = 1.7976931348623157E+308;
        var j = -1.7976931348623157E+308;
        if (truncate(e) <= truncate(f)) {
            for (var k = truncate(e); k <= truncate(f); k++) {
                var l = k;
                if (h != null) {
                    l = h.i$b._inner[k];
                }
                var m = this.valueColumn.item(l);
                if (this.valueColumn.mayContainUnknowns) {
                    if (isInfinity(m) || isNaN_(m)) {
                        continue;
                    }
                }
                i = Math.min(i, m);
                j = Math.max(j, m);
            }
        }
        var n = new AxisRange(i, j);
        n = this.ap(n, this.xh(), a);
        return n;
    };
    AnchoredCategorySeries.prototype.zt = function () {
        this.h2 = this.valueColumn == null || this.valueColumn.count == 0 ? NaN : this.valueColumn.item(this.valueColumn.count - 1);
    };
    AnchoredCategorySeries.prototype.zs = function () {
        if (this.y3) {
            this.y5 = 0;
            for (var a = 0; a < this.valueColumn.count; a++) {
                this.y5 += this.valueColumn.item(a);
            }
            this.y6 = this.y5 / this.valueColumn.count;
            this.y3 = false;
        }
    };
    AnchoredCategorySeries.prototype.ip = function (a, b) {
        if (b == null || !b.cj) {
            return NaN;
        }
        var c = this.xh();
        if (b != c) {
            return NaN;
        }
        var d = this.am(a);
        if (c.cp) {
            return d[1];
        }
        else {
            return d[0];
        }
    };
    AnchoredCategorySeries.prototype.am = function (a) {
        var b = NaN;
        switch (a) {
            case 5:
            case 2:
                b = this.valueColumn.maximum;
                break;
            case 4:
            case 1:
                b = this.valueColumn.minimum;
                break;
            case 6:
            case 3:
                if (this.y3) {
                    this.zs();
                }
                b = this.y6;
                break;
        }
        var c = this.xh();
        if (c.cp) {
            return [NaN, b];
        }
        else {
            return [b, NaN];
        }
    };
    AnchoredCategorySeries.prototype.ux = function (a) {
        var b = NaN;
        switch (a) {
            case 5:
            case 2:
                b = this.valueColumn.maximum;
                break;
            case 4:
            case 1:
                b = this.valueColumn.minimum;
                break;
            case 6:
            case 3:
                if (this.y3) {
                    this.zs();
                }
                b = this.y6;
                break;
        }
        if (isNaN_(b)) {
            return { $type: Point_$type, x: NaN, y: NaN };
        }
        var c = this.xh();
        var d = this.getEffectiveViewport1(this.cl);
        var e = new ScalerParams(0, this.cl.by, this.cl.bx, c.ch, d);
        if (c.cp) {
            e.b = this.id();
        }
        e.c = d;
        if (c.cp) {
            return { $type: Point_$type, x: NaN, y: c.ej(b, e) };
        }
        else {
            return { $type: Point_$type, x: c.ej(b, e), y: NaN };
        }
    };
    AnchoredCategorySeries.prototype.uy = function (a) {
        var b = this.xh();
        var c = this.getEffectiveViewport1(this.cl);
        var d = new ScalerParams(0, this.cl.by, this.cl.bx, b.ch, c);
        if (b.cp) {
            d.b = this.id();
        }
        d.c = c;
        if (b.cp) {
            return { $type: Point_$type, x: NaN, y: b.ej(a[1], d) };
        }
        else {
            return { $type: Point_$type, x: b.ej(a[0], d), y: NaN };
        }
    };
    Object.defineProperty(AnchoredCategorySeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.xy;
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeries.$t = markType(AnchoredCategorySeries, 'AnchoredCategorySeries', CategorySeries.$, [IIsCategoryBased_$type, IHasSingleValueCategory_$type, IHasCategoryTrendline_$type, ITrendLineSeries_$type]);
    AnchoredCategorySeries.zu = DependencyProperty.i("ActualTrendLineBrush", Brush.$, AnchoredCategorySeries.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    AnchoredCategorySeries.$$p = markDep(DependencyProperty, PropertyMetadata, AnchoredCategorySeries, 'raisePropertyChanged', ['ConsolidatedItemHitTestBehavior:yy:zv', [ConsolidatedItemHitTestBehavior_$type, enumGetBox(ConsolidatedItemHitTestBehavior_$type, 0)], 'HighlightedValueMemberPath:zd:zw', [2, null], 'MarkerCollisionAvoidance:yx:zx', [CategorySeriesMarkerCollisionAvoidance_$type, enumGetBox(CategorySeriesMarkerCollisionAvoidance_$type, 1)], 'ValueMemberAsLegendLabel:zh:z5', [2, null], 'ValueMemberAsLegendUnit:zj:z6', [2, null], 'ValueMemberPath:zl:z7', [2, null], 'TrendLineType::z3', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness::z2', [1, 1.5], 'TrendLinePeriod::z1', [1, 7], 'TrendLineBrush::zy', [Brush.$, null], 'TrendLineZIndex:y8:z4', [1, 1001], 'TrendLineDashArray:z9:zz', [DoubleCollection.$], 'TrendLineDashCap:aaa:z0', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return AnchoredCategorySeries;
}(CategorySeries));
export { AnchoredCategorySeries };
/**
 * @hidden
 */
var AnchoredCategoryBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredCategoryBucketCalculator, _super);
    function AnchoredCategoryBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.i = null;
        _this.h = null;
        _this.j = 0;
        _this.i = a;
        return _this;
    }
    AnchoredCategoryBucketCalculator.prototype.getBucketWithoutUnknowns = function (a) {
        var b = this.h;
        var c = this.j;
        var d = a * this.d;
        var e = d + this.d - 1;
        var f = c - 1;
        d = d < f ? d : f;
        e = e < f ? e : f;
        var g = 1.7976931348623157E+308;
        var h = -1.7976931348623157E+308;
        var i = true;
        for (var j = d; j <= e; ++j) {
            var k = b[j];
            g = g < k ? g : k;
            h = h > k ? h : k;
            i = false;
        }
        if (!i) {
            return [0.5 * (d + e), g, h];
        }
        return [0.5 * (d + e), NaN, NaN];
    };
    AnchoredCategoryBucketCalculator.prototype.getBucket = function (a) {
        var b = this.h;
        var c = this.j;
        var d = a * this.d;
        var e = d + this.d - 1;
        var f = c - 1;
        d = d < f ? d : f;
        e = e < f ? e : f;
        var g = 0;
        var h = 0;
        var i = true;
        for (var j = d; j <= e; ++j) {
            var k = b[j];
            if (!i) {
                if (!isNaN_(k)) {
                    g = g < k ? g : k;
                    h = h > k ? h : k;
                }
            }
            else {
                if (!isNaN_(k)) {
                    g = k;
                    h = k;
                    i = false;
                }
            }
        }
        if (!i) {
            return [0.5 * (d + e), g, h];
        }
        return [0.5 * (d + e), NaN, NaN];
    };
    AnchoredCategoryBucketCalculator.prototype.cacheValues = function () {
        this.j = this.i.c3.valueColumn.count;
        this.h = this.i.c3.valueColumn.asArray();
    };
    AnchoredCategoryBucketCalculator.prototype.unCacheValues = function () {
        this.h = null;
    };
    AnchoredCategoryBucketCalculator.$t = markType(AnchoredCategoryBucketCalculator, 'AnchoredCategoryBucketCalculator', CategoryBucketCalculator.$);
    return AnchoredCategoryBucketCalculator;
}(CategoryBucketCalculator));
export { AnchoredCategoryBucketCalculator };
/**
 * @hidden
 */
var AnchoredCategorySeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredCategorySeriesView, _super);
    function AnchoredCategorySeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c3 = null;
        _this.c4 = null;
        _this.c3 = a;
        return _this;
    }
    Object.defineProperty(AnchoredCategorySeriesView.prototype, "c5", {
        get: function () {
            if (this.c4 == null) {
                this.c4 = CategoryTrendLineManagerFactory.a(this.c4, this.e.as(), this.e.ro, this.e, this.e.dg);
            }
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AnchoredCategorySeriesView.prototype, "c6", {
        get: function () {
            return this.c4 != null;
        },
        enumerable: false,
        configurable: true
    });
    AnchoredCategorySeriesView.prototype.da = function () {
        this.c3.z8 = null;
    };
    AnchoredCategorySeriesView.prototype.c8 = function () {
        this.c3.z8 = this.c3.trendLineBrush;
    };
    AnchoredCategorySeriesView.prototype.c7 = function () {
        this.c3.z8 = this.c3.tw;
    };
    AnchoredCategorySeriesView.prototype.cv = function () {
        return new AnchoredCategoryBucketCalculator(this);
    };
    AnchoredCategorySeriesView.prototype.c9 = function () {
        this.cu.cacheValues();
    };
    AnchoredCategorySeriesView.prototype.db = function () {
        this.cu.unCacheValues();
    };
    AnchoredCategorySeriesView.prototype.dc = function (a) {
        var b = this.cx.item(a);
        return this.cs(b);
    };
    AnchoredCategorySeriesView.prototype.a7 = function (a, b) {
        if (a.d) {
            if (this.c3.trendLineType != 0 && !b) {
                var c = this.c5.g$j;
                c.ad = this.c3.trendLineThickness;
                c._stroke = this.c3.z8;
                c.ai = this.c3.z9;
                c.aj = this.c3.aaa;
                a.v(c);
            }
        }
        _super.prototype.a7.call(this, a, b);
    };
    AnchoredCategorySeriesView.prototype.getDefaultTooltipTemplate = function () {
        return this.c3.y0.c$c(this.e, this.c3.zl);
    };
    AnchoredCategorySeriesView.$t = markType(AnchoredCategorySeriesView, 'AnchoredCategorySeriesView', CategorySeriesView.$);
    return AnchoredCategorySeriesView;
}(CategorySeriesView));
export { AnchoredCategorySeriesView };
