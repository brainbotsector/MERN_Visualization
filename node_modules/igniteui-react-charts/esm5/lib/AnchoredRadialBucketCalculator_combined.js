/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { RadialBucketCalculator } from "./RadialBucketCalculator";
import { markType, Point_$type, runOn, delegateCombine, enumGetBox, typeCast, markDep } from "igniteui-react-core";
import { isNaN_, intDivide, isInfinity } from "igniteui-react-core";
import { RadialBase } from "./RadialBase";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { DependencyProperty } from "igniteui-react-core";
import { TrendLineType_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { PenLineCap_$type } from "igniteui-react-core";
import { DoubleCollection } from "igniteui-react-core";
import { RadialFrame } from "./RadialFrame";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { DataLegendSeriesValueInfo } from "igniteui-react-core";
import { DataLegendSeriesContext } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { NumericAxisBase } from "./NumericAxisBase";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { RadialBaseView } from "./RadialBaseView";
import { CollisionAvoider } from "./CollisionAvoider";
import { Clipper } from "igniteui-react-core";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { RadialTrendLineManager } from "./RadialTrendLineManager";
import { CategoryMarkerManager } from "./CategoryMarkerManager";
import { PropertyMetadata } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var AnchoredRadialBucketCalculator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredRadialBucketCalculator, _super);
    function AnchoredRadialBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.f = null;
        _this.f = a;
        return _this;
    }
    AnchoredRadialBucketCalculator.prototype.getBucket = function (a) {
        var b = this.f.cz.yi;
        var c = Math.min(a * this.b, b.count - 1);
        var d = Math.min(c + this.b - 1, b.count - 1);
        var e = NaN;
        var f = NaN;
        for (var g = c; g <= d; ++g) {
            var h = b.item(g);
            if (!isNaN_(e)) {
                if (!isNaN_(h)) {
                    e = Math.min(e, h);
                    f = Math.max(f, h);
                }
            }
            else {
                e = h;
                f = h;
            }
        }
        if (!isNaN_(e)) {
            return [0.5 * (c + d), e, f];
        }
        return [0.5 * (c + d), NaN, NaN];
    };
    AnchoredRadialBucketCalculator.$t = markType(AnchoredRadialBucketCalculator, 'AnchoredRadialBucketCalculator', RadialBucketCalculator.$);
    return AnchoredRadialBucketCalculator;
}(RadialBucketCalculator));
export { AnchoredRadialBucketCalculator };
/**
 * @hidden
 */
var AnchoredRadialSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredRadialSeries, _super);
    function AnchoredRadialSeries() {
        var _this = _super.call(this) || this;
        _this.yd = null;
        _this.yh = null;
        _this.zo = { $type: Point_$type, x: 0, y: 0 };
        _this.yf = null;
        _this.ye = null;
        _this.yf = new RadialFrame(3);
        _this.yd = new CategoryLineRasterizer();
        return _this;
    }
    AnchoredRadialSeries.prototype.ci = function () {
        return new AnchoredRadialSeriesView(this);
    };
    AnchoredRadialSeries.prototype.n4 = function () {
        _super.prototype.n4.call(this);
        this.wy = null;
        this.w0 = null;
    };
    AnchoredRadialSeries.prototype.j5 = function (a, b) {
        var c = this.mh(b);
        if (c == AnchoredRadialSeries.$$p[3]) {
            return this.j6(a, b, this.y0);
        }
        if (c == AnchoredRadialSeries.$$p[0]) {
            return this.j6(a, b, this.yt);
        }
        return _super.prototype.j5.call(this, a, b);
    };
    AnchoredRadialSeries.prototype.li = function (a) {
        var b = this.mh(a);
        if (b == AnchoredRadialSeries.$$p[3]) {
            return this.y0;
        }
        if (b == AnchoredRadialSeries.$$p[0]) {
            return this.yt;
        }
        return _super.prototype.li.call(this, a);
    };
    AnchoredRadialSeries.prototype.px = function (a) {
        _super.prototype.px.call(this, a);
        this.yc = a;
    };
    AnchoredRadialSeries.prototype.jq = function (a, b) {
        return this.jr(a, b, this.wy, null, this.yi);
    };
    AnchoredRadialSeries.prototype.jo = function (a, b) {
        return this.jp(a, b, this.wy, null, this.yi);
    };
    AnchoredRadialSeries.prototype.h4 = function (a, b, c, d, e) {
        if (this.yi == null) {
            return Number.POSITIVE_INFINITY;
        }
        return this.h5(a, b, this.wy, d, e, this.yi.count, null);
    };
    AnchoredRadialSeries.prototype.il = function (a, b, c) {
        var d = this.getEffectiveViewport1(this.cl);
        var e = this.yn(this.wy, this.cl.by, this.cl.bx, d);
        var f = new ScalerParams(0, this.cl.by, this.cl.bx, this.wy.ch, d);
        f.c = this.c1.vw;
        return this.io(this.yi, a, this.wy, f, e, null, b, c);
    };
    AnchoredRadialSeries.prototype.uu = function (a, b, c) {
        if (this.w0 == null || this.wy == null || this.cl == null || this.cl.by.isEmpty || this.cl.bx.isEmpty) {
            return { $type: Point_$type, x: NaN, y: NaN };
        }
        var d = this.getEffectiveViewport1(this.cl);
        var e = new ScalerParams(0, this.cl.by, this.cl.bx, this.w0.ch, d);
        e.c = this.getEffectiveViewport1(this.cl);
        var f = this.il(a, b, c);
        f = this.w0.ej(f, e);
        var g = this.w1.c(a);
        if (!b && this.wy != null) {
            var h = this.jq(a, c);
            var i = this.jo(a, c);
            var j = this.yn(this.wy, this.cl.by, this.cl.bx, d);
            var k = new ScalerParams(0, this.cl.by, this.cl.bx, this.wy.ch, d);
            k.c = this.c1.vw;
            var l = this.h4(a, h, this.wy, k, j);
            var m = this.h4(a, i, this.wy, k, j);
            if (m <= l) {
                g = this.wy.ej(i, k) + j;
            }
            else {
                g = this.wy.ej(h, k) + j;
            }
        }
        var n = this.w1.d(g, f, this.cl.by, this.cl.bx);
        var o = this.w1.e(g, f, this.cl.by, this.cl.bx);
        return { $type: Point_$type, x: n, y: o };
    };
    AnchoredRadialSeries.prototype.fv = function () {
        return this.highlightedItemsSource != null || this.yt != null;
    };
    AnchoredRadialSeries.prototype.hb = function () {
        var a = _super.prototype.hb.call(this);
        {
            var b = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.ad = "ValueMemberPath";
                $ret.p = true;
                $ret.y = "HighlightedValueMemberPath";
                $ret.q = true;
                return $ret;
            })());
            b.valueResolving = delegateCombine(b.valueResolving, runOn(this, this.y4));
            a.add(b);
        }
        return a;
    };
    AnchoredRadialSeries.prototype.y4 = function (a, b) {
        if (this.yt != null) {
            b.value = this.yt;
            return;
        }
        b.value = this.y0;
    };
    Object.defineProperty(AnchoredRadialSeries.prototype, "yi", {
        get: function () {
            return this.yh;
        },
        set: function (a) {
            if (this.yh != a) {
                var b = this.yh;
                this.yh = a;
                this.raisePropertyChanged("ValueColumn", b, this.yh);
            }
        },
        enumerable: false,
        configurable: true
    });
    AnchoredRadialSeries.prototype.getDataLegendSeriesContextAt = function (a, b) {
        var c = new DataLegendSeriesValueInfo();
        c.a = 0;
        c.l = this.il({ $type: Point_$type, x: a, y: b }, false, false);
        c.q = "Value";
        c.r = this.y0 != null ? this.y0 : "Value";
        c.s = this.yw != null ? this.yw : "V:";
        c.t = this.yy != null ? this.yy : "";
        var d = new DataLegendSeriesContext();
        d.e = ((function () {
            var $ret = new List$1(DataLegendSeriesValueInfo.$, 0);
            $ret.add(c);
            return $ret;
        })());
        d.h = this.lh();
        return d;
    };
    Object.defineProperty(AnchoredRadialSeries.prototype, "zk", {
        get: function () {
            return this.c(AnchoredRadialSeries.y8);
        },
        set: function (a) {
            this.h(AnchoredRadialSeries.y8, a);
        },
        enumerable: false,
        configurable: true
    });
    AnchoredRadialSeries.prototype.aq = function (a) {
        if (a != null && a == this.wy && this.yi != null && this.yi.count > 0) {
            return new AxisRange(0, this.yi.count - 1);
        }
        if (a != null && a == this.w0 && this.yi != null && this.yi.count > 0) {
            return new AxisRange(this.yi.minimum, this.yi.maximum);
        }
        return null;
    };
    AnchoredRadialSeries.prototype.p5 = function (a, b, c, d) {
        _super.prototype.p5.call(this, a, b, c, d);
        if (this.yc.c0.g$b(a, b, c, d)) {
            this.qm(false);
            this.ph();
        }
        var e = typeCast(NumericAxisBase.$, this.w0);
        switch (b) {
            case AnchoredRadialSeries.$$p[1]:
            case AnchoredRadialSeries.$$p[2]:
                this.pb();
                break;
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) !== null) {
                    c.deregisterColumn(this.yi);
                    this.yi = null;
                }
                if (typeCast(IFastItemsSource_$type, d) !== null) {
                    this.yi = this.da(this.y0);
                    this.yc.cv.e(this.hu);
                }
                if (e != null && !e.c1()) {
                    this.yc.cv.e(this.hu);
                    this.qm(this.f0 && c != null);
                }
                break;
            case AnchoredRadialSeries.$$p[3]:
                if (this.dd != null) {
                    this.dd.deregisterColumn(this.yi);
                    this.yi = this.da(this.y0);
                }
                break;
            case "ValueColumn":
                if (e != null && !e.c1()) {
                    this.yc.cv.e(this.hu);
                    this.qm(this.f0 && this.dv);
                }
                break;
            case "TrendLineBrush":
                this.qb(b);
                break;
            case "TrendLineType":
                this.ph();
                break;
        }
    };
    AnchoredRadialSeries.prototype.oc = function (a, b, c, d) {
        switch (a) {
            case 4:
            case 1:
            case 0:
                this.yc.cv.e(this.hu);
                break;
        }
        this.yc.c0.g$e(a, b, c, d);
        switch (a) {
            case 4:
                if (this.w0 != null && !this.w0.c1()) {
                    this.qm(true);
                }
                break;
            case 1:
                if (this.w0 != null && !this.w0.c1()) {
                    this.qm(true);
                }
                break;
            case 0:
                if (this.w0 != null && !this.w0.c1()) {
                    this.qm(true);
                }
                break;
            case 2:
                if (this.y0 != null && this.yc.cv.b > 0 && this.w0 != null && !this.w0.c1()) {
                    this.qm(true);
                }
                break;
            case 3:
                if (d == this.y0) {
                    if (this.w0 != null && !this.w0.c1()) {
                        this.qm(true);
                    }
                }
                break;
        }
    };
    AnchoredRadialSeries.prototype.gw = function (a, b, c) {
        var d = _super.prototype.gw.call(this, a, b, c);
        var e = c;
        if (this.dd == null || this.dd.count == 0 || this.wy == null || this.yi == null || this.wy.lf == 0 || this.w0 == null || isInfinity(this.w0.lx) || isInfinity(this.w0.lw) || e.cv.b < 1) {
            d = false;
        }
        return d;
    };
    AnchoredRadialSeries.prototype.getOffsetValue = function () {
        return this.yn(this.wy, this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl));
    };
    AnchoredRadialSeries.prototype.getCategoryWidth = function () {
        return this.wy.getCategorySize(this.cl.by, this.cl.bx, this.getEffectiveViewport1(this.cl));
    };
    AnchoredRadialSeries.prototype.get_yl = function () {
        return false;
    };
    Object.defineProperty(AnchoredRadialSeries.prototype, "yl", {
        get: function () {
            return this.get_yl();
        },
        enumerable: false,
        configurable: true
    });
    AnchoredRadialSeries.prototype.get_d6 = function () {
        return true;
    };
    AnchoredRadialSeries.prototype.get_fq = function () {
        return this.w0 != null && this.w0.ch;
    };
    AnchoredRadialSeries.prototype.yn = function (a, b, c, d) {
        var e = 0;
        var f = this.preferredCategoryMode(a);
        if (f == 0 && a.categoryMode != 0) {
            f = 1;
        }
        switch (f) {
            case 0:
                e = 0;
                break;
            case 1:
                e = 0.5 * a.getCategorySize(b, c, d);
                break;
            case 2:
                e = a.getGroupCenter(this.xt(), b, c, d);
                break;
        }
        if (a.ch) {
            e = -e;
        }
        return e;
    };
    AnchoredRadialSeries.prototype.x1 = function (a, b) {
        var _this = this;
        var c = b.by;
        var d = b.bx;
        var e = this.getEffectiveViewport1(b);
        var f = this.wy;
        var g = this.w0;
        var h = g.lx;
        var i = g.lw;
        a.f.clear();
        a.n.clear();
        a.q.clear();
        var j = this.vr();
        var k = 0;
        var l = b;
        var m = new CollisionAvoider();
        var n = 0;
        var o = b.cv.d;
        n = this.yn(f, c, d, e);
        l.c0.i = this.w0.no;
        l.c0.h = this.w0.nn;
        l.c0.j = function (p, q) { return _this.yo(p, q, c, d); };
        l.c0.k = function (p, q) { return _this.yp(p, q, c, d); };
        var p = ((function () {
            var $ret = new Clipper(0, d, false);
            $ret.i = a.q;
            return $ret;
        })());
        var q = ((function () {
            var $ret = new TrendResolutionParams();
            $ret.e = b.cv.b;
            $ret.f = b.cv.c;
            $ret.g = o;
            $ret.a = n;
            $ret.d = _this.hu;
            $ret.h = d;
            $ret.i = c;
            return $ret;
        })());
        l.c0.l(a.q, this.yg, this.yi, this.yr, function (r) { return _this.wy.getScaledAngle(r); }, function (r) { return _this.w0.nu(r); }, q, p);
        var r = true;
        if (this.ym(b)) {
            o--;
        }
        for (var s = b.cv.c; s <= o; ++s) {
            var t = s;
            if (t * b.cv.b >= this.wy.lf) {
                t -= intDivide((this.wy.lf), b.cv.b);
            }
            var u = b.cv.getBucket(t);
            if (!isNaN_(u[0])) {
                u[0] = f.getScaledAngle(u[0]) + n;
                if (u[1] < h || u[1] > i) {
                    continue;
                }
                u[1] = g.nu(u[1]);
                if (b.cv.b > 1) {
                    if (u[2] < h || u[2] > i) {
                        continue;
                    }
                    u[2] = g.nu(u[2]);
                }
                else {
                    u[2] = u[1];
                }
                if ((isNaN_(u[1]) || isNaN_(u[2])) && r && this.yl && this.yk()) {
                    o++;
                }
                else {
                    r = false;
                }
                a.f.add(u);
                if (j) {
                    var v = Math.min(t * b.cv.b, this.dd.count - 1);
                    var w = this.w1.d(u[0], u[1], c, d);
                    var x = this.w1.e(u[0], u[1], c, d);
                    var y = new Rect(0, w - 5, x - 5, 11, 11);
                    if (!isNaN_(w) && !isNaN_(x) && !isInfinity(w) && !isInfinity(x) && m.tryAdd(y)) {
                        a.n.add({ $type: Point_$type, x: w, y: x });
                        var z = b.cw.item(k);
                        z.al = t;
                        z.ak = v;
                        z.content.item = this.dd.item(v);
                        ++k;
                    }
                }
            }
            else {
                if (r && this.yl && this.yk()) {
                    o++;
                }
            }
        }
        b.cw.count = k;
        return;
    };
    AnchoredRadialSeries.prototype.yo = function (a, b, c, d) {
        return this.w1.d(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.yp = function (a, b, c, d) {
        return this.w1.e(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.ym = function (a) {
        var b = a;
        return !this.yl && b.cv.c == 0 && b.cv.d == this.wy.lf;
    };
    AnchoredRadialSeries.prototype.yb = function (a, b, c) {
        var d = null;
        var e = c.by;
        var f = c.bx;
        if (b > -1 && !e.isEmpty && !f.isEmpty) {
            var g = a._inner[0][0] < f.left - 2000 ? f.left - 10 : NaN;
            var h = f.bottom + 10;
            var i = a._inner[b][0] > f.right + 2000 ? f.right + 10 : NaN;
            var j = f.top - 10;
            d = new Clipper(1, g, h, i, j, false);
        }
        return d;
    };
    AnchoredRadialSeries.prototype.y7 = function (a, b, c, d, e) {
        if (a.count > 0 && d.count > 0) {
            if (!e || this.yj()) {
                a.add(this.zo);
                a.add(a._inner[0]);
                d.add(this.zo);
                d.add(d._inner[0]);
            }
        }
    };
    AnchoredRadialSeries.prototype.yk = function () {
        return !this.yj();
    };
    AnchoredRadialSeries.prototype.yj = function () {
        var a = this.cl.by;
        return !a.containsPoint({ $type: Point_$type, x: 0.5, y: 0.5 });
    };
    AnchoredRadialSeries.prototype.n7 = function (a, b) {
        _super.prototype.n7.call(this, a, b);
        var c = b;
        if (a) {
            c.cw.clear();
        }
        c.c0.g$d();
    };
    AnchoredRadialSeries.prototype.x4 = function (a, b) {
        this.pt();
        var c = b.by;
        var d = b.bx;
        var e = this.getEffectiveViewport1(b);
        var f = this.u1(b);
        var g = b;
        g.c0.g$g(a.q);
        CategoryMarkerManager.e(this, a.n, g.cw, this.vt);
        this.y3(b, a);
        g.cp();
        this.y2(d, c, e, f, g);
    };
    AnchoredRadialSeries.prototype.ya = function (a, b, c) {
        if (b < a || a < 0 || a > this.yi.count || b < 0 || b > this.yi.count || c == null) {
            return null;
        }
        var d = new Array((b - a) + 1);
        var e = c.cn;
        var f = null;
        if (e) {
            f = c.i$b;
        }
        for (var g = a; g <= b; g++) {
            var h = g;
            if (e) {
                h = f._inner[h];
            }
            d[g - a] = this.dd.item(g);
        }
        return d;
    };
    AnchoredRadialSeries.prototype.y5 = function (a, b, c, d, e, f) {
        var g = this.bo != 1;
        var h = this.cf != 1;
        var i = this.ce != 1;
        this.w7.a3(this.w7.d, d.cn, a, b, c, d, e, f, true);
        this.w7.aa(this.hs);
        var j = this.w7.ax;
        var k = null;
        var l = null;
        var m = null;
        var n = this.dd;
        var o = null;
        var p = null;
        var q = null;
        if (g && this.c1 != null) {
            k = this.c1.dj.getHighlightingInfo(this, n, j.z, j.y, true);
            if (this.c1.dj.isCrossContextHighlight(this)) {
                o = this.c1.dj.getHighlightingInfo(this, n, j.z, j.y, true);
            }
            j.c = k;
        }
        if (h && this.c1 != null) {
            l = this.c1.dk.getHighlightingInfo(this, n, j.z, j.y, true);
            if (l == null && this.be != null) {
                l = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, j.z, j.y, true);
            }
            if (this.c1.dk.isCrossContextHighlight(this)) {
                p = this.c1.dk.getHighlightingInfo(this, n, j.z, j.y, true);
            }
            j.d = l;
        }
        if (i && this.c1 != null) {
            m = this.c1.di.getHighlightingInfo(this, n, j.z, j.y, true);
            if (this.c1.di.isCrossContextHighlight(this)) {
                q = this.c1.di.getHighlightingInfo(this, n, j.z, j.y, true);
            }
            j.b = m;
        }
        j.h = f;
        this.x2(j);
        this.w7.y(this, k, l, m, f, g, h, i, j.v, this.c1.dj.totalHighWaterMark, j.x, this.c1.dk.totalHighWaterMark, j.t, this.c1.di.totalHighWaterMark);
    };
    AnchoredRadialSeries.prototype.y6 = function (a, b, c, d, e, f) {
        var g = this.bo != 1;
        var h = this.cf != 1;
        var i = this.cf != 1;
        this.w7.a3(this.w7.b, d.cn, a, b, c, d, e, f, false);
        this.w7.ab(this.hs);
        var j = this.w7.ay;
        var k = null;
        var l = null;
        var m = null;
        var n = this.dd;
        if (g && this.c1 != null) {
            k = this.c1.dj.getHighlightingInfo(this, n, j.z, j.y, false);
            j.c = k;
        }
        if (h && this.c1 != null) {
            l = this.c1.dk.getHighlightingInfo(this, n, j.z, j.y, false);
            if (l == null && this.be != null) {
                l = this.c1.dk.getHighlightingInfo(this.be, this.be.dd, j.z, j.y, false);
            }
            j.d = l;
        }
        j.h = f;
        this.x3(j);
        this.w7.z(this, k, l, m, f, g, h, i, b < 0);
    };
    AnchoredRadialSeries.prototype.y3 = function (a, b) {
        a.b6 = true;
        this.w7.a1(this, this.xn(), runOn(this, this.wv), this.xr(a), this.xs(a));
        var c = this.w7.d;
        var d = c != null;
        var e = this.wy;
        if (e == null) {
            return;
        }
        var f = this.getEffectiveViewport1(a);
        var g = new ScalerParams(0, a.by, a.bx, e.ch, f);
        var h = this.dd == null ? 0 : this.dd.count;
        var i = a;
        var j = b.f;
        var k = i.cv.c;
        var l = i.cv.d;
        var m = i.cv.b;
        var n = k * m;
        for (var o = 0; o < a.cw.count; o++) {
            var p = a.cw.item(o);
            var q = p.content;
            if (d) {
                var r = p.al;
                this.y5(j, r, h, e, g, a.q);
            }
            this.w7.ac(p, q);
        }
    };
    AnchoredRadialSeries.prototype.y2 = function (a, b, c, d, e) {
        e.c1(a, b, c, d);
    };
    AnchoredRadialSeries.prototype.ra = function () {
        _super.prototype.ra.call(this);
        if (this.index < 0) {
            return;
        }
        this.yc.c2();
    };
    AnchoredRadialSeries.prototype.j9 = function (a, b) {
        if (a == this.yc.c0.g$j) {
            return null;
        }
        return _super.prototype.j9.call(this, a, b);
    };
    AnchoredRadialSeries.prototype.fx = function (a) {
        var b = this.cl.by;
        b = b.copy();
        var c = this.cl.bx;
        var d = !b.isEmpty && !c.isEmpty && this.dd != null ? this.dd.indexOf(a) : -1;
        if (this.wy == null || this.yi == null || this.w0 == null) {
            return false;
        }
        if (d < 0 || d > this.yi.count - 1) {
            return false;
        }
        var e = this.wy.getScaledAngle(d);
        var f = this.w0.nu(this.yi.item(d));
        if (isNaN_(f)) {
            f = (this.w0.nn + this.w0.no) / 2;
        }
        var g = 0.5 + (Math.cos(e) * f);
        var h = 0.5 + (Math.sin(e) * f);
        if (!isNaN_(g)) {
            if (g < b.left + 0.1 * b.width) {
                g = g + 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
            if (g > b.right - 0.1 * b.width) {
                g = g - 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
        }
        if (!isNaN_(h)) {
            if (h < b.top + 0.1 * b.height) {
                h = h + 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
            if (h > b.bottom - 0.1 * b.height) {
                h = h - 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
        }
        if (this.ct != null) {
            this.ct.au(this.c1, b, true);
        }
        return d >= 0;
    };
    AnchoredRadialSeries.prototype.qo = function (a, b) {
        _super.prototype.qo.call(this, a, b);
        if (!this.gj) {
            this.cl.a4(b);
            return;
        }
        this.cl.a4(b);
        var c = typeCast(AnchoredRadialSeriesView.$, this.ck);
        c.cv.e(this.hu);
        if (this.dt(this.ck)) {
            return;
        }
        if (!this.gc) {
            this.yf = new RadialFrame(3);
            this.x1(this.yf, c);
        }
        this.gc = false;
        this.x4(this.yf, c);
        this.gj = false;
    };
    AnchoredRadialSeries.prototype.ql = function (a, b, c, d, e) {
        _super.prototype.ql.call(this, a, b, c, d, e);
        var f = this.a2.a$i.item(d);
        var g = f;
        g.cv.e(this.hu);
        f.a3(c);
        if (this.dt(g)) {
            return;
        }
        if (this.ye == null) {
            this.ye = new RadialFrame(3);
        }
        this.ye.v();
        this.x1(this.ye, g);
        this.x4(this.ye, g);
    };
    AnchoredRadialSeries.prototype.ow = function (a) {
        _super.prototype.ow.call(this, a);
        this.a4.exportTrendlineData(this, a, this.yc.c0.g$j);
    };
    AnchoredRadialSeries.$t = markType(AnchoredRadialSeries, 'AnchoredRadialSeries', RadialBase.$);
    AnchoredRadialSeries.y8 = DependencyProperty.i("ActualTrendLineBrush", Brush.$, AnchoredRadialSeries.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    AnchoredRadialSeries.$$p = markDep(DependencyProperty, PropertyMetadata, AnchoredRadialSeries, 'raisePropertyChanged', ['HighlightedValueMemberPath:yt:y9', [2, null], 'ValueMemberAsLegendLabel:yw:zh', [2, null], 'ValueMemberAsLegendUnit:yy:zi', [2, null], 'ValueMemberPath:y0:zj', [2, null], 'TrendLineType:yg:zf', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness:yq:ze', [1, 1.5], 'TrendLinePeriod:yr:zd', [1, 7], 'TrendLineZIndex:ys:zg', [1, 1], 'TrendLineBrush:zl:za', [Brush.$, null], 'TrendLineDashArray:zm:zb', [DoubleCollection.$], 'TrendLineDashCap:zn:zc', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
    return AnchoredRadialSeries;
}(RadialBase));
export { AnchoredRadialSeries };
/**
 * @hidden
 */
var AnchoredRadialSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredRadialSeriesView, _super);
    function AnchoredRadialSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.cz = null;
        _this.c0 = null;
        _this.cv = new AnchoredRadialBucketCalculator(_this);
        _this.cz = a;
        _this.c0 = new RadialTrendLineManager();
        return _this;
    }
    AnchoredRadialSeriesView.prototype.c1 = function (a, b, c, d) {
    };
    AnchoredRadialSeriesView.prototype.c2 = function () {
        this.cz.zk = null;
        if (this.cz.zl != null) {
            this.cz.zk = this.cz.zl;
        }
        else {
            this.cz.zk = this.cz.tw;
        }
    };
    AnchoredRadialSeriesView.prototype.a7 = function (a, b) {
        if (a.d) {
            if (!b) {
            }
            if (this.cz.yg != 0 && !b) {
                var c = this.c0.g$j;
                c.ad = this.cz.yq;
                c._stroke = this.cz.zk;
                c.ai = this.cz.zm;
                c.aj = this.cz.zn;
                a.v(c);
            }
        }
        _super.prototype.a7.call(this, a, b);
    };
    AnchoredRadialSeriesView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'>";
        if (this.cz.wy.f0 != null) {
            a += "<span>${item." + this.cz.wy.f0 + "}</span><br/>";
        }
        a += "<span";
        var b = this.e.a2.a$t(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.cz.title + ": </span><span class='ui-priority-primary'>" + "${item." + this.cz.y0 + "}</span></div>";
        return a;
    };
    AnchoredRadialSeriesView.$t = markType(AnchoredRadialSeriesView, 'AnchoredRadialSeriesView', RadialBaseView.$);
    return AnchoredRadialSeriesView;
}(RadialBaseView));
export { AnchoredRadialSeriesView };
