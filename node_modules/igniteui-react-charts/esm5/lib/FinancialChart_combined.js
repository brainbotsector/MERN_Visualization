/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __read, __spreadArray, __values } from "tslib";
import { Brush } from "igniteui-react-core";
import { XYChart } from "./XYChart";
import { IndicatorPane } from "./IndicatorPane";
import { Base, BaseError, EventArgs, runOn, delegateRemove, delegateCombine, fromEnum, typeCast, EnumUtil, Number_$type, String_$type, enumGetBox, markType, TypeRegistrar, fromEn } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { DataSeriesType_$type } from "igniteui-react-core";
import { IDataSeriesAdapterRule_$type } from "igniteui-react-core";
import { SimpleFinancialPriceSeriesRule } from "igniteui-react-core";
import { SubCollectionsRule } from "igniteui-react-core";
import { XamDataChart } from "./XamDataChart";
import { FinancialChartVolumeType_$type } from "./FinancialChartVolumeType";
import { FinancialChartXAxisMode_$type } from "./FinancialChartXAxisMode";
import { FinancialChartYAxisMode_$type } from "./FinancialChartYAxisMode";
import { FinancialChartType_$type } from "./FinancialChartType";
import { NumericYAxis } from "./NumericYAxis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { FinancialChartZoomSliderType_$type } from "./FinancialChartZoomSliderType";
import { BrushCollection } from "igniteui-react-core";
import { FinancialChartRangeSelectorOptionCollection } from "./FinancialChartRangeSelectorOptionCollection";
import { ObservableCollection$1 } from "igniteui-react-core";
import { TemplatedHtmlControl } from "./TemplatedHtmlControl";
import { FinancialChartContext } from "./FinancialChartContext";
import { FinancialChartToolbarContext } from "./FinancialChartToolbarContext";
import { FinancialChartViewModel } from "./FinancialChartViewModel";
import { FinancialChartToolbarViewModel } from "./FinancialChartToolbarViewModel";
import { AxisDefaults } from "./AxisDefaults";
import { Defaults } from "./Defaults";
import { BrushUtil } from "igniteui-react-core";
import { Series } from "./Series";
import { Rect } from "igniteui-react-core";
import { Axis } from "./Axis";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { MarkerSeries } from "./MarkerSeries";
import { IZoomableCategoryAxis_$type } from "./IZoomableCategoryAxis";
import { SyncSettings } from "./SyncSettings";
import { SyncManager } from "./SyncManager";
import { FinancialOverlayType_$type } from "./FinancialOverlayType";
import { ArrayExtension } from "igniteui-react-core";
import { FinancialIndicatorType_$type } from "./FinancialIndicatorType";
import { IndicatorDisplayType_$type } from "./IndicatorDisplayType";
import { ITimeRangeSelectorAxis_$type } from "./ITimeRangeSelectorAxis";
import { FinancialChartVisualData } from "./FinancialChartVisualData";
import { FinancialChartCustomIndicatorArgs } from "./FinancialChartCustomIndicatorArgs";
import { ScalerParams } from "./ScalerParams";
import { stringReplace, stringJoin, stringIsNullOrEmpty } from "igniteui-react-core";
import { timeSpanFromDays } from "igniteui-react-core";
import { dateMaxValue, dateMinValue } from "igniteui-react-core";
import { isNaN_, isInfinity } from "igniteui-react-core";
import { FinancialChartTypePicker } from "./FinancialChartTypePicker";
import { FinancialChartIndicatorMenu } from "./FinancialChartIndicatorMenu";
import { TrendLineType_$type } from "igniteui-react-core";
import { FinancialChartIndicatorMenuContext } from "./FinancialChartIndicatorMenuContext";
import { FinancialChartTypePickerContext } from "./FinancialChartTypePickerContext";
import { FinancialChartRangeSelectorContext } from "./FinancialChartRangeSelectorContext";
import { FinancialChartToolbarVisualData } from "./FinancialChartToolbarVisualData";
import { FinancialChartRangeSelectorViewModel } from "./FinancialChartRangeSelectorViewModel";
import { FinancialChartRangeSelectorView } from "./FinancialChartRangeSelectorView";
/**
 * @hidden
 */
var FinancialChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChart, _super);
    function FinancialChart() {
        var _this = _super.call(this) || this;
        _this.age = null;
        _this.ajc = null;
        _this.aja = null;
        _this.ai7 = null;
        _this.ai9 = null;
        _this.ajb = null;
        _this.ai8 = null;
        _this.afk = null;
        _this.aju = null;
        _this.ajv = null;
        _this.ajr = null;
        _this.ajw = null;
        _this.ajx = null;
        _this.ajs = null;
        _this.ajt = null;
        _this.ag2 = null;
        _this.aic = 40;
        _this.af8 = null;
        _this.af6 = null;
        _this.aga = null;
        _this.agf = null;
        _this.aj5 = null;
        _this.agy = null;
        _this.aho = false;
        _this.ahn = false;
        _this.ahv = false;
        _this.aha = false;
        _this.aji = 10;
        _this.aij = NaN;
        _this.ail = NaN;
        _this.aik = NaN;
        _this.aim = 0;
        _this.afq = 0;
        _this.aft = 0;
        _this.aie = 3;
        _this.aih = NaN;
        _this.aif = NaN;
        _this.aig = NaN;
        _this.aii = NaN;
        _this.afv = 0;
        _this.ag5 = true;
        _this.afm = 0;
        _this.ag6 = false;
        _this.af0 = null;
        _this.af2 = null;
        _this.ahx = null;
        _this.ag8 = true;
        _this.ag7 = false;
        _this.ag9 = false;
        _this.agz = null;
        _this.afx = 1;
        _this.aeo = null;
        _this.aep = null;
        _this.aeq = null;
        _this.aer = null;
        _this.aet = null;
        _this.aes = null;
        _this.aen = null;
        _this.aem = null;
        _this.aid = 1;
        _this.aib = 1;
        _this.aia = 2;
        _this.ah9 = 1;
        _this.agc = null;
        _this.aje = -2147483648;
        _this.ah8 = 2;
        _this.ajh = 3;
        _this.ajf = 10;
        _this.ajd = 30;
        _this.ajg = 9;
        _this.afh = null;
        _this.afi = null;
        _this.afd = null;
        _this.applyCustomIndicators = null;
        _this.anz = null;
        _this.ain = 1;
        _this.ag4 = false;
        _this.af4 = null;
        _this.ah5 = dateMinValue();
        _this.ah4 = dateMaxValue();
        _this.ah2 = null;
        _this.s0();
        _this.ah2 = new ObservableCollection$1(Base.$, 0);
        if (_this.xAxisBreaks != null) {
            var a = _this.xAxisBreaks;
            a.collectionChanged = delegateCombine(a.collectionChanged, function (a, b) { return _this.ano(); });
        }
        _this.am9();
        return _this;
    }
    FinancialChart.prototype.t9 = function (a, b, c) {
        _super.prototype.t9.call(this, a, b, c);
        switch (a) {
            case "ToolbarTemplate":
            case "RangeSelectorTemplate":
                this.afl = new FinancialChartToolbar(this, this.aj2);
                break;
            case "Toolbar":
                var d = b;
                if (d != null) {
                    d.chartTypeChanged = delegateRemove(d.chartTypeChanged, runOn(this, this.amw));
                    d.trendLineTypeChanged = delegateRemove(d.trendLineTypeChanged, runOn(this, this.amz));
                    d.volumeTypeChanged = delegateRemove(d.volumeTypeChanged, runOn(this, this.am0));
                    d.l(null);
                }
                if (this.afl != null) {
                    this.afl.ac = this.afs;
                    this.afl.ai = this.d5;
                    this.afl.y = this.afn;
                    this.afl.al = this.ahl;
                    if (this.ai9 != null) {
                        this.afl.l(this.ai9);
                    }
                    var e = this.afl;
                    e.chartTypeChanged = delegateCombine(e.chartTypeChanged, runOn(this, this.amw));
                    ;
                    var f = this.afl;
                    f.trendLineTypeChanged = delegateCombine(f.trendLineTypeChanged, runOn(this, this.amz));
                    var g = this.afl;
                    g.volumeTypeChanged = delegateCombine(g.volumeTypeChanged, runOn(this, this.am0));
                }
                break;
            case "ChartType":
                if (this.afl != null) {
                    this.afl.y = this.afn;
                }
                break;
            case "VolumeType":
                if (this.afl != null) {
                    this.afl.ac = this.afs;
                }
                break;
            case "TrendLineType":
                if (this.afl != null) {
                    this.afl.ai = this.d5;
                }
                break;
            case "IsToolbarVisible":
                if (this.afl == null) {
                    break;
                }
                this.afl.al = this.ahl;
                this.setGridRows();
                break;
        }
    };
    FinancialChart.prototype.am0 = function (a, b) {
        this.afs = this.afl.ac;
    };
    FinancialChart.prototype.amz = function (a, b) {
        this.d5 = this.afl.ai;
    };
    FinancialChart.prototype.amw = function (a, b) {
        this.afn = this.afl.y;
    };
    FinancialChart.prototype.am9 = function () {
        this.age = new IndicatorPane();
        this.af5 = TypeRegistrar.create("FinancialLegend");
    };
    FinancialChart.prototype.provideGrid = function (a) {
        this.ajc = a;
        this.anu();
        this.setGridRows();
        if (this.afl != null) {
            this.afl.bg(a);
        }
    };
    FinancialChart.prototype.onDocumentClick = function (a) {
        if (this.afl != null) {
            this.afl.bl(a);
        }
    };
    FinancialChart.prototype.getContext = function () {
        var a = this.afl.v();
        var b = new FinancialChartContext();
        b.vm = new FinancialChartViewModel();
        b.vm.toolbar = a;
        b.container = this.kz;
        b.toolbarContainer = this.ai9;
        b.legendContainer = this.ai8;
        b.indicatorsContainer = this.ai7;
        b.volumeContainer = this.aja;
        b.zoomContainer = this.ajb;
        return b;
    };
    FinancialChart.prototype.provideContainer = function (a) {
        var b = a;
        if (b != null) {
            var c = "financialChartMainGrid";
            var d = b.createElement("div");
            d.setStyleProperty("width", "100%");
            d.setStyleProperty("height", "100%");
            if (this.afl == null) {
                this.afl = new FinancialChartToolbar(this, this.aj2);
            }
            this.afl.w.isIndicatorMenuVisible = this.ahc && this.ahd;
            this.ai9 = b.getSubRenderer(d);
            this.afl.l(this.ai9);
            var e = b.createElement("div");
            e.setStyleProperty("width", "100%");
            e.setStyleProperty("height", "100%");
            var f = b.createElement("div");
            f.setStyleProperty("width", "100%");
            f.setStyleProperty("height", "100%");
            this.ai8 = b.getSubRenderer(f);
            var g = b.createElement("div");
            g.setStyleProperty("width", "100%");
            g.setStyleProperty("height", "100%");
            this.ai7 = b.getSubRenderer(g);
            var h = b.createElement("div");
            h.setStyleProperty("width", "100%");
            h.setStyleProperty("height", "100%");
            this.aja = b.getSubRenderer(h);
            var i = b.createElement("div");
            i.setStyleProperty("width", "100%");
            i.setStyleProperty("height", "100%");
            this.ajb = b.getSubRenderer(i);
            a = b.getSubRenderer(e);
        }
        else {
            this.ai9 = null;
            if (this.afl != null) {
                this.afl.l(null);
            }
            if (this.ag3 != null) {
                this.ag3.provideContainer(null);
                this.ag3 = null;
            }
            if (this.af5 != null) {
                this.af5.provideContainer(null);
            }
        }
        _super.prototype.provideContainer.call(this, a);
        if (b != null) {
            if (this.volumeChart != null) {
                this.volumeChart.provideContainer(this.aja);
            }
            if (this.age != null) {
                this.age.h(this.ai7);
            }
            if (this.zoomSliderChart != null) {
                this.zoomSliderChart.provideContainer(this.ajb);
                if (a != null) {
                    this.amg();
                }
                else {
                    this.ag3 = null;
                }
            }
            if (this.af5 != null) {
                this.af5.provideContainer(this.ai8);
            }
            this.setGridRows();
        }
    };
    FinancialChart.prototype.ank = function (a, b, c) {
        if (a != null) {
            a.provideContainer(null);
        }
        if (b != null) {
            b.provideContainer(c);
        }
        this.setGridRows();
    };
    FinancialChart.prototype.any = function (a, b) {
        this.ank(a, b, this.ajb);
        if (b == null) {
            return;
        }
        this.amg();
    };
    FinancialChart.prototype.amg = function () {
        var _this = this;
        if (this.ajb == null) {
            return;
        }
        if (this.ag3 != null) {
            this.ag3.provideContainer(null);
        }
        this.ag3 = TypeRegistrar.create("ZoomSlider");
        this.ag3.provideContainer(this.ajb);
        var a = this.ag3;
        a.windowRectChanged = delegateCombine(a.windowRectChanged, function (a, b) {
            if (_this.dataChart != null) {
                _this.dataChart.vx = new Rect(0, _this.ag3.windowRect.left, _this.dataChart.vh.top, _this.ag3.windowRect.width, _this.dataChart.vh.height);
            }
        });
        this.amh();
    };
    FinancialChart.prototype.anw = function (a, b) {
        this.ank(a, b, this.aja);
    };
    FinancialChart.prototype.setGridRows = function () {
        if (this.ajc == null) {
            return;
        }
        var a = new Array(6);
        a[0] = (this.ahl ? this.ait : 0) + "px";
        a[1] = this.ahh ? "min-content" : "0px";
        a[2] = "auto";
        a[3] = this.indicatorCharts == null || this.indicatorCharts.count == 0 ? "0px" : this.indicatorCharts.count * 150 + "px";
        a[4] = this.volumeChart == null ? "0px" : "100px";
        a[5] = this.zoomSliderChart == null ? "0px" : "100px";
        if (this.ag3 != null) {
            if (a[5] == "0px") {
                this.ag3.hide();
            }
            else {
                this.ag3.show();
            }
        }
        this.ajc.setStyleProperty("-ms-grid-rows", stringReplace(stringJoin.apply(void 0, __spreadArray([" "], __read(a), false)), "auto", "1fr"));
        this.ajc.setStyleProperty("grid-template-rows", stringJoin.apply(void 0, __spreadArray([" "], __read(a), false)));
        if (this.kz == null) {
            return;
        }
        if (this.dataChart != null) {
            this.dataChart.notifyContainerResized();
        }
        if (this.age != null) {
            this.age.f();
        }
        if (this.volumeChart != null) {
            this.volumeChart.notifyContainerResized();
        }
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.notifyContainerResized();
        }
        if (this.ag3 != null) {
            this.ag3.notifySizeChanged();
        }
    };
    FinancialChart.prototype.ti = function () {
        var e_1, _a;
        _super.prototype.ti.call(this);
        this.x0 = 1;
        this.adf = 0;
        this.zx = 0;
        this.ad9 = null;
        this.ad2 = AxisDefaults.g;
        this.zh = AxisDefaults.e;
        this.zg = AxisDefaults.f;
        this.ad3 = AxisDefaults.j;
        this.adz = null;
        this.an0 = AxisDefaults.h;
        this.ai6 = AxisDefaults.b;
        this.gk = true;
        this.gc = true;
        this.gd = false;
        this.bd = 0;
        this.i2 = Defaults.j;
        this.v3 = Defaults.ae;
        this.vy = Defaults.af;
        this.vz = Defaults.ag;
        this.jm = NaN;
        this.je = 40;
        this.gt = true;
        this.g0 = false;
        if (this.dataChart != null) {
            var a = this.dataChart.c8.j.e();
            this.aew = a.d;
            this.aex = a.e;
            this.aev = a.d;
            this.an0 = this.dataChart.z2;
        }
        var b = new BrushCollection();
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#8BDC5C";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#8961A9";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#6DB1FF";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#82E9D9";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#EA3C63";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#735656";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#F8CE4F";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#A8A8B7";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#E051A9";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#FF903B";
            return $ret;
        })()));
        var c = new BrushCollection();
        try {
            for (var _b = __values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                c.add(BrushUtil.n(d, 0.3));
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        this.aey = c;
        this.aez = b;
    };
    FinancialChart.prototype.ang = function () {
        if (this.age != null) {
            this.age.b = null;
            this.age.b = this.indicatorCharts;
        }
        this.setGridRows();
    };
    FinancialChart.prototype.anh = function () {
        this.setGridRows();
    };
    FinancialChart.prototype.anq = function () {
        this.ang();
    };
    FinancialChart.prototype.amf = function () {
        if (this.ag3 == null || this.zoomSliderChart == null || this.dataChart == null || this.dataChart.series.count == 0) {
            return;
        }
        var a = this.kz.rootWrapper.width();
        var b = this.dataChart.vw.left + this.dataChart.vw.width;
        var c = this.dataChart.vw.left;
        var d = a - b;
        this.ag3.startInset = c - this.ag3.trackStartInset;
        this.ag3.endInset = d - this.ag3.trackEndInset;
        if (this.ag3.endInset < 0) {
            var e = this.ag3.endInset;
            this.ag3.endInset = 0;
            this.dataChart.hy += (e * -1);
        }
        if (this.ag3.startInset < 0) {
            var f = this.ag3.startInset;
            this.ag3.startInset = 0;
            this.dataChart.ht += (f * -1);
        }
        this.zoomSliderChart.ht = c;
        this.zoomSliderChart.hy = d;
        this.zoomSliderChart.hg = this.ag3.barExtent;
    };
    FinancialChart.prototype.am6 = function () {
        this.amf();
    };
    FinancialChart.prototype.tf = function (a) {
        _super.prototype.tf.call(this, a);
        if (a != null) {
            a.hf = 0;
        }
    };
    FinancialChart.prototype.an1 = function (a) {
        return a.va();
    };
    FinancialChart.prototype.an4 = function () {
        return this.ai8 == null ? null : this.an3(this.ai8.rootWrapper);
    };
    FinancialChart.prototype.an2 = function (a) {
        if (a == null || a.d == null) {
            return null;
        }
        return this.an3(a.d.rootWrapper);
    };
    FinancialChart.prototype.an3 = function (a) {
        if (a == null) {
            return null;
        }
        var b = a.getOffset();
        return new Rect(0, b.left, b.top, a.width(), a.height());
    };
    FinancialChart.prototype.aio = function () {
        if (this.ajc == null) {
            return NaN;
        }
        var a = this.ajc.getOffset();
        return this.ajc.width() + (a == null ? 0 : a.left);
    };
    FinancialChart.prototype.tr = function (source_, a, b) {
        _super.prototype.tr.call(this, source_, a, b);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.ny(source_, a, b);
        }
    };
    FinancialChart.prototype.ts = function (source_, a, b) {
        _super.prototype.ts.call(this, source_, a, b);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.nz(source_, a, b);
        }
    };
    FinancialChart.prototype.tq = function (source_) {
        _super.prototype.tq.call(this, source_);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.nr(source_);
        }
    };
    FinancialChart.prototype.tu = function (source_, a, b, c) {
        _super.prototype.tu.call(this, source_, a, b, c);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.n0(source_, a, b, c);
        }
    };
    FinancialChart.prototype.tl = function (a, b) {
        _super.prototype.tl.call(this, a, b);
        if (this.ahi(a)) {
            a.toolTip = null;
        }
    };
    Object.defineProperty(FinancialChart.prototype, "afl", {
        get: function () {
            return this.afk;
        },
        set: function (a) {
            var b = this.afl;
            if (a != b) {
                this.afk = a;
                this.t5("Toolbar", b, this.afl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aj1", {
        get: function () {
            return this.aju;
        },
        set: function (a) {
            var b = this.aj1;
            if (a != b) {
                this.aju = a;
                this.t5("RangeSelectorTemplate", b, this.aj1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aj2", {
        get: function () {
            return this.ajv;
        },
        set: function (a) {
            var b = this.aj2;
            if (a != b) {
                this.ajv = a;
                this.t5("ToolbarTemplate", b, this.aj2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ajy", {
        get: function () {
            return this.ajr;
        },
        set: function (a) {
            var b = this.ajy;
            if (a != b) {
                this.ajr = a;
                this.t5("ChartTypePickerTemplate", b, this.ajy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aj3", {
        get: function () {
            return this.ajw;
        },
        set: function (a) {
            var b = this.aj3;
            if (a != b) {
                this.ajw = a;
                this.t5("TrendLineTypePickerTemplate", b, this.aj3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aj4", {
        get: function () {
            return this.ajx;
        },
        set: function (a) {
            var b = this.aj4;
            if (a != b) {
                this.ajx = a;
                this.t5("VolumeTypePickerTemplate", b, this.aj4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ajz", {
        get: function () {
            return this.ajs;
        },
        set: function (a) {
            var b = this.ajz;
            if (a != b) {
                this.ajs = a;
                this.t5("IndicatorMenuTemplate", b, this.ajz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aj0", {
        get: function () {
            return this.ajt;
        },
        set: function (a) {
            var b = this.aj0;
            if (a != b) {
                this.ajt = a;
                this.t5("OverlayPickerTemplate", b, this.aj0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ag3", {
        get: function () {
            return this.ag2;
        },
        set: function (a) {
            var b = this.ag3;
            if (a != b) {
                this.ag2 = a;
                this.t5("ZoomSlider", b, this.ag3);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_je = function () {
        return _super.prototype.get_je.call(this);
    };
    FinancialChart.prototype.set_je = function (a) {
        _super.prototype.set_je.call(this, a);
    };
    FinancialChart.prototype.get_gt = function () {
        return _super.prototype.get_gt.call(this);
    };
    FinancialChart.prototype.set_gt = function (a) {
        _super.prototype.set_gt.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "ait", {
        get: function () {
            return this.aic;
        },
        set: function (a) {
            var b = this.ait;
            if (a != b) {
                this.aic = a;
                this.t5("ToolbarHeight", b, this.ait);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.xp = function () {
        return this.xAxis;
    };
    FinancialChart.prototype.xq = function () {
        return this.yAxis;
    };
    FinancialChart.prototype.onAttachedToUI = function () {
        _super.prototype.onAttachedToUI.call(this);
        if (this.ag3 != null) {
            this.ag3.onAttachedToUI();
        }
    };
    FinancialChart.prototype.onDetachedFromUI = function () {
        _super.prototype.onDetachedFromUI.call(this);
        if (this.ag3 != null) {
            this.ag3.onDetachedFromUI();
        }
    };
    FinancialChart.prototype.bg = function (a) {
        return 20;
    };
    FinancialChart.prototype.get_hi = function () {
        return ((function () {
            var $ret = new List$1(DataSeriesType_$type, 0);
            $ret.add(20);
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChart.prototype, "hi", {
        get: function () {
            return this.get_hi();
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_hh = function () {
        return ((function () {
            var $ret = new List$1(IDataSeriesAdapterRule_$type, 0);
            $ret.add(new SimpleFinancialPriceSeriesRule());
            $ret.add(new SubCollectionsRule());
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChart.prototype, "hh", {
        get: function () {
            return this.get_hh();
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.ae7 = function (a) {
        return this.ae8(a);
    };
    FinancialChart.prototype.agl = function (a) {
        return this.agm(a);
    };
    FinancialChart.prototype.ae6 = function (a) {
        var b = this.ae7(0);
        b.name = a;
        return b;
    };
    FinancialChart.prototype.sw = function () {
        this.xAxis = this.ae6("xAxis");
        this.yAxis = this.agl(0);
        this.yAxis.name = "yAxis";
        this.volumeAxis = this.agl(0);
        this.volumeAxis.name = "volumeAxis";
        this.volumeXAxis = this.ae6("volumeXAxis");
        this.ahz = new List$1(NumericYAxis.$, 0);
        this.ah1 = new List$1(CategoryAxisBase.$, 0);
        this.indicatorAxis = this.agl(0);
        this.indicatorAxis.name = "indicatorAxis";
        this.indicatorXAxis = this.ae6("indicatorXAxis_0");
        this.ahz.add(this.indicatorAxis);
        this.ah1.add(this.indicatorXAxis);
        if (this.xAxis.az == null) {
            this.xAxis.az = new AxisLabelSettings();
        }
        if (this.yAxis.az == null) {
            this.yAxis.az = new AxisLabelSettings();
        }
        if (this.volumeAxis.az == null) {
            this.volumeAxis.az = new AxisLabelSettings();
        }
        if (this.volumeXAxis.az == null) {
            this.volumeAxis.az = new AxisLabelSettings();
        }
        if (this.indicatorAxis.az == null) {
            this.indicatorAxis.az = new AxisLabelSettings();
        }
        if (this.indicatorXAxis.az == null) {
            this.indicatorXAxis.az = new AxisLabelSettings();
        }
        this.zoomSliderAxis = this.agl(0);
        this.zoomSliderAxis.name = "zoomSliderAxis";
        this.zoomSliderXAxis = this.ae6("zoomSliderXAxis");
        if (this.zoomSliderAxis.az == null) {
            this.zoomSliderAxis.az = new AxisLabelSettings();
        }
        if (this.zoomSliderXAxis.az == null) {
            this.zoomSliderXAxis.az = new AxisLabelSettings();
        }
    };
    FinancialChart.prototype.ss = function (a, b) {
        var c = typeCast(MarkerSeries.$, a);
        if (c != null) {
            c.vp = this.cw(a, b);
        }
    };
    FinancialChart.prototype.cv = function (a) {
        if (a != null) {
            return 1;
        }
        return _super.prototype.cv.call(this, a);
    };
    FinancialChart.prototype.ur = function (a) {
        if (a.suggestedSecondaryAxis == 2) {
            this.yAxis.li = true;
            this.yAxis.l9 = 10;
        }
    };
    FinancialChart.prototype.uu = function () {
        this.yAxis.li = this.ahs;
        this.yAxis.l9 = this.ajq;
    };
    FinancialChart.prototype.afp = function (a) {
        var b;
        if (this.afn == 0) {
            if (a == null || a.index > 0 || stringIsNullOrEmpty(a.getMemberPathFor(12))) {
                b = 4;
            }
            else {
                b = 2;
            }
        }
        else {
            b = this.afn;
        }
        b = this.afo(b);
        return b;
    };
    FinancialChart.prototype.afo = function (a) {
        if ((a == 1 || a == 2)) {
            if (TypeRegistrar.isRegistered("FinancialPriceSeries")) {
                return a;
            }
            a = 4;
        }
        if (a == 4) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 3;
        }
        if (a == 3) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.afy = function (a) {
        if ((a == 2 || a == 3)) {
            if (TypeRegistrar.isRegistered("FinancialPriceSeries")) {
                return a;
            }
            a = 5;
        }
        if (a == 5) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 6;
        }
        if (a == 6) {
            if (TypeRegistrar.isRegistered("AreaSeries")) {
                return a;
            }
            a = 4;
        }
        if (a == 4) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.afr = function (a) {
        if (a == 2) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 3;
        }
        if (a == 3) {
            if (TypeRegistrar.isRegistered("AreaSeries")) {
                return a;
            }
            a = 1;
        }
        if (a == 1) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.akd = function (a) {
        var b = a.getMemberPathFor(14);
        if (stringIsNullOrEmpty(b)) {
            b = a.getMemberPathFor(11);
        }
        return b;
    };
    FinancialChart.prototype.ae8 = function (axisType_) {
        if ((this.externalObject)) {
            return (this.externalObject.createXAxis(axisType_).i);
        }
        else {
            var a = void 0;
            switch (axisType_) {
                case 0:
                    if (TypeRegistrar.isRegistered("OrdinalTimeXAxis")) {
                        a = TypeRegistrar.create("OrdinalTimeXAxis");
                    }
                    else if (TypeRegistrar.isRegistered("TimeXAxis")) {
                        a = TypeRegistrar.create("TimeXAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
                case 1:
                    if (TypeRegistrar.isRegistered("TimeXAxis")) {
                        a = TypeRegistrar.create("TimeXAxis");
                    }
                    else if (TypeRegistrar.isRegistered("OrdinalTimeXAxis")) {
                        a = TypeRegistrar.create("OrdinalTimeXAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
            }
            return null;
        }
    };
    FinancialChart.prototype.agm = function (axisType_) {
        if ((this.externalObject)) {
            return (this.externalObject.createYAxis(axisType_).i);
        }
        else {
            var a = void 0;
            switch (axisType_) {
                case 0:
                    if (TypeRegistrar.isRegistered("NumericYAxis")) {
                        a = TypeRegistrar.create("NumericYAxis");
                    }
                    else if (TypeRegistrar.isRegistered("PercentChangeYAxis")) {
                        a = TypeRegistrar.create("PercentChangeYAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
                case 1:
                    if (TypeRegistrar.isRegistered("PercentChangeYAxis")) {
                        a = TypeRegistrar.create("PercentChangeYAxis");
                    }
                    else if (TypeRegistrar.isRegistered("NumericYAxis")) {
                        a = TypeRegistrar.create("NumericYAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
            }
            return null;
        }
    };
    FinancialChart.prototype.ags = function () {
        return this.c8(1);
    };
    FinancialChart.prototype.agt = function () {
        return this.c8(0);
    };
    FinancialChart.prototype.agr = function () {
        return this.c8(2);
    };
    FinancialChart.prototype.agu = function () {
        return this.c8(20);
    };
    Object.defineProperty(FinancialChart.prototype, "ahb", {
        get: function () {
            return (TypeRegistrar.isRegistered("HorizontalAnchoredCategorySeriesProxy"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "af9", {
        get: function () {
            if (TypeRegistrar.isRegistered("HorizontalAnchoredCategorySeriesProxy")) {
                return TypeRegistrar.create("HorizontalAnchoredCategorySeriesProxy");
            }
            else {
                throw new BaseError(1, "horizontal series module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahe", {
        get: function () {
            return (TypeRegistrar.isRegistered("FinancialPriceSeriesProxy"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "af7", {
        get: function () {
            if (TypeRegistrar.isRegistered("FinancialPriceSeriesProxy")) {
                return TypeRegistrar.create("FinancialPriceSeriesProxy");
            }
            else {
                throw new BaseError(1, "financial series module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahc", {
        get: function () {
            return (TypeRegistrar.isRegistered("IndicatorProxy"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "agb", {
        get: function () {
            if (TypeRegistrar.isRegistered("IndicatorProxy")) {
                return TypeRegistrar.create("IndicatorProxy");
            }
            else {
                throw new BaseError(1, "financial series module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahd", {
        get: function () {
            return (TypeRegistrar.isRegistered("OverlayProxy"));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "agg", {
        get: function () {
            if (TypeRegistrar.isRegistered("OverlayProxy")) {
                return TypeRegistrar.create("OverlayProxy");
            }
            else {
                throw new BaseError(1, "overlay series module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.c6 = function (a, b) {
        var c = this.akd(a);
        switch (this.afp(a)) {
            case 3:
                var d = this.ags();
                this.af9.setValueMemberPath(d, c);
                this.af9.setXAxis(d, this.xAxis);
                this.af9.setYAxis(d, this.yAxis);
                this.af9.setCategoryMode(d, 1);
                return d;
            case 4:
                var e = this.agt();
                this.af9.setValueMemberPath(e, c);
                this.af9.setXAxis(e, this.xAxis);
                this.af9.setYAxis(e, this.yAxis);
                this.af9.setCategoryMode(e, 1);
                return e;
            default:
            case 1:
            case 2:
                var f = this.agu();
                this.af7.setOpenMemberPath(f, a.getMemberPathFor(11));
                this.af7.setHighMemberPath(f, a.getMemberPathFor(12));
                this.af7.setLowMemberPath(f, a.getMemberPathFor(13));
                this.af7.setCloseMemberPath(f, a.getMemberPathFor(14));
                this.af7.setVolumeMemberPath(f, a.getMemberPathFor(15));
                this.af7.setXAxis(f, this.xAxis);
                this.af7.setYAxis(f, this.yAxis);
                this.af7.setDisplayType(f, this.afn == 1 ? 1 : 0);
                this.af7.setCategoryMode(f, 1);
                return f;
        }
    };
    FinancialChart.prototype.ut = function () {
        _super.prototype.ut.call(this);
        this.am4(this.xAxis);
        this.ans(false);
        if (this.afs != 0 && this.volumeChart != null) {
            this.anb();
        }
        this.am4(this.volumeXAxis);
        this.am4(this.indicatorXAxis);
        this.anp();
        this.anr();
        if (this.afz != 0) {
            this.anc();
            this.am4(this.zoomSliderXAxis);
        }
    };
    FinancialChart.prototype.ac1 = function (a, b) {
        var e_2, _a;
        _super.prototype.ac1.call(this, a, b);
        a(this.volumeXAxis);
        if (this.ah1 != null) {
            try {
                for (var _b = __values(fromEnum(this.ah1)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    a(c);
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        }
        var d = true;
        switch (b) {
            case "XAxisMajorStroke":
            case "XAxisMajorStrokeThickness":
                d = false;
                break;
        }
        if (d) {
            a(this.zoomSliderXAxis);
        }
    };
    FinancialChart.prototype.ac6 = function (a, b) {
        var e_3, _a;
        _super.prototype.ac6.call(this, a, b);
        if (b) {
            a(this.volumeAxis);
            if (this.ahz != null) {
                try {
                    for (var _b = __values(fromEnum(this.ahz)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var c = _c.value;
                        a(c);
                    }
                }
                catch (e_3_1) {
                    e_3 = { error: e_3_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_3)
                            throw e_3.error;
                    }
                }
            }
            a(this.zoomSliderAxis);
        }
    };
    FinancialChart.prototype.am8 = function (a) {
        var b = typeCast(IZoomableCategoryAxis_$type, this.xAxis);
        if (b != null) {
            a(b);
        }
    };
    FinancialChart.prototype.ac4 = function (a) {
        _super.prototype.ac4.call(this, a);
        this.acv(this.volumeXAxis, a);
        this.acv(this.indicatorXAxis, a);
        this.acv(this.zoomSliderXAxis, a);
    };
    FinancialChart.prototype.ac9 = function (a) {
        _super.prototype.ac9.call(this, a);
        this.acv(this.volumeAxis, a);
        this.acv(this.indicatorAxis, a);
        this.acv(this.zoomSliderAxis, a);
    };
    FinancialChart.prototype.ac7 = function (a) {
        _super.prototype.ac7.call(this, a);
        this.acu(this.volumeAxis, a);
        this.acu(this.indicatorAxis, a);
        this.acu(this.zoomSliderAxis, a);
    };
    FinancialChart.prototype.ac2 = function (a) {
        _super.prototype.ac2.call(this, a);
        this.acu(this.volumeXAxis, a);
        this.acu(this.indicatorXAxis, a);
        this.acu(this.zoomSliderXAxis, a);
    };
    FinancialChart.prototype.te = function (a) {
        var _this = this;
        _super.prototype.te.call(this, a);
        if (a == null) {
            return;
        }
        if (a == this.zoomSliderChart) {
            a.ws = a.wv = false;
            a.legend = null;
            if (this.dataChart != null) {
                a.ag = this.dataChart.ag;
                a.aj = this.dataChart.aj;
            }
        }
        else {
            SyncManager.d(a, ((function () {
                var $ret = new SyncSettings();
                $ret.syncChannel = _this.ak8();
                $ret.synchronizeHorizontally = true;
                $ret.synchronizeVertically = false;
                return $ret;
            })()));
            SyncManager.c(a);
        }
        a.cw = 2;
    };
    FinancialChart.prototype.ak8 = function () {
        if (this.aj5 == null) {
            FinancialChart.ajp++;
            this.aj5 = FinancialChart.ajp.toString();
        }
        return this.aj5;
    };
    FinancialChart.prototype.amq = function (a, b) {
        this.amc();
        this.am6();
    };
    FinancialChart.prototype.amc = function () {
        var e_4, _a;
        if (this.yAxis.b8()) {
            return;
        }
        var a = this.yAxis.aw.bd;
        if (this.afs != 0) {
            a = Math.max(a, this.volumeAxis.aw.bd);
        }
        try {
            for (var _b = __values(fromEnum(this.ahz)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                a = Math.max(a, b.aw.bd);
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
        this.amd(a);
    };
    FinancialChart.prototype.amd = function (a) {
        var e_5, _a;
        if (this.yAxis.b8()) {
            return;
        }
        this.yAxis.es = this.volumeAxis.es = a;
        try {
            for (var _b = __values(fromEnum(this.ahz)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                b.es = a;
            }
        }
        catch (e_5_1) {
            e_5 = { error: e_5_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_5)
                    throw e_5.error;
            }
        }
        this.zoomSliderAxis.es = this.yAxis.es;
    };
    FinancialChart.prototype.ami = function (a) {
        if (this.indicatorCharts == null) {
            return;
        }
        for (var b = 0; b < this.indicatorCharts.count; b++) {
            var c = this.indicatorCharts._inner[b];
            for (var d = 0; d < c.series.count; d++) {
                var e = c.series._inner[d];
                if (!(this.ahg(e))) {
                    continue;
                }
                a(c.series._inner[d], b);
            }
        }
    };
    FinancialChart.prototype.aml = function (a) {
        if (this.volumeChart == null) {
            return;
        }
        for (var b = 0; b < this.volumeChart.series.count; b++) {
            var c = this.volumeChart.series._inner[b];
            if (c.ed) {
                continue;
            }
            a(this.volumeChart.series._inner[b], b);
        }
    };
    FinancialChart.prototype.amj = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (!this.ahi(c)) {
                continue;
            }
            a(c, b);
        }
    };
    FinancialChart.prototype.amk = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        for (var c = 0; c < this.dataChart.series.count; c++) {
            var d = this.dataChart.series._inner[c];
            if (this.ahi(d)) {
                continue;
            }
            var e = this.ajj(d, c);
            a(d, e);
        }
        if (b) {
            this.amm(a);
        }
    };
    FinancialChart.prototype.amm = function (a) {
        if (this.zoomSliderChart == null) {
            return;
        }
        for (var b = 0; b < this.zoomSliderChart.series.count; b++) {
            var c = this.zoomSliderChart.series._inner[b];
            if (c.ed) {
                continue;
            }
            a(this.zoomSliderChart.series._inner[b], b);
        }
    };
    FinancialChart.prototype.ajj = function (a, b) {
        if (a.cz != this.dataChart) {
            return b;
        }
        var c = this.bh == null || this.bh.dataSeries == null ? 0 : this.bh.dataSeries.count;
        var d = this.af3 == null ? 0 : this.af3.count;
        return b - (c * d);
    };
    FinancialChart.prototype.s4 = function (a) {
        _super.prototype.s4.call(this, a);
        this.aml(a);
        this.ami(a);
        this.amm(a);
    };
    Object.defineProperty(FinancialChart.prototype, "volumeChart", {
        get: function () {
            return this.agy;
        },
        set: function (a) {
            var b = this.volumeChart;
            if (a != b) {
                this.agy = a;
                this.t5("VolumeChart", b, this.volumeChart);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.anb = function () {
        if (this.dataChart == null) {
            return;
        }
        this.volumeChart.series.clear();
        var a = new List$1(Series.$, 0);
        var b = -1;
        for (var c = 0; c < this.dataChart.series.count; c++) {
            var d = this.dataChart.series._inner[c];
            if (this.ahi(d) || d.ed) {
                continue;
            }
            b++;
            var e = void 0;
            var f = this.afs;
            f = this.afr(f);
            switch (f) {
                case 2:
                    e = this.agt();
                    break;
                case 3:
                    e = this.agr();
                    break;
                default:
                case 1:
                    e = this.ags();
                    break;
            }
            this.af9.setCategoryMode(e, 1);
            e.name = "volumeSeries_" + b;
            e.itemsSource = d.itemsSource;
            this.af9.setXAxis(e, this.volumeXAxis);
            this.af9.setYAxis(e, this.volumeAxis);
            this.af9.setValueMemberPath(e, this.bh != null && this.bh.dataSeries != null && this.bh.dataSeries.count > b ? this.bh.dataSeries._inner[b].getMemberPathFor(15) : null);
            e.title = d.title + " Volume";
            e.t2 = ArrayExtension.getModulus$1(Brush.$, this.ae0, b);
            e.ud = ArrayExtension.getModulus$1(Brush.$, this.ae1, b);
            e.i5 = this.aiu;
            a.add(e);
        }
        var g = this.he("volume", false);
        if (g != null) {
            a.o(g);
        }
        for (var h = 0; h < a.count; h++) {
            var i = a._inner[h];
            this.volumeChart.series.add(i);
            this.tj(i, h);
        }
    };
    FinancialChart.prototype.ahf = function (a) {
        if (!this.ahb) {
            return false;
        }
        return this.af9.matchesType(a);
    };
    FinancialChart.prototype.ahj = function (a) {
        if (!this.ahe) {
            return false;
        }
        return this.af7.matchesType(a);
    };
    FinancialChart.prototype.ahg = function (a) {
        if (!this.ahc) {
            return false;
        }
        return this.agb.matchesType(a);
    };
    FinancialChart.prototype.ahi = function (a) {
        if (!this.ahd) {
            return false;
        }
        return this.agg.matchesType(a);
    };
    FinancialChart.prototype.ana = function () {
        if (this.dataChart == null) {
            return;
        }
        var a = 0;
        var b = this.af1 == null ? 0 : this.af1.count;
        var c = this.customIndicatorNames == null ? 0 : this.customIndicatorNames.count;
        var d = b + c;
        for (var e = 0; e < d; e++) {
            var f = new List$1(Series.$, 0);
            var g = this.indicatorCharts._inner[e];
            var h = e >= b;
            var i = h ? this.customIndicatorNames._inner[e - b] : EnumUtil.getName(FinancialIndicatorType_$type, this.af1._inner[e]);
            var j = -1;
            for (var k = 0; k < this.dataChart.series.count; k++) {
                var l = this.dataChart.series._inner[k];
                if (this.ahi(l) || l.ed) {
                    continue;
                }
                j++;
                var m = void 0;
                if (h) {
                    var n = this.agv("Custom");
                    this.agb.handleCustomIndicatorEvent(n, runOn(this, this.amo));
                    m = n;
                }
                else {
                    m = this.agx(this.af1._inner[e]);
                }
                if (m == null) {
                    continue;
                }
                m.name = "indicator_" + a++;
                this.agb.setXAxis(m, this.ah1._inner[e]);
                this.agb.setYAxis(m, this.ahz._inner[e]);
                m.itemsSource = l.itemsSource;
                this.agb.setOpenMemberPath(m, this.bh.dataSeries._inner[j].getMemberPathFor(11));
                this.agb.setHighMemberPath(m, this.bh.dataSeries._inner[j].getMemberPathFor(12));
                this.agb.setLowMemberPath(m, this.bh.dataSeries._inner[j].getMemberPathFor(13));
                this.agb.setCloseMemberPath(m, this.bh.dataSeries._inner[j].getMemberPathFor(14));
                this.agb.setVolumeMemberPath(m, this.bh.dataSeries._inner[j].getMemberPathFor(15));
                m.title = l.title + " " + i;
                m.t2 = ArrayExtension.getModulus$1(Brush.$, this.aeu, e);
                m.i5 = this.aiq;
                if (this.ahg(m)) {
                    this.agb.setNegativeBrush(m, ArrayExtension.getModulus$1(Brush.$, this.aev, e));
                    this.agb.setDisplayType(m, ArrayExtension.getModulus$1(IndicatorDisplayType_$type, this.agd, e));
                }
                if (this.ajl != -2147483648 && this.ahg(m)) {
                    this.agb.setPeriodOverride(m, this.ajl);
                }
                if (this.ahg(m)) {
                    this.agb.setSmoothingPeriod(m, this.ajo);
                }
                if (this.ahg(m)) {
                    this.agb.setSignalPeriod(m, this.ajn);
                }
                if (this.ahg(m)) {
                    this.agb.setShortPeriod(m, this.ajm);
                    this.agb.setLongPeriod(m, this.ajk);
                }
                this.tj(m, e);
                f.add(m);
            }
            var o = this.he(i, false);
            for (var p = 0; p < f.count; p++) {
                var q = f._inner[p];
                g.series.add(q);
            }
            if (o != null) {
                for (var r = 0; r < o.count; r++) {
                    var s = o._inner[r];
                    g.series.add(s);
                    this.tj(s, r);
                }
            }
        }
    };
    FinancialChart.prototype.agv = function (indicatorName_) {
        return (this.externalObject.createIndicator(indicatorName_ + 'Indicator').i);
    };
    FinancialChart.prototype.agx = function (a) {
        return this.agv(EnumUtil.getName(FinancialIndicatorType_$type, a));
    };
    FinancialChart.prototype.ans = function (a) {
        if (this.afl == null) {
            return;
        }
        var b = this.xAxis;
        if (b.actualMinimumValue > b.actualMaximumValue) {
            return;
        }
        this.afl.as = b.actualMinimumValue;
        this.afl.ar = b.actualMaximumValue;
        if (a) {
            this.afl.au = b.visibleMinimum;
            this.afl.at = b.visibleMaximum;
        }
        this.afl.bn();
    };
    FinancialChart.prototype.k0 = function () {
        var e_6, _a, e_7, _b;
        var _this = this;
        var a = ((function () {
            var $ret = new FinancialChartVisualData();
            $ret.mainChart = _super.prototype.k0.call(_this);
            $ret.volumeChart = _this.volumeChart == null ? null : _this.volumeChart.x4();
            $ret.toolbar = _this.afl == null ? null : _this.afl.aj();
            $ret.zoomChart = _this.zoomSliderChart == null ? null : _this.zoomSliderChart.x4();
            return $ret;
        })());
        if (this.indicatorCharts != null) {
            a.indicatorCharts = new List$1(Base.$, 0);
            try {
                for (var _c = __values(fromEnum(this.indicatorCharts)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var b = _d.value;
                    a.indicatorCharts.add1(b.x4());
                }
            }
            catch (e_6_1) {
                e_6 = { error: e_6_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_6)
                        throw e_6.error;
                }
            }
        }
        if (this.dataChart != null) {
            a.mainChartLeft = this.an1(this.dataChart).x;
            a.mainChartTop = this.an1(this.dataChart).y;
        }
        if (this.volumeChart != null) {
            a.volumeChartLeft = this.an1(this.volumeChart).x;
            a.volumeChartTop = this.an1(this.volumeChart).y;
        }
        if (this.zoomSliderChart != null) {
            a.zoomChartLeft = this.an1(this.zoomSliderChart).x;
            a.zoomChartTop = this.an1(this.zoomSliderChart).y;
        }
        if (this.afl != null) {
            var c = this.an2(this.afl);
            a.toolbarLeft = c.left;
            a.toolbarTop = c.top;
            a.toolbarWidth = c.width;
            a.toolbarHeight = c.height;
        }
        if (this.indicatorCharts != null) {
            a.indicatorChartLefts = new List$1(Number_$type, 0);
            a.indicatorChartTops = new List$1(Number_$type, 0);
            try {
                for (var _e = __values(fromEnum(this.indicatorCharts)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var d = _f.value;
                    a.indicatorChartLefts.add(this.an1(d).x);
                    a.indicatorChartTops.add(this.an1(d).y);
                }
            }
            catch (e_7_1) {
                e_7 = { error: e_7_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_7)
                        throw e_7.error;
                }
            }
        }
        var e = this.an4();
        a.legendLeft = e.left;
        a.legendTop = e.top;
        a.legendWidth = e.width;
        a.legendHeight = e.height;
        a.legend = this.af5 == null ? null : this.af5.exportVisualData();
        return a;
    };
    FinancialChart.prototype.aka = function () {
        var a = this.k0();
        a.scaleByViewport();
        return a.serialize();
    };
    FinancialChart.prototype.agw = function (overlayName_) {
        return (this.externalObject.createOverlay(overlayName_ + 'Overlay').i);
    };
    FinancialChart.prototype.anr = function () {
        var e_8, _a, e_9, _b;
        if (this.dataChart == null) {
            return;
        }
        var a = new List$1(Series.$, 0);
        try {
            for (var _c = __values(fromEnum(this.dataChart.series)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var b = _d.value;
                if (this.ahi(b)) {
                    a.add(b);
                }
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        try {
            for (var _e = __values(fromEnum(a)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                this.dataChart.series.remove(c);
            }
        }
        catch (e_9_1) {
            e_9 = { error: e_9_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_9)
                    throw e_9.error;
            }
        }
        if (this.af3 == null) {
            return;
        }
        var d = new List$1(Series.$, 0);
        var e = -1;
        for (var f = 0; f < this.dataChart.series.count; f++) {
            var g = this.dataChart.series._inner[f];
            if (this.ahi(g) || g.ed) {
                continue;
            }
            e++;
            for (var h = 0; h < this.af3.count; h++) {
                var i = this.af3._inner[h];
                var j = void 0;
                switch (i) {
                    case 1:
                        j = this.agw(EnumUtil.getName(FinancialOverlayType_$type, i));
                        break;
                    default:
                    case 0:
                        j = this.agw(EnumUtil.getName(FinancialOverlayType_$type, i));
                        break;
                }
                j.name = g.name + "_" + EnumUtil.getName(FinancialOverlayType_$type, i);
                this.agg.setXAxis(j, this.xAxis);
                this.agg.setYAxis(j, this.yAxis);
                j.itemsSource = g.itemsSource;
                var k = e * this.af3.count + h;
                j.t2 = ArrayExtension.getModulus$1(Brush.$, this.aey, k);
                j.ud = ArrayExtension.getModulus$1(Brush.$, this.aez, k);
                j.i5 = this.ais;
                j.title = g.title + " " + EnumUtil.getName(FinancialOverlayType_$type, i);
                var l = g;
                if (l == null) {
                    continue;
                }
                var m = this.bh.dataSeries._inner[e];
                this.agg.setOpenMemberPath(j, m.getMemberPathFor(11));
                this.agg.setHighMemberPath(j, m.getMemberPathFor(12));
                this.agg.setLowMemberPath(j, m.getMemberPathFor(13));
                this.agg.setCloseMemberPath(j, m.getMemberPathFor(14));
                this.agg.setVolumeMemberPath(j, m.getMemberPathFor(15));
                d.add(j);
            }
        }
        var n = new Array(this.dataChart.series.count);
        this.dataChart.series.copyTo(n, 0);
        this.dataChart.skipDataCleanup = true;
        this.dataChart.series.clear();
        this.dataChart.skipDataCleanup = false;
        for (var o = 0; o < n.length; o++) {
            n[o].index = -1;
        }
        d.o(n);
        for (var p = 0; p < d.count; p++) {
            var q = d._inner[p];
            this.dataChart.series.add(q);
            this.tj(q, p);
        }
    };
    FinancialChart.prototype.anp = function () {
        var e_10, _a;
        if (this.aho) {
            return;
        }
        this.aho = true;
        if (this.indicatorCharts != null) {
            var a = this.indicatorCharts;
            this.indicatorCharts = null;
            try {
                for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    this.am5(b);
                }
            }
            catch (e_10_1) {
                e_10 = { error: e_10_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_10)
                        throw e_10.error;
                }
            }
        }
        if ((this.af1 == null || this.af1.count == 0) && (this.customIndicatorNames == null || this.customIndicatorNames.count == 0)) {
            this.indicatorCharts = null;
            if (this.ahz != null) {
                this.ahz.clear();
            }
            if (this.ah1 != null) {
                this.ah1.clear();
            }
            this.ang();
            this.anq();
            this.aho = false;
            return;
        }
        if (this.indicatorCharts == null) {
            this.indicatorCharts = new List$1(XamDataChart.$, 0);
        }
        this.indicatorCharts.clear();
        this.ahz.clear();
        this.ah1.clear();
        var c = this.af1 == null ? 0 : this.af1.count;
        var d = this.customIndicatorNames == null ? 0 : this.customIndicatorNames.count;
        var e = c + d;
        for (var f = 0; f < e; f++) {
            var g = new XamDataChart();
            this.indicatorCharts.add(g);
            this.am3(g);
            var h = f >= c;
            if (h) {
                g.lo = this.customIndicatorNames._inner[f - c];
            }
            else {
                g.lo = this.akc(this.af1._inner[f]);
            }
            if (this.indicatorAxis != null) {
                var i = void 0;
                var j = void 0;
                if (f == 0) {
                    i = this.indicatorAxis;
                    j = this.indicatorXAxis;
                }
                else {
                    i = new NumericYAxis();
                    if (!this.indicatorXAxis.ce) {
                        j = this.ae7(0);
                    }
                    else {
                        j = this.ae7(1);
                    }
                }
                j.name = "indicatorXAxis_" + f;
                i.name = "indicatorAxis_" + f;
                g.axes.add(i);
                g.axes.add(j);
                this.ahz.add(i);
                this.ah1.add(j);
                if (this.f8) {
                    this.acy(i);
                }
                if (this.f8) {
                    this.acw(j);
                }
            }
        }
        this.ana();
        this.ang();
        if (this.afl != null) {
            this.afl.ae = this.af1;
        }
        this.ame();
        this.anq();
        this.aho = false;
    };
    FinancialChart.prototype.tb = function () {
        var e_11, _a, e_12, _b;
        _super.prototype.tb.call(this);
        this.acw(this.xAxis);
        this.acw(this.volumeXAxis);
        if (this.ah1 != null) {
            try {
                for (var _c = __values(fromEnum(this.ah1)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var a = _d.value;
                    this.acw(a);
                }
            }
            catch (e_11_1) {
                e_11 = { error: e_11_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_11)
                        throw e_11.error;
                }
            }
        }
        this.acy(this.yAxis);
        this.acy(this.volumeAxis);
        if (this.ahz != null) {
            try {
                for (var _e = __values(fromEnum(this.ahz)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var b = _f.value;
                    this.acy(b);
                }
            }
            catch (e_12_1) {
                e_12 = { error: e_12_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_12)
                        throw e_12.error;
                }
            }
        }
        this.acw(this.zoomSliderXAxis);
        this.acy(this.zoomSliderAxis);
    };
    FinancialChart.prototype.get_gz = function () {
        return !this.ahm;
    };
    Object.defineProperty(FinancialChart.prototype, "ahu", {
        get: function () {
            return (this.externalObject._dynamicContent);
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.anx = function (a, b) {
        this.anj(a, b);
        this.ame();
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.axes.add(this.zoomSliderAxis);
            this.zoomSliderChart.axes.add(this.zoomSliderXAxis);
        }
        this.anc();
        this.zoomSliderXAxis.itemsSource = this.xAxis.itemsSource;
        this.anh();
        this.any(a, b);
    };
    FinancialChart.prototype.anc = function () {
        if (this.dataChart == null || this.zoomSliderChart == null) {
            return;
        }
        this.zoomSliderChart.series.clear();
        var a = new List$1(Series.$, 0);
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (this.ahi(c) || c.ed) {
                continue;
            }
            var d = void 0;
            var e = this.afz;
            e = this.afy(e);
            var f = this.ajj(c, b);
            if (e == 1) {
                switch (this.afp(this.bh != null && this.bh.dataSeries != null && this.bh.dataSeries.count > f ? this.bh.dataSeries._inner[f] : null)) {
                    case 1:
                        e = 2;
                        break;
                    case 2:
                        e = 3;
                        break;
                    case 3:
                        e = 4;
                        break;
                    case 4:
                        e = 5;
                        break;
                }
            }
            switch (e) {
                case 2:
                    d = this.agu();
                    this.af7.setDisplayType(d, 1);
                    break;
                case 3:
                    d = this.agu();
                    this.af7.setDisplayType(d, 0);
                    break;
                case 5:
                    d = this.agt();
                    break;
                case 6:
                    d = this.agr();
                    break;
                default:
                case 4:
                    d = this.ags();
                    break;
            }
            var g = this.bh != null && this.bh.dataSeries != null && this.bh.dataSeries.count > f ? this.bh.dataSeries._inner[f] : null;
            if (d.ej && !d.er) {
                this.af9.setCategoryMode(d, 1);
                this.af9.setXAxis(d, this.zoomSliderXAxis);
                this.af9.setYAxis(d, this.zoomSliderAxis);
                this.af9.setValueMemberPath(d, g == null ? null : this.akd(g));
            }
            else if (d.er) {
                this.af7.setCategoryMode(d, 1);
                this.af7.setXAxis(d, this.zoomSliderXAxis);
                this.af7.setYAxis(d, this.zoomSliderAxis);
                if (g != null) {
                    this.af7.setOpenMemberPath(d, g.getMemberPathFor(11));
                    this.af7.setHighMemberPath(d, g.getMemberPathFor(12));
                    this.af7.setLowMemberPath(d, g.getMemberPathFor(13));
                    this.af7.setCloseMemberPath(d, g.getMemberPathFor(14));
                    this.af7.setVolumeMemberPath(d, g.getMemberPathFor(15));
                }
            }
            d.name = "zoomSliderSeries_" + f;
            d.itemsSource = c.itemsSource;
            d.title = c.title;
            d.i5 = this.js;
            a.add(d);
        }
        for (var h = 0; h < a.count; h++) {
            var i = a._inner[h];
            this.zoomSliderChart.series.add(i);
            this.tj(i, h);
        }
    };
    FinancialChart.prototype.tz = function (a, b, c) {
        var e_13, _a;
        _super.prototype.tz.call(this, a, b, c);
        if (a == null || !b) {
            return;
        }
        var d = true;
        var e = true;
        switch (c) {
            case "Brushes":
            case "Outlines":
                d = e = false;
                break;
        }
        if (this.indicatorCharts != null && d) {
            try {
                for (var _b = __values(fromEnum(this.indicatorCharts)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var f = _c.value;
                    a(f);
                }
            }
            catch (e_13_1) {
                e_13 = { error: e_13_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_13)
                        throw e_13.error;
                }
            }
        }
        if (this.volumeChart != null && e) {
            a(this.volumeChart);
        }
        if (this.zoomSliderChart != null) {
            a(this.zoomSliderChart);
        }
    };
    FinancialChart.prototype.amo = function (a, b) {
        var c = b;
        var d = a;
        var e = -1;
        if (this.indicatorCharts != null) {
            e = this.indicatorCharts.indexOf(d.cz);
        }
        e -= this.af1 == null ? 0 : this.af1.count;
        if (this.applyCustomIndicators != null) {
            this.applyCustomIndicators(this, new FinancialChartCustomIndicatorArgs(c, d, e));
        }
    };
    FinancialChart.prototype.anl = function (a, b, c) {
        if (a != null) {
            if (b != null) {
                a.axes.remove(b);
            }
            a.axes.add(c);
        }
        if (this.f8) {
            this.acw(c);
        }
    };
    Object.defineProperty(FinancialChart.prototype, "aht", {
        get: function () {
            return TypeRegistrar.isRegistered("IgxZoomSliderComponent");
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.amp = function (a, b) {
        this.anp();
    };
    FinancialChart.prototype.ahk = function (a, b) {
        if (b <= (0)) {
            return false;
        }
        switch (a) {
            case 5: return true;
            case 4:
            case 3: return b >= timeSpanFromDays(365);
            case 2: return b >= timeSpanFromDays(180);
            case 1: return b >= timeSpanFromDays(90);
            case 0: return b >= timeSpanFromDays(30);
        }
        return false;
    };
    FinancialChart.prototype.anf = function () {
        var e_14, _a;
        var a = this.afj != null ? this.afj : new FinancialChartRangeSelectorOptionCollection(1, [5, 4, 3, 2, 1, 0]);
        var b = new FinancialChartRangeSelectorOptionCollection(0);
        var c = this.xAxis;
        var d = +(c.actualMaximumValue) - +(c.actualMinimumValue);
        try {
            for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                if (this.ahk(e, d)) {
                    b.add(e);
                }
            }
        }
        catch (e_14_1) {
            e_14 = { error: e_14_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_14)
                    throw e_14.error;
            }
        }
        this.afi = b;
        if (this.afl != null) {
            this.afl.u = this.afi;
        }
    };
    FinancialChart.prototype.amt = function (a, b) {
        this.anf();
    };
    FinancialChart.prototype.amy = function (a, b) {
        this.af3 = this.afl.ag;
    };
    FinancialChart.prototype.amx = function (a, b) {
        this.af1 = this.afl.ae;
    };
    FinancialChart.prototype.amr = function (a, b) {
        this.anp();
    };
    FinancialChart.prototype.ams = function (a, b) {
        this.anr();
    };
    FinancialChart.prototype.am2 = function (a, b) {
        var c = a;
        if (c.bg == null) {
            return;
        }
        if (this.ahm) {
            this.ane(c.bg);
        }
    };
    FinancialChart.prototype.am5 = function (a) {
        SyncManager.e(a);
        a.axes.clear();
        a.series.clear();
        a.gridAreaRectChanged = delegateRemove(a.gridAreaRectChanged, runOn(this, this.amq));
        a.provideContainer(null);
        if (this.volumeChart == null && this.indicatorCharts == null) {
            this.yAxis.es = this.volumeAxis.es = this.indicatorAxis.es = 0;
            this.xAxis.az.visibility = this.aek;
        }
    };
    FinancialChart.prototype.am3 = function (a) {
        var b = a != this.zoomSliderChart;
        if (b) {
            if (this.dataChart != null) {
                a.vx = new Rect(0, this.dataChart.vh.x, a.vx.y, this.dataChart.vh.width, a.vx.height);
            }
            var c = ((function () {
                var $ret = new SyncSettings();
                $ret.syncChannel = "one";
                $ret.synchronizeHorizontally = true;
                $ret.synchronizeVertically = false;
                return $ret;
            })());
            SyncManager.d(a, c);
            SyncManager.c(a);
        }
        a.gridAreaRectChanged = delegateCombine(a.gridAreaRectChanged, runOn(this, this.amq));
        this.td(a);
    };
    FinancialChart.prototype.ame = function () {
        if (this.indicatorCharts != null || this.volumeChart != null) {
            this.acu(this.xAxis, function (a) { return a.visibility = 1; });
        }
        var _loop_1 = function (a) {
            var b = this_1.ah1._inner[a];
            var c = a < this_1.ah1.count - 1 || this_1.volumeChart != null;
            this_1.acu(b, function (d) { return d.visibility = c ? 1 : 0; });
        };
        var this_1 = this;
        for (var a = 0; a < this.ah1.count; a++) {
            _loop_1(a);
        }
    };
    FinancialChart.prototype.anj = function (a, b) {
        if (a != null) {
            this.am5(a);
        }
        if (b != null) {
            this.am3(b);
        }
    };
    FinancialChart.prototype.anv = function (a, b) {
        this.anj(a, b);
        this.ame();
        if (this.volumeChart != null) {
            if (this.volumeAxis != null) {
                this.volumeChart.axes.add(this.volumeAxis);
                this.volumeChart.axes.add(this.volumeXAxis);
            }
            this.anb();
            this.volumeXAxis.itemsSource = this.xAxis.itemsSource;
        }
        this.anw(a, b);
    };
    FinancialChart.prototype.amu = function (a, b) {
        this.ant();
    };
    FinancialChart.prototype.ant = function () {
        if (this.afl == null || +(this.afl.au) == +(dateMaxValue()) || +(this.afl.at) == +(dateMinValue()) || this.dataChart == null) {
            return;
        }
        var a = this.xAxis;
        var b = a.getWindowRectForSelection(this.afl.au, this.afl.at);
        if (b.width == 0 || isNaN_(b.width) || isInfinity(b.width)) {
            return;
        }
        this.ahn = true;
        this.dataChart.vx = new Rect(0, b.left, this.dataChart.vx.top, b.width, this.dataChart.vx.height);
        if (this.ag3 != null) {
            this.ag3.windowRect = this.dataChart.vh;
        }
        if (this.ahm) {
            this.ane(this.dataChart);
        }
        this.ahn = false;
    };
    FinancialChart.prototype.am1 = function (a, b) {
        this.anf();
        this.ans(!this.ahn);
    };
    FinancialChart.prototype.amn = function (a, b) {
        var _this = this;
        if (!this.ahn) {
            if (this.ahm) {
                this.ane(a);
            }
            var c = false;
            var d = this.uc(function () { return _this.ans(true); }, c);
            c = d.p1;
            if (this.ag3 != null) {
                this.ag3.windowRect = this.dataChart.vh;
            }
        }
    };
    FinancialChart.prototype.ann = function (a, b, c, d) {
        var e_15, _a;
        if (a == null || b == null) {
            return;
        }
        if (c != -1) {
            this.ahn = true;
            a.vx = new Rect(0, d, a.vh.top, c, a.vh.height);
            this.ahn = false;
        }
        var e = 1.7976931348623157E+308;
        var f = -1.7976931348623157E+308;
        var g = new Rect(0, 0, 0, 1, 1);
        var h = new ScalerParams(0, g, g, this.yAxis.ch, a.vl);
        try {
            for (var _b = __values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                h.b = i.id();
                var j = i.ar(a.vh);
                var k = j == null || j.c == 1.7976931348623157E+308 || isNaN_(j.c);
                if (k) {
                    continue;
                }
                var l = b.ej(j.c, h);
                var m = b.ej(j.b, h);
                f = Math.max(f, l);
                e = Math.min(e, m);
            }
        }
        catch (e_15_1) {
            e_15 = { error: e_15_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_15)
                    throw e_15.error;
            }
        }
        var n = a.vh.width;
        if (c != -1) {
            n = c;
        }
        var o = a.vh.left;
        if (d != -1) {
            o = d;
        }
        if (e == 1.7976931348623157E+308 || f == -1.7976931348623157E+308 || isNaN_(e) || isNaN_(f)) {
            return;
        }
        this.ahn = true;
        var p = new Rect(0, o, e, n, f - e);
        a.vx = p;
        this.ahn = false;
    };
    FinancialChart.prototype.anm = function (a) {
        if (a == null) {
            return;
        }
        if (a == this.dataChart) {
            this.ann(this.dataChart, this.yAxis, -1, -1);
            if (this.volumeChart != null) {
                this.ann(this.volumeChart, this.volumeAxis, this.dataChart.vh.width, this.dataChart.vh.left);
            }
        }
        else if (a == this.volumeChart) {
            this.ann(this.volumeChart, this.volumeAxis, -1, -1);
            this.ann(this.dataChart, this.yAxis, this.volumeChart.vh.width, this.volumeChart.vh.left);
        }
    };
    FinancialChart.prototype.ane = function (a) {
        var _this = this;
        this.ub(function () { return _this.anm(a); });
    };
    FinancialChart.prototype.amv = function (a, b) {
        if (this.ahm) {
            this.ane(a);
        }
    };
    FinancialChart.prototype.anu = function () {
        if (!this.ahu) {
            return;
        }
        this.amh();
        if (this.afz == 0) {
            this.uy();
            this.zoomSliderChart = null;
            this.ajb.rootWrapper.removeChildren();
        }
        else if (this.zoomSliderChart == null) {
            this.zoomSliderChart = ((function () {
                var $ret = new XamDataChart();
                $ret.name = "ZoomSliderChart";
                return $ret;
            })());
            this.anh();
        }
        else {
            this.anc();
        }
    };
    FinancialChart.prototype.amh = function () {
        var container_ = this.ajb.rootWrapper.getNativeElement();
        var containerParent_ = container_.parentElement;
        if (this.ag3 != null && containerParent_ != null && !this.ahv) {
            this.ahv = true;
            if (TypeRegistrar.isRegistered("IgxZoomSliderComponent")) {
                var z_ = this.ag3;
                var f_ = this.externalObject;
                var sliderComponent_ = TypeRegistrar.get("IgxZoomSliderComponent");
                var sliderInstance_ = TypeRegistrar.create("IgxZoomSliderComponent");
                sliderInstance_._implementation = z_;
                sliderComponent_._staticStyling(container_, sliderInstance_, f_);
            }
        }
    };
    FinancialChart.prototype.ano = function () {
        var _this = this;
        if (this.afu != 1) {
            return;
        }
        this.ac0(function (a) {
            var e_16, _a;
            var b;
            b = a.breaks;
            b.clear();
            if (_this.xAxisBreaks == null) {
                return;
            }
            try {
                for (var _b = __values(fromEnum(_this.xAxisBreaks)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    b.add(c);
                }
            }
            catch (e_16_1) {
                e_16 = { error: e_16_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_16)
                        throw e_16.error;
                }
            }
        });
    };
    FinancialChart.prototype.uz = function (a, b, c) {
        _super.prototype.uz.call(this, a, b, c);
        if (this.bh.dataSeries.count > 0) {
            if (this.afu == 1 && stringIsNullOrEmpty(this.mf)) {
                this.b8.setXMemberPath(a, c.getMemberPathFor(17));
            }
            if (stringIsNullOrEmpty(this.mh)) {
                this.b8.setYMemberPath(a, this.akd(c));
            }
            if (stringIsNullOrEmpty(this.mb)) {
                this.b8.setLabelMemberPath(a, this.akd(c));
            }
            if (stringIsNullOrEmpty(this.l8)) {
                this.b8.setContentMemberPath(a, this.akd(c));
            }
        }
    };
    FinancialChart.prototype.akc = function (a) {
        switch (a) {
            case 0: return "Absolute Volume Oscillator";
            case 1: return "Accumulation/Distribution Indicator";
            case 2: return "Average Directional Index";
            case 3: return "Average True Range Indicator";
            case 4: return "Bollinger Bandwidth";
            case 5: return "Chaikin Oscillator";
            case 6: return "Chaikin Volatility Indicator";
            case 7: return "Commodity Channel Index";
            case 8: return "Detrended Price Oscillator";
            case 9: return "Ease of Movement Indicator";
            case 10: return "Fast Stochastic Oscillator";
            case 11: return "Force Index Indicator";
            case 12: return "Full Stochastic Oscillator";
            case 13: return "Market Facilitation Index";
            case 14: return "Mass Index Indicator";
            case 15: return "Median Price Indicator";
            case 16: return "Money Flow Index";
            case 17: return "MACD Indicator";
            case 18: return "Negative Volume Index";
            case 19: return "On Balance Volume Indicator";
            case 20: return "Percentage Price Oscillator";
            case 21: return "Percentage Volume Oscillator";
            case 22: return "Positive Volume Index";
            case 23: return "Price Volume Trend";
            case 24: return "ROC - Rate of Change Indicator";
            case 25: return "RSI - Relative Strength Index";
            case 26: return "Slow Stochastic Oscillator";
            case 27: return "Standard Deviation Indicator";
            case 28: return "Stoch RSI";
            case 29: return "TRIX Indicator";
            case 30: return "Typical Price Indicator";
            case 31: return "Ultimate Oscillator";
            case 32: return "Weighted Close Indicator";
            case 33: return "Williams %R Indicator";
            default: return "Unknown";
        }
    };
    FinancialChart.prototype.acw = function (a) {
        var e_17, _a;
        var _this = this;
        _super.prototype.acw.call(this, a);
        var b = a;
        this.am4(b);
        if (a.bg != null) {
            try {
                for (var _b = __values(fromEnum(a.bg.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    if (this.ahf(c)) {
                        this.af9.setXAxis(c, b);
                    }
                    else if (this.ahj(c)) {
                        this.af7.setXAxis(c, b);
                    }
                    else if (this.ahg(c)) {
                        this.agb.setXAxis(c, b);
                    }
                    else if (this.ahi(c)) {
                        this.agg.setXAxis(c, b);
                    }
                }
            }
            catch (e_17_1) {
                e_17 = { error: e_17_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_17)
                        throw e_17.error;
                }
            }
        }
        this.am8(function (d) {
            d.zoomMaximumCategoryRange = _this.aiv;
            d.zoomMaximumItemSpan = _this.aiw;
            d.zoomToCategoryRange = _this.aix;
            d.zoomToCategoryStart = _this.aiy;
            d.zoomToItemSpan = _this.aiz;
        });
        var d = a == this.zoomSliderXAxis;
        if (d) {
            a.jw = this.an0;
            a.er = this.ai6;
            this.acu(a, function (e) { return e.visibility = 1; });
        }
        var e = a;
        e.minimumValue = this.ah7;
        e.maximumValue = this.ah6;
        a.b1 = this.ahp;
    };
    FinancialChart.prototype.acy = function (a) {
        var e_18, _a;
        _super.prototype.acy.call(this, a);
        if (a.bg != null && a == this.yAxis) {
            try {
                for (var _b = __values(fromEnum(a.bg.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    if (this.ahf(b)) {
                        this.af9.setYAxis(b, this.yAxis);
                    }
                    else if (this.ahj(b)) {
                        this.af7.setYAxis(b, this.yAxis);
                    }
                    else if (this.ahg(b)) {
                        this.agb.setYAxis(b, this.yAxis);
                    }
                    else if (this.ahi(b)) {
                        this.agg.setYAxis(b, this.yAxis);
                    }
                }
            }
            catch (e_18_1) {
                e_18 = { error: e_18_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_18)
                        throw e_18.error;
                }
            }
        }
        a.la = this.ahq;
        a.l5 = this.ai4;
        a.l4 = this.ai3;
        if (a == this.yAxis) {
            a.l1 = this.ai2;
        }
        var c = a == this.zoomSliderAxis;
        if (c) {
            this.acu(a, function (d) { return d.visibility = 1; });
        }
        a.b1 = this.ahr;
    };
    FinancialChart.prototype.am4 = function (a) {
        a.itemsSource = this.dataChart != null && this.dataChart.series.count > 0 ? this.dataChart.series._inner[0].itemsSource : null;
        a.f0 = XYChart.aaj(a, this.bh.dataSeries);
        if (this.bh.dataSeries.count > 0) {
            var b = this.bh.dataSeries._inner[0].getMemberPathFor(17);
            a.hy(b);
        }
    };
    FinancialChart.prototype.tj = function (a, b) {
        if (a == null) {
            return;
        }
        var c = this.zoomSliderChart == a.cz;
        var d = this.dataChart != null && this.dataChart.series.contains(a);
        if (d && !a.ed && !this.ahi(a)) {
            a.k8 = "Financial Series";
        }
        _super.prototype.tj.call(this, a, b);
        if ((d || c) && a.e7) {
            a.qw(this.aew != null ? ArrayExtension.getModulus$1(Brush.$, this.aew, b) : null, this.aex != null ? ArrayExtension.getModulus$1(Brush.$, this.aex, b) : null);
        }
        var e = this.ahg(a);
        if (this.ahi(a)) {
            a.t2 = this.aey != null ? ArrayExtension.getModulus$1(Brush.$, this.aey, b) : null;
            a.ud = this.aez != null ? ArrayExtension.getModulus$1(Brush.$, this.aez, b) : null;
            a.i5 = this.ais;
        }
        else if (e) {
            a.t2 = this.aeu != null ? ArrayExtension.getModulus$1(Brush.$, this.aeu, b) : null;
            a.i5 = this.aiq;
        }
        else if (!a.ed && (d || c)) {
            a.t2 = this.ab != null ? ArrayExtension.getModulus$1(Brush.$, this.ab, b) : null;
            a.ud = this.af != null ? ArrayExtension.getModulus$1(Brush.$, this.af, b) : null;
        }
        var f = this.volumeChart != null && this.volumeChart == a.cz;
        if (f) {
            a.i5 = this.aiu;
        }
        a.legend = c || f || e || !a.isUsableInLegend ? null : this.legend != null ? this.legend : this.ahh ? this.af5 : null;
    };
    FinancialChart.prototype.tk = function (a, b) {
        _super.prototype.tk.call(this, a, b);
        if (a == null) {
            return;
        }
    };
    FinancialChart.prototype.t5 = function (a, b, c) {
        var e_19, _a, e_20, _b;
        var _this = this;
        _super.prototype.t5.call(this, a, b, c);
        switch (a) {
            case "YAxisIsLogarithmic":
                this.yAxis.li = this.ahs;
                if (this.volumeAxis != null) {
                    this.volumeAxis.li = this.ahs;
                }
                if (this.zoomSliderAxis != null) {
                    this.zoomSliderAxis.li = this.ahs;
                }
                break;
            case "YAxisLogarithmBase":
                this.yAxis.l9 = this.ajq;
                if (this.volumeAxis != null) {
                    this.volumeAxis.l9 = this.ajq;
                }
                if (this.zoomSliderAxis != null) {
                    this.zoomSliderAxis.l9 = this.ajq;
                }
                break;
            case "VolumeType":
                var d = EnumUtil.getEnumValue(FinancialChartVolumeType_$type, b);
                if (this.afs == 0) {
                    this.volumeChart = null;
                }
                else if (this.volumeChart == null) {
                    this.volumeChart = ((function () {
                        var $ret = new XamDataChart();
                        $ret.name = "VolumeChart";
                        return $ret;
                    })());
                }
                else {
                    this.anb();
                }
                break;
            case "VolumeChart":
                this.anv(typeCast(XamDataChart.$, b), typeCast(XamDataChart.$, c));
                break;
            case "DataChart":
                if (typeCast(XamDataChart.$, b) !== null) {
                    var e = b;
                    e.gridAreaRectChanged = delegateRemove(e.gridAreaRectChanged, runOn(this, this.amq));
                    e.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.amn));
                    e.seriesDataUpdated = delegateRemove(e.seriesDataUpdated, runOn(this, this.amv));
                }
                if (this.dataChart != null) {
                    var f = this.dataChart;
                    f.gridAreaRectChanged = delegateCombine(f.gridAreaRectChanged, runOn(this, this.amq));
                    var g = this.dataChart;
                    g.actualWindowRectChanged = delegateCombine(g.actualWindowRectChanged, runOn(this, this.amn));
                    var h = this.dataChart;
                    h.seriesDataUpdated = delegateCombine(h.seriesDataUpdated, runOn(this, this.amv));
                }
                this.anu();
                break;
            case "XAxisMode":
                this.xAxis = this.ae7(this.afu);
                this.xAxis.name = "xAxis";
                this.volumeXAxis = this.ae7(this.afu);
                this.volumeXAxis.name = "volumeXAxis";
                this.indicatorXAxis = this.ae7(this.afu);
                this.indicatorXAxis.name = "indicatorXAxis_0";
                this.zoomSliderXAxis = this.ae7(this.afu);
                this.zoomSliderXAxis.name = "zoomSliderXAxis";
                this.acu(this.zoomSliderXAxis, function (i) { return i.visibility = 1; });
                this.ame();
                if (this.afu == 1) {
                    this.ano();
                }
                break;
            case "YAxisMode":
                this.yAxis = this.agl(this.afw);
                this.yAxis.name = "yAxis";
                this.zoomSliderAxis = this.agl(this.afw);
                this.zoomSliderAxis.name = "zoomSliderAxis";
                this.volumeAxis = this.agl(this.afw);
                this.volumeAxis.name = "volumeAxis";
                break;
            case "Toolbar":
                var i = typeCast(FinancialChartToolbar.$, b);
                if (i != null) {
                    i.rangeChanged = delegateRemove(i.rangeChanged, runOn(this, this.amu));
                    i.indicatorTypesChanged = delegateRemove(i.indicatorTypesChanged, runOn(this, this.amx));
                    i.overlayTypesChanged = delegateRemove(i.overlayTypesChanged, runOn(this, this.amy));
                }
                if (this.afl != null) {
                    this.afl.ae = this.af1;
                    this.afl.ag = this.af3;
                    this.afl.u = this.afi;
                    this.ans(true);
                    var j = this.afl;
                    j.rangeChanged = delegateCombine(j.rangeChanged, runOn(this, this.amu));
                    var k = this.afl;
                    k.indicatorTypesChanged = delegateCombine(k.indicatorTypesChanged, runOn(this, this.amx));
                    var l = this.afl;
                    l.overlayTypesChanged = delegateCombine(l.overlayTypesChanged, runOn(this, this.amy));
                }
                break;
            case "XAxis":
                var m = typeCast(CategoryAxisBase.$, b);
                if (m != null) {
                    if (this.dataChart != null) {
                        this.dataChart.axes.remove(m);
                    }
                }
                var n = typeCast(ITimeRangeSelectorAxis_$type, b);
                if (n != null) {
                    n.visibleRangeChanged = delegateRemove(n.visibleRangeChanged, runOn(this, this.am1));
                }
                if (this.dataChart != null) {
                    this.dataChart.axes.add(this.xAxis);
                }
                if (this.f8) {
                    this.acw(this.xAxis);
                    this.s1();
                }
                this.ans(false);
                this.ant();
                this.anf();
                var o = this.xAxis;
                o.visibleRangeChanged = delegateCombine(o.visibleRangeChanged, runOn(this, this.am1));
                break;
            case "XAxisZoomMaximumCategoryRange":
                this.am8(function (p) { return p.zoomMaximumCategoryRange = _this.aiv; });
                break;
            case "XAxisZoomMaximumItemSpan":
                this.am8(function (p) { return p.zoomMaximumItemSpan = _this.aiw; });
                break;
            case "XAxisZoomToCategoryRange":
                this.am8(function (p) { return p.zoomToCategoryRange = _this.aix; });
                break;
            case "XAxisZoomToCategoryStart":
                this.am8(function (p) { return p.zoomToCategoryStart = _this.aiy; });
                break;
            case "XAxisZoomToItemSpan":
                this.am8(function (p) { return p.zoomToItemSpan = _this.aiz; });
                break;
            case "ChartType":
                this.ut();
                break;
            case "VolumeXAxis":
                this.anl(this.volumeChart, typeCast(Axis.$, b), this.volumeXAxis);
                break;
            case "ZoomSliderXAxis":
                this.anl(this.zoomSliderChart, typeCast(Axis.$, b), this.zoomSliderXAxis);
                break;
            case "IndicatorXAxis":
                this.anp();
                break;
            case "YAxis":
                var p = typeCast(NumericYAxis.$, b);
                if (p != null) {
                    if (this.dataChart != null) {
                        this.dataChart.axes.remove(p);
                    }
                }
                if (this.dataChart != null) {
                    this.dataChart.axes.add(this.yAxis);
                }
                if (this.f8) {
                    this.acy(this.yAxis);
                    this.acy(this.yAxis);
                }
                var q = this.yAxis;
                q.rangeChanged = delegateCombine(q.rangeChanged, runOn(this, this.am2));
                break;
            case "VolumeAxis":
                var r = typeCast(Axis.$, b);
                if (this.volumeChart != null && r != null) {
                    this.volumeChart.axes.remove(r);
                }
                if (this.volumeChart != null && this.volumeAxis != null) {
                    this.volumeChart.axes.add(this.volumeAxis);
                    this.anb();
                }
                if (this.f8) {
                    this.acy(this.volumeAxis);
                }
                var s = this.volumeAxis;
                s.rangeChanged = delegateCombine(s.rangeChanged, runOn(this, this.am2));
                break;
            case "IndicatorAxis":
                if (this.indicatorCharts != null) {
                    for (var t = 0; t < this.indicatorCharts.count; t++) {
                        var u = this.indicatorCharts._inner[t];
                        var v = new List$1(Axis.$, 0);
                        try {
                            for (var _c = (e_19 = void 0, __values(fromEnum(u.axes))), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var w = _d.value;
                                if (typeCast(NumericYAxis.$, w) !== null) {
                                    v.add(w);
                                }
                            }
                        }
                        catch (e_19_1) {
                            e_19 = { error: e_19_1 };
                        }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return))
                                    _a.call(_c);
                            }
                            finally {
                                if (e_19)
                                    throw e_19.error;
                            }
                        }
                        try {
                            for (var _e = (e_20 = void 0, __values(fromEnum(v))), _f = _e.next(); !_f.done; _f = _e.next()) {
                                var x = _f.value;
                                u.axes.remove(x);
                            }
                        }
                        catch (e_20_1) {
                            e_20 = { error: e_20_1 };
                        }
                        finally {
                            try {
                                if (_f && !_f.done && (_b = _e.return))
                                    _b.call(_e);
                            }
                            finally {
                                if (e_20)
                                    throw e_20.error;
                            }
                        }
                        var y = null;
                        if (t == 0) {
                            y = this.indicatorAxis;
                        }
                        else if (this.afw == 1) {
                            y = this.agl(this.afw);
                        }
                        else if (typeCast(NumericYAxis.$, this.indicatorAxis) !== null) {
                            y = new NumericYAxis();
                        }
                        if (y != null) {
                            u.axes.add(y);
                        }
                        if (this.f8) {
                            this.acy(y);
                        }
                    }
                }
                break;
            case "IsWindowSyncedToVisibleRange":
                if (this.dataChart != null) {
                    this.dataChart.wv = this.g0 && this.gz;
                }
                if (this.volumeChart != null) {
                    this.volumeChart.wv = this.g0 && this.gz;
                }
                if (this.ahm) {
                    this.anm(this.dataChart);
                }
                else {
                    this.volumeChart.x2 = 1;
                }
                break;
            case "IndicatorTypes":
                var z = typeCast(ObservableCollection$1.$.specialize(FinancialIndicatorType_$type), b);
                if (z != null) {
                    z.collectionChanged = delegateRemove(z.collectionChanged, runOn(this, this.amr));
                }
                var aa = typeCast(ObservableCollection$1.$.specialize(FinancialIndicatorType_$type), c);
                if (aa != null) {
                    aa.collectionChanged = delegateCombine(aa.collectionChanged, runOn(this, this.amr));
                }
                this.anp();
                break;
            case "OverlayTypes":
                var ab = typeCast(ObservableCollection$1.$.specialize(FinancialOverlayType_$type), b);
                if (ab != null) {
                    ab.collectionChanged = delegateRemove(ab.collectionChanged, runOn(this, this.ams));
                }
                var ac = typeCast(ObservableCollection$1.$.specialize(FinancialOverlayType_$type), c);
                if (ac != null) {
                    ac.collectionChanged = delegateCombine(ac.collectionChanged, runOn(this, this.ams));
                }
                this.anr();
                break;
            case "YAxisAbbreviateLargeNumbers":
                this.ac5(function (ad) { return ad.la = _this.ahq; });
                break;
            case "YAxisMinimumValue":
                this.ac6(function (ad) { return ad.l5 = _this.ai4; }, false);
                break;
            case "YAxisMaximumValue":
                this.ac6(function (ad) { return ad.l4 = _this.ai3; }, false);
                break;
            case "YAxisInterval":
                this.ac6(function (ad) { return ad.l1 = _this.ai2; }, false);
                break;
            case "Thickness":
            case "ZoomSliderType":
                this.anu();
                break;
            case "ZoomSliderChart":
                if (!this.aht) {
                    return;
                }
                this.anx(typeCast(XamDataChart.$, b), typeCast(XamDataChart.$, c));
                break;
            case "NegativeBrushes":
            case "NegativeOutlines":
                this.amk(function (ad, ae) {
                    if (ad.e7) {
                        ad.qw(_this.aew != null ? ArrayExtension.getModulus$1(Brush.$, _this.aew, ae) : null, _this.aex != null ? ArrayExtension.getModulus$1(Brush.$, _this.aex, ae) : null);
                    }
                }, true);
                break;
            case "OverlayBrushes":
                this.amj(function (ad, ae) { return ad.t2 = _this.aey != null ? ArrayExtension.getModulus$1(Brush.$, _this.aey, ae) : null; });
                break;
            case "OverlayOutlines":
                this.amj(function (ad, ae) { return ad.ud = _this.aez != null ? ArrayExtension.getModulus$1(Brush.$, _this.aez, ae) : null; });
                break;
            case "OverlayThickness":
                this.amj(function (ad, ae) { return ad.i5 = _this.ais; });
                break;
            case "OverlayMultiplier":
                this.amj(function (ad, ae) { return _this.agg.setMultiplier(ad, _this.air); });
                break;
            case "VolumeBrushes":
                this.aml(function (ad, ae) { return ad.t2 = ArrayExtension.getModulus$1(Brush.$, _this.ae0, ae); });
                break;
            case "VolumeOutlines":
                this.aml(function (ad, ae) { return ad.ud = ArrayExtension.getModulus$1(Brush.$, _this.ae1, ae); });
                break;
            case "VolumeThickness":
                this.aml(function (ad, ae) { return ad.i5 = _this.aiu; });
                break;
            case "IndicatorNegativeBrushes":
                this.ami(function (ad, ae) { return _this.agb.setNegativeBrush(ad, ArrayExtension.getModulus$1(Brush.$, _this.aev, ae)); });
                break;
            case "IndicatorBrushes":
                this.ami(function (ad, ae) { return ad.t2 = ArrayExtension.getModulus$1(Brush.$, _this.aeu, ae); });
                break;
            case "IndicatorThickness":
                this.ami(function (ad, ae) { return ad.i5 = _this.aiq; });
                break;
            case "IndicatorDisplayTypes":
                this.ami(function (ad, ae) { return _this.agb.setDisplayType(ad, ArrayExtension.getModulus$1(IndicatorDisplayType_$type, _this.agd, ae)); });
                break;
            case "IndicatorPeriod":
                this.ami(function (ad, ae) {
                    if (_this.ajl == -2147483648) {
                        return;
                    }
                    _this.agb.setPeriodOverride(ad, _this.ajl);
                });
                break;
            case "IndicatorMultiplier":
                this.ami(function (ad, ae) { return _this.agb.setMultiplier(ad, _this.aip); });
                break;
            case "IndicatorSmoothingPeriod":
                this.ami(function (ad, ae) { return _this.agb.setSmoothingPeriod(ad, _this.ajo); });
                break;
            case "IndicatorShortPeriod":
                this.ami(function (ad, ae) { return _this.agb.setShortPeriod(ad, _this.ajm); });
                break;
            case "IndicatorLongPeriod":
                this.ami(function (ad, ae) { return _this.agb.setLongPeriod(ad, _this.ajk); });
                break;
            case "IndicatorSignalPeriod":
                this.ami(function (ad, ae) { return _this.agb.setSignalPeriod(ad, _this.ajn); });
                break;
            case "RangeSelectorOptions":
                var ad = typeCast(FinancialChartRangeSelectorOptionCollection.$, b);
                if (ad != null) {
                    ad.collectionChanged = delegateRemove(ad.collectionChanged, runOn(this, this.amt));
                }
                if (this.afj != null) {
                    var ae = this.afj;
                    ae.collectionChanged = delegateCombine(ae.collectionChanged, runOn(this, this.amt));
                }
                this.anf();
                break;
            case "CustomIndicatorNames":
                var af = typeCast(ObservableCollection$1.$.specialize(String_$type), b);
                if (af != null) {
                    af.collectionChanged = delegateRemove(af.collectionChanged, runOn(this, this.amp));
                }
                if (this.customIndicatorNames != null) {
                    var ag = this.customIndicatorNames;
                    ag.collectionChanged = delegateCombine(ag.collectionChanged, runOn(this, this.amp));
                }
                this.anp();
                break;
            case "Legend":
                if (this.zoomSliderChart != null) {
                    this.zoomSliderChart.legend = null;
                }
                break;
            case "Brushes":
                this.amk(function (ah, ai) { return ah.t2 = _this.ab != null ? ArrayExtension.getModulus$1(Brush.$, _this.ab, ai) : null; }, true);
                break;
            case "Outlines":
                this.amk(function (ah, ai) { return ah.ud = _this.af != null ? ArrayExtension.getModulus$1(Brush.$, _this.af, ai) : null; }, true);
                break;
            case "XAxisLabelVisibility":
                if (this.aek == 0 && this.zoomSliderXAxis != null) {
                    this.acu(this.zoomSliderXAxis, function (ah) { return ah.visibility = 1; });
                }
                this.ame();
                break;
            case "YAxisLabelVisibility":
                if (this.ael != 0 || this.zoomSliderAxis == null) {
                    break;
                }
                this.acu(this.zoomSliderAxis, function (ah) { return ah.visibility = 1; });
                break;
            case "ZoomSliderXAxisMajorStroke":
                this.zoomSliderXAxis.jw = this.an0;
                break;
            case "ZoomSliderXAxisMajorStrokeThickness":
                this.zoomSliderXAxis.er = this.ai6;
                break;
            case "FinancialChartLegend":
            case "IsLegendVisible":
                var ah_1 = this.ahh && this.legend == null;
                {
                    var ai = function (aj, ak) {
                        if (aj.isUsableInLegend) {
                            aj.legend = ah_1 ? _this.af5 : null;
                        }
                    };
                    this.amk(ai, false);
                    this.amj(ai);
                }
                break;
            case "ZoomSliderAxis":
                var aj = typeCast(Axis.$, b);
                if (aj != null && this.zoomSliderChart != null) {
                    this.zoomSliderChart.axes.remove(aj);
                }
                if (this.zoomSliderAxis != null) {
                    if (this.zoomSliderChart != null) {
                        this.zoomSliderChart.axes.add(this.zoomSliderAxis);
                        this.anc();
                        this.zoomSliderXAxis.itemsSource = this.xAxis.itemsSource;
                    }
                    if (this.f8) {
                        this.acy(this.zoomSliderAxis);
                    }
                    this.acu(this.zoomSliderAxis, function (ak) { return ak.visibility = 1; });
                }
                break;
            case "XAxisMinimumValue":
                this.ac0(function (ak) {
                    var al = typeCast(ITimeRangeSelectorAxis_$type, ak);
                    if (al != null) {
                        al.minimumValue = _this.ah7;
                    }
                });
                break;
            case "XAxisMaximumValue":
                this.ac0(function (ak) {
                    var al = typeCast(ITimeRangeSelectorAxis_$type, ak);
                    if (al != null) {
                        al.maximumValue = _this.ah6;
                    }
                });
                break;
            case FinancialChart.all:
                this.ac1(function (ak) { return ak.b1 = _this.ahp; }, a);
                break;
            case FinancialChart.alw:
                this.ac5(function (ak) { return ak.b1 = _this.ahr; });
                break;
        }
    };
    FinancialChart.prototype.get_b5 = function () {
        return 1;
    };
    Object.defineProperty(FinancialChart.prototype, "b5", {
        get: function () {
            return this.get_b5();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahs", {
        get: function () {
            return this.aha;
        },
        set: function (a) {
            var b = this.ahs;
            if (a != b) {
                this.aha = a;
                this.t5("YAxisIsLogarithmic", b, this.ahs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ajq", {
        get: function () {
            return this.aji;
        },
        set: function (a) {
            var b = this.ajq;
            if (a != b) {
                this.aji = a;
                this.t5("YAxisLogarithmBase", b, this.ajq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ai2", {
        get: function () {
            return this.aij;
        },
        set: function (a) {
            var b = this.ai2;
            if (a != b) {
                this.aij = a;
                this.t5("YAxisInterval", b, this.ai2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ai4", {
        get: function () {
            return this.ail;
        },
        set: function (a) {
            var b = this.ai4;
            if (a != b) {
                this.ail = a;
                this.t5("YAxisMinimumValue", b, this.ai4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ai3", {
        get: function () {
            return this.aik;
        },
        set: function (a) {
            var b = this.ai3;
            if (a != b) {
                this.aik = a;
                this.t5("YAxisMaximumValue", b, this.ai3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ai5", {
        get: function () {
            return this.aim;
        },
        set: function (a) {
            var b = this.ai5;
            if (a != b) {
                this.aim = a;
                this.t5("YAxisMinorInterval", b, this.ai5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ai1", {
        get: function () {
            return this.yAxis.lx;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ai0", {
        get: function () {
            return this.yAxis.lw;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "afs", {
        get: function () {
            return this.afq;
        },
        set: function (a) {
            var b = this.afs;
            if (a != b) {
                this.afq = a;
                this.t5("VolumeType", enumGetBox(FinancialChartVolumeType_$type, b), enumGetBox(FinancialChartVolumeType_$type, this.afs));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "afu", {
        get: function () {
            return this.aft;
        },
        set: function (a) {
            var b = this.afu;
            if (a != b) {
                this.aft = a;
                this.t5("XAxisMode", enumGetBox(FinancialChartXAxisMode_$type, b), enumGetBox(FinancialChartXAxisMode_$type, this.afu));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aiv", {
        get: function () {
            return this.aie;
        },
        set: function (a) {
            var b = this.aiv;
            if (a != b) {
                this.aie = a;
                this.t5("XAxisZoomMaximumCategoryRange", b, this.aiv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aiy", {
        get: function () {
            return this.aih;
        },
        set: function (a) {
            var b = this.aiy;
            if (a != b) {
                this.aih = a;
                this.t5("XAxisZoomToCategoryStart", b, this.aiy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aiw", {
        get: function () {
            return this.aif;
        },
        set: function (a) {
            var b = this.aiw;
            if (a != b) {
                this.aif = a;
                this.t5("XAxisZoomMaximumItemSpan", b, this.aiw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aix", {
        get: function () {
            return this.aig;
        },
        set: function (a) {
            var b = this.aix;
            if (a != b) {
                this.aig = a;
                this.t5("XAxisZoomToCategoryRange", b, this.aix);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aiz", {
        get: function () {
            return this.aii;
        },
        set: function (a) {
            var b = this.aiz;
            if (a != b) {
                this.aii = a;
                this.t5("XAxisZoomToItemSpan", b, this.aiz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "afw", {
        get: function () {
            return this.afv;
        },
        set: function (a) {
            var b = this.afw;
            if (a != b) {
                this.afv = a;
                this.t5("YAxisMode", enumGetBox(FinancialChartYAxisMode_$type, b), enumGetBox(FinancialChartYAxisMode_$type, this.afw));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahl", {
        get: function () {
            return this.ag5;
        },
        set: function (a) {
            var b = this.ahl;
            if (a != b) {
                this.ag5 = a;
                this.t5("IsToolbarVisible", b, this.ahl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "afn", {
        get: function () {
            return this.afm;
        },
        set: function (a) {
            var b = this.afn;
            if (a != b) {
                this.afm = a;
                this.t5("ChartType", enumGetBox(FinancialChartType_$type, b), enumGetBox(FinancialChartType_$type, this.afn));
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_adf = function () {
        return _super.prototype.get_adf.call(this);
    };
    FinancialChart.prototype.set_adf = function (a) {
        _super.prototype.set_adf.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "ahm", {
        get: function () {
            return this.ag6;
        },
        set: function (a) {
            var b = this.ahm;
            if (a != b) {
                this.ag6 = a;
                this.t5("IsWindowSyncedToVisibleRange", b, this.ahm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "af1", {
        get: function () {
            return this.af0;
        },
        set: function (a) {
            var b = this.af1;
            if (a != b) {
                this.af0 = a;
                this.t5("IndicatorTypes", b, this.af1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "af3", {
        get: function () {
            return this.af2;
        },
        set: function (a) {
            var b = this.af3;
            if (a != b) {
                this.af2 = a;
                this.t5("OverlayTypes", b, this.af3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorCharts", {
        get: function () {
            return this.ahx;
        },
        set: function (a) {
            var b = this.indicatorCharts;
            if (a != b) {
                this.ahx = a;
                this.t5("IndicatorCharts", b, this.indicatorCharts);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahq", {
        get: function () {
            return this.ag8;
        },
        set: function (a) {
            var b = this.ahq;
            if (a != b) {
                this.ag8 = a;
                this.t5("YAxisAbbreviateLargeNumbers", b, this.ahq);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_jm = function () {
        return _super.prototype.get_jm.call(this);
    };
    FinancialChart.prototype.set_jm = function (a) {
        _super.prototype.set_jm.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "ahp", {
        get: function () {
            return this.ag7;
        },
        set: function (a) {
            var b = this.ahp;
            if (a != b) {
                this.ag7 = a;
                this.t5(FinancialChart.all, b, this.ahp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahr", {
        get: function () {
            return this.ag9;
        },
        set: function (a) {
            var b = this.ahr;
            if (a != b) {
                this.ag9 = a;
                this.t5(FinancialChart.alw, b, this.ahr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderChart", {
        get: function () {
            return this.agz;
        },
        set: function (a) {
            var b = this.zoomSliderChart;
            if (a != b) {
                this.agz = a;
                this.t5("ZoomSliderChart", b, this.zoomSliderChart);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderAxis", {
        get: function () {
            return this.agk;
        },
        set: function (a) {
            var b = this.zoomSliderAxis;
            if (a != b) {
                this.agk = a;
                this.t5("ZoomSliderAxis", b, this.zoomSliderAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderXAxis", {
        get: function () {
            return this.ae5;
        },
        set: function (a) {
            var b = this.zoomSliderXAxis;
            if (a != b) {
                this.ae5 = a;
                this.t5("ZoomSliderXAxis", b, this.zoomSliderXAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "afz", {
        get: function () {
            return this.afx;
        },
        set: function (a) {
            var b = this.afz;
            if (a != b) {
                this.afx = a;
                this.t5("ZoomSliderType", enumGetBox(FinancialChartZoomSliderType_$type, b), enumGetBox(FinancialChartZoomSliderType_$type, this.afz));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aew", {
        get: function () {
            return this.aeo;
        },
        set: function (a) {
            var b = this.aew;
            if (a != b) {
                this.aeo = a;
                this.t5("NegativeBrushes", b, this.aew);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aex", {
        get: function () {
            return this.aep;
        },
        set: function (a) {
            var b = this.aex;
            if (a != b) {
                this.aep = a;
                this.t5("NegativeOutlines", b, this.aex);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aey", {
        get: function () {
            return this.aeq;
        },
        set: function (a) {
            var b = this.aey;
            if (a != b) {
                this.aeq = a;
                this.t5("OverlayBrushes", b, this.aey);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aez", {
        get: function () {
            return this.aer;
        },
        set: function (a) {
            var b = this.aez;
            if (a != b) {
                this.aer = a;
                this.t5("OverlayOutlines", b, this.aez);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ae1", {
        get: function () {
            return this.aet;
        },
        set: function (a) {
            var b = this.ae1;
            if (a != b) {
                this.aet = a;
                this.t5("VolumeOutlines", b, this.ae1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ae0", {
        get: function () {
            return this.aes;
        },
        set: function (a) {
            var b = this.ae0;
            if (a != b) {
                this.aes = a;
                this.t5("VolumeBrushes", b, this.ae0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aev", {
        get: function () {
            return this.aen;
        },
        set: function (a) {
            var b = this.aev;
            if (a != b) {
                this.aen = a;
                this.t5("IndicatorNegativeBrushes", b, this.aev);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aeu", {
        get: function () {
            return this.aem;
        },
        set: function (a) {
            var b = this.aeu;
            if (a != b) {
                this.aem = a;
                this.t5("IndicatorBrushes", b, this.aeu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aiu", {
        get: function () {
            return this.aid;
        },
        set: function (a) {
            var b = this.aiu;
            if (a != b) {
                this.aid = a;
                this.t5("VolumeThickness", b, this.aiu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ais", {
        get: function () {
            return this.aib;
        },
        set: function (a) {
            var b = this.ais;
            if (a != b) {
                this.aib = a;
                this.t5("OverlayThickness", b, this.ais);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "air", {
        get: function () {
            return this.aia;
        },
        set: function (a) {
            var b = this.air;
            if (a != b) {
                this.aia = a;
                this.t5("OverlayMultiplier", b, this.air);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aiq", {
        get: function () {
            return this.ah9;
        },
        set: function (a) {
            var b = this.aiq;
            if (a != b) {
                this.ah9 = a;
                this.t5("IndicatorThickness", b, this.aiq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "agd", {
        get: function () {
            return this.agc;
        },
        set: function (a) {
            var b = this.agd;
            if (a != b) {
                this.agc = a;
                this.t5("IndicatorDisplayTypes", b, this.agd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ajl", {
        get: function () {
            return this.aje;
        },
        set: function (a) {
            var b = this.ajl;
            if (a != b) {
                this.aje = a;
                this.t5("IndicatorPeriod", b, this.ajl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "aip", {
        get: function () {
            return this.ah8;
        },
        set: function (a) {
            var b = this.aip;
            if (a != b) {
                this.ah8 = a;
                this.t5("IndicatorMultiplier", b, this.aip);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ajo", {
        get: function () {
            return this.ajh;
        },
        set: function (a) {
            var b = this.ajo;
            if (a != b) {
                this.ajh = a;
                this.t5("IndicatorSmoothingPeriod", b, this.ajo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ajm", {
        get: function () {
            return this.ajf;
        },
        set: function (a) {
            var b = this.ajm;
            if (a != b) {
                this.ajf = a;
                this.t5("IndicatorShortPeriod", b, this.ajm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ajk", {
        get: function () {
            return this.ajd;
        },
        set: function (a) {
            var b = this.ajk;
            if (a != b) {
                this.ajd = a;
                this.t5("IndicatorLongPeriod", b, this.ajk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ajn", {
        get: function () {
            return this.ajg;
        },
        set: function (a) {
            var b = this.ajn;
            if (a != b) {
                this.ajg = a;
                this.t5("IndicatorSignalPeriod", b, this.ajn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "afj", {
        get: function () {
            return this.afh;
        },
        set: function (a) {
            var b = this.afj;
            if (a != b) {
                this.afh = a;
                this.t5("RangeSelectorOptions", b, this.afj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "customIndicatorNames", {
        get: function () {
            return this.afd;
        },
        set: function (a) {
            var b = this.afd;
            if (a != b) {
                this.afd = a;
                this.t5("CustomIndicatorNames", b, this.customIndicatorNames);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.prototype.get_g0 = function () {
        return _super.prototype.get_g0.call(this);
    };
    FinancialChart.prototype.set_g0 = function (a) {
        _super.prototype.set_g0.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "an0", {
        get: function () {
            return this.anz;
        },
        set: function (a) {
            var b = this.an0;
            if (a != b) {
                this.anz = a;
                this.t5("ZoomSliderXAxisMajorStroke", b, this.an0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ai6", {
        get: function () {
            return this.ain;
        },
        set: function (a) {
            var b = this.ai6;
            if (a != b) {
                this.ain = a;
                this.t5("ZoomSliderXAxisMajorStrokeThickness", b, this.ai6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahh", {
        get: function () {
            return this.ag4;
        },
        set: function (a) {
            var b = this.ahh;
            if (a != b) {
                this.ag4 = a;
                this.t5("IsLegendVisible", b, this.ahh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "af5", {
        get: function () {
            return this.af4;
        },
        set: function (a) {
            var b = this.af5;
            if (a != b) {
                this.af4 = a;
                this.t5("FinancialChartLegend", b, this.af5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xAxis", {
        get: function () {
            return this.ae4;
        },
        set: function (a) {
            var b = this.xAxis;
            if (a != b) {
                this.ae4 = a;
                this.t5("XAxis", b, this.xAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "yAxis", {
        get: function () {
            return this.agj;
        },
        set: function (a) {
            var b = this.yAxis;
            if (a != b) {
                this.agj = a;
                this.t5("YAxis", b, this.yAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "volumeAxis", {
        get: function () {
            return this.agi;
        },
        set: function (a) {
            var b = this.volumeAxis;
            if (a != b) {
                this.agi = a;
                this.t5("VolumeAxis", b, this.volumeAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "volumeXAxis", {
        get: function () {
            return this.ae3;
        },
        set: function (a) {
            var b = this.volumeXAxis;
            if (a != b) {
                this.ae3 = a;
                this.t5("VolumeXAxis", b, this.volumeXAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorAxis", {
        get: function () {
            return this.agh;
        },
        set: function (a) {
            var b = this.indicatorAxis;
            if (a != b) {
                this.agh = a;
                this.t5("IndicatorAxis", b, this.indicatorAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorXAxis", {
        get: function () {
            return this.ae2;
        },
        set: function (a) {
            var b = this.indicatorXAxis;
            if (a != b) {
                this.ae2 = a;
                this.t5("IndicatorXAxis", b, this.indicatorXAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ahz", {
        get: function () {
            return this.ahw;
        },
        set: function (a) {
            var b = this.ahz;
            if (a != b) {
                this.ahw = a;
                this.t5("IndicatorAxes", b, this.ahz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ah1", {
        get: function () {
            return this.ahy;
        },
        set: function (a) {
            var b = this.ah1;
            if (a != b) {
                this.ahy = a;
                this.t5("IndicatorXAxes", b, this.ah1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ah7", {
        get: function () {
            return this.ah5;
        },
        set: function (a) {
            var b = this.ah7;
            if (+a != +b) {
                this.ah5 = a;
                this.t5("XAxisMinimumValue", b, this.ah7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ah6", {
        get: function () {
            return this.ah4;
        },
        set: function (a) {
            var b = this.ah6;
            if (+a != +b) {
                this.ah4 = a;
                this.t5("XAxisMaximumValue", b, this.ah6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xAxisBreaks", {
        get: function () {
            return this.ah2;
        },
        enumerable: false,
        configurable: true
    });
    FinancialChart.$t = markType(FinancialChart, 'FinancialChart', XYChart.$);
    FinancialChart.ajp = 0;
    FinancialChart.all = "XAxisEnhancedIntervalPreferMoreCategoryLabels";
    FinancialChart.alw = "YAxisEnhancedIntervalPreferMoreCategoryLabels";
    return FinancialChart;
}(XYChart));
export { FinancialChart };
/**
 * @hidden
 */
var FinancialChartToolbar = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartToolbar, _super);
    function FinancialChartToolbar(a, b) {
        var _this = _super.call(this, "financialChartToolbar", b, "") || this;
        _this.o = null;
        _this.r = null;
        _this.z = null;
        _this.p = null;
        _this.w = null;
        _this.aq = dateMaxValue();
        _this.ap = dateMinValue();
        _this.ao = dateMaxValue();
        _this.an = dateMinValue();
        _this.rangeChanged = null;
        _this.chartTypeChanged = null;
        _this.trendLineTypeChanged = null;
        _this.volumeTypeChanged = null;
        _this.indicatorTypesChanged = null;
        _this.overlayTypesChanged = null;
        _this.x = 0;
        _this.ah = 0;
        _this.ab = 0;
        _this.ad = null;
        _this.af = null;
        _this.t = null;
        _this.ak = false;
        _this.o = a;
        _this.w = new FinancialChartToolbarViewModel();
        _this.s = new FinancialChartRangeSelector(a != null ? a.aj1 : null);
        _this.aa = new FinancialChartTypePicker(a != null ? a.ajy : null);
        _this.q = new FinancialChartIndicatorMenu(1, a != null ? a.ajz : null);
        return _this;
    }
    FinancialChartToolbar.prototype.bg = function (a) {
        var b = a.querySelectorAll(".financialChartToolbarArea");
        if (b != null && b.length > 0) {
            this.g = b[0];
            if (!this.al) {
                this.g.hide();
            }
        }
        var c = a.querySelectorAll(".financialChartIndicatorMenu");
        if (c != null && c.length > 0) {
            this.q.g = c[0];
        }
        var d = a.querySelectorAll(".financialChartRangeSelector");
        if (d != null && d.length > 0) {
            this.s.g = d[0];
        }
        var e = a.querySelectorAll(".financialChartTypePicker");
        if (e != null && e.length > 0) {
            this.aa.g = e[0];
        }
    };
    FinancialChartToolbar.prototype.bl = function (a) {
        this.q.u(a);
        this.aa.u(a);
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "s", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.s;
            if (a != b) {
                this.r = a;
                this.bm("RangeSelector", b, this.s);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "aa", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            var b = this.aa;
            if (a != b) {
                this.z = a;
                this.bm("ChartTypePicker", b, this.aa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "q", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            var b = this.q;
            if (a != b) {
                this.p = a;
                this.bm("IndicatorMenu", b, this.q);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartToolbar.prototype.bm = function (a, b, c) {
        switch (a) {
            case "RangeStart":
                if (this.s != null) {
                    this.s.t = this.as;
                }
                break;
            case "RangeEnd":
                if (this.s != null) {
                    this.s.s = this.ar;
                }
                break;
            case "SelectionStart":
                if (this.s != null) {
                    this.s.v = this.au;
                }
                break;
            case "SelectionEnd":
                if (this.s != null) {
                    this.s.u = this.at;
                }
                break;
            case "RangeSelector":
                var d = b;
                if (d != null) {
                    d.rangeChanged = delegateRemove(d.rangeChanged, runOn(this, this.bj));
                }
                if (this.s != null) {
                    this.s.t = this.as;
                    this.s.s = this.ar;
                    this.s.o = this.u;
                    this.s.v = this.au;
                    this.s.u = this.at;
                    var e = this.s;
                    e.rangeChanged = delegateCombine(e.rangeChanged, runOn(this, this.bj));
                }
                break;
            case "ChartTypePicker":
                var f = b;
                if (f != null) {
                    f.selectionChanged = delegateRemove(f.selectionChanged, runOn(this, this.bi));
                }
                if (this.aa != null) {
                    this.aa.w = this.y;
                    var g = this.aa;
                    g.selectionChanged = delegateCombine(g.selectionChanged, runOn(this, this.bi));
                }
                break;
            case "ChartType":
                if (this.aa != null) {
                    this.aa.w = this.y;
                }
                break;
            case "RangeSelectorOptions":
                if (this.s != null) {
                    this.s.o = this.u;
                }
                break;
            case "IsToolbarVisible":
                if (this.g == null) {
                    break;
                }
                if (this.al) {
                    this.g.show();
                }
                else {
                    this.g.hide();
                }
                break;
            case "IndicatorMenu":
                var h = typeCast(FinancialChartIndicatorMenu.$, b);
                if (h != null) {
                    h.selectionChanged = delegateRemove(h.selectionChanged, runOn(this, this.bh));
                }
                if (this.q != null) {
                    var i = this.q;
                    i.selectionChanged = delegateCombine(i.selectionChanged, runOn(this, this.bh));
                }
                break;
            case "IndicatorTypes":
                if (this.indicatorTypesChanged != null) {
                    this.indicatorTypesChanged(this, EventArgs.empty);
                }
                break;
            case "OverlayTypes":
                if (this.overlayTypesChanged != null) {
                    this.overlayTypesChanged(this, EventArgs.empty);
                }
                break;
            case "TrendLineType":
                if (this.trendLineTypeChanged != null) {
                    this.trendLineTypeChanged(this, EventArgs.empty);
                }
                break;
            case "VolumeType":
                if (this.volumeTypeChanged != null) {
                    this.volumeTypeChanged(this, EventArgs.empty);
                }
                break;
        }
    };
    FinancialChartToolbar.prototype.bh = function (a, b) {
        this.ag = this.q.z;
        this.ae = this.q.y;
        this.ai = this.q.aa;
        this.ac = this.q.x;
    };
    FinancialChartToolbar.prototype.bi = function (a, b) {
        this.y = this.aa.w;
        if (this.chartTypeChanged != null) {
            this.chartTypeChanged(this, b);
        }
    };
    FinancialChartToolbar.prototype.bj = function (a, b) {
        this.au = this.s.v;
        this.at = this.s.u;
        if (this.rangeChanged != null) {
            this.rangeChanged(this, b);
        }
    };
    FinancialChartToolbar.prototype.v = function () {
        var _this = this;
        var a = new FinancialChartToolbarContext();
        a.container = this.d;
        a.vm = this.w;
        a.vm.financialChartIndicatorMenu = ((function () {
            var $ret = new FinancialChartIndicatorMenuContext();
            $ret.vm = _this.q.p;
            return $ret;
        })());
        a.vm.financialChartTypePicker = ((function () {
            var $ret = new FinancialChartTypePickerContext();
            $ret.vm = _this.aa.p;
            return $ret;
        })());
        a.vm.financialChartRangeSelector = ((function () {
            var $ret = new FinancialChartRangeSelectorContext();
            $ret.vm = _this.s.q;
            return $ret;
        })());
        return a;
    };
    FinancialChartToolbar.prototype.l = function (a) {
        _super.prototype.l.call(this, a);
        if (a == null) {
            return;
        }
        this.s.l(a);
        this.aa.l(a);
        this.q.l(a);
        this.bk();
    };
    FinancialChartToolbar.prototype.bk = function () {
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "au", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            var b = this.au;
            if (+a != +b) {
                this.aq = a;
                this.bm("SelectionStart", b, this.au);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "at", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            var b = this.at;
            if (+a != +b) {
                this.ap = a;
                this.bm("SelectionEnd", b, this.at);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "as", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            var b = this.as;
            if (+a != +b) {
                this.ao = a;
                this.bm("RangeStart", b, this.as);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ar", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            var b = this.ar;
            if (+a != +b) {
                this.an = a;
                this.bm("RangeEnd", b, this.ar);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartToolbar.prototype.bn = function () {
        if (this.s != null) {
            this.s.ab();
        }
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "y", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.y;
            if (a != b) {
                this.x = a;
                this.bm("ChartType", enumGetBox(FinancialChartType_$type, b), enumGetBox(FinancialChartType_$type, this.y));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ai", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            var b = this.ai;
            if (a != b) {
                this.ah = a;
                this.bm("TrendLineType", enumGetBox(TrendLineType_$type, b), enumGetBox(TrendLineType_$type, this.ai));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ac", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            var b = this.ac;
            if (a != b) {
                this.ab = a;
                this.bm("VolumeType", enumGetBox(FinancialChartVolumeType_$type, b), enumGetBox(FinancialChartVolumeType_$type, this.ac));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ae", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            var b = this.ae;
            if (!FinancialChartToolbar.am(b, a)) {
                this.ad = a;
                this.bm("IndicatorTypes", b, this.ae);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ag", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            var b = this.ag;
            if (!FinancialChartToolbar.am(b, a)) {
                this.af = a;
                this.bm("OverlayTypes", b, this.ag);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartToolbar.am = function (a, b) {
        var e_21, _a;
        if (a == b) {
            return true;
        }
        if ((a == null && b != null) || (a != null && b == null)) {
            return false;
        }
        if (a.count != b.count) {
            return false;
        }
        try {
            for (var _b = __values(fromEn(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (!b.contains(c)) {
                    return false;
                }
            }
        }
        catch (e_21_1) {
            e_21 = { error: e_21_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_21)
                    throw e_21.error;
            }
        }
        return true;
    };
    FinancialChartToolbar.prototype.aj = function () {
        var _this = this;
        return ((function () {
            var $ret = new FinancialChartToolbarVisualData();
            $ret.rangeSelector = _this.s == null ? null : _this.s.r();
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "u", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            var b = this.u;
            if (a != b) {
                this.t = a;
                this.bm("RangeSelectorOptions", b, this.u);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "al", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            var b = this.al;
            if (a != b) {
                this.ak = a;
                this.bm("IsToolbarVisible", b, this.al);
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartToolbar.$t = markType(FinancialChartToolbar, 'FinancialChartToolbar', TemplatedHtmlControl.$);
    return FinancialChartToolbar;
}(TemplatedHtmlControl));
export { FinancialChartToolbar };
/**
 * @hidden
 */
var FinancialChartRangeSelector = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartRangeSelector, _super);
    function FinancialChartRangeSelector(a) {
        var _this = _super.call(this, "financialChartRangeSelector", a, "") || this;
        _this.q = null;
        _this.rangeChanged = null;
        _this.p = null;
        _this.p = new FinancialChartRangeSelectorView();
        _this.q = new FinancialChartRangeSelectorViewModel();
        _this.q.onRangeChanged = runOn(_this, _this.z);
        _this.p.c = _this.q;
        return _this;
    }
    Object.defineProperty(FinancialChartRangeSelector.prototype, "v", {
        get: function () {
            return this.q.selectionStart;
        },
        set: function (a) {
            this.q.selectionStart = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "u", {
        get: function () {
            return this.q.selectionEnd;
        },
        set: function (a) {
            this.q.selectionEnd = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "t", {
        get: function () {
            return this.q.rangeStart;
        },
        set: function (a) {
            this.q.rangeStart = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "s", {
        get: function () {
            return this.q.rangeEnd;
        },
        set: function (a) {
            this.q.rangeEnd = a;
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartRangeSelector.prototype.ab = function () {
        if (this.q.onPropertiesChanged()) {
            this.p.g(this.q);
        }
    };
    FinancialChartRangeSelector.prototype.l = function (a) {
        _super.prototype.l.call(this, a);
        this.p.f(this.d, this.q);
    };
    FinancialChartRangeSelector.prototype.z = function () {
        if (this.rangeChanged != null) {
            this.rangeChanged(this, EventArgs.empty);
        }
    };
    FinancialChartRangeSelector.prototype.r = function () {
        return this.p.d(this.g);
    };
    Object.defineProperty(FinancialChartRangeSelector.prototype, "o", {
        get: function () {
            return this.q.options;
        },
        set: function (a) {
            var b = !FinancialChartToolbar.am(this.q.options, a);
            if (b) {
                this.q.options = a;
                this.aa();
            }
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartRangeSelector.prototype.aa = function () {
        var a = false;
        if (this.q != null) {
            a = this.q.p();
        }
        if (this.p != null) {
            this.p.i(this.o);
            if (a) {
                if (this.q.notifyChanged != null) {
                    this.q.notifyChanged();
                }
            }
        }
    };
    FinancialChartRangeSelector.$t = markType(FinancialChartRangeSelector, 'FinancialChartRangeSelector', TemplatedHtmlControl.$);
    FinancialChartRangeSelector.x = 0;
    return FinancialChartRangeSelector;
}(TemplatedHtmlControl));
export { FinancialChartRangeSelector };
