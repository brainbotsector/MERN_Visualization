import { Description } from "./Description";
import { ToolActionDescription } from "./ToolActionDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class ToolbarDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private at;
    get baseTheme(): string;
    set baseTheme(a: string);
    private j;
    get autoGeneratedActions(): ToolActionDescription[];
    set autoGeneratedActions(a: ToolActionDescription[]);
    private h;
    get actions(): ToolActionDescription[];
    set actions(a: ToolActionDescription[]);
    private i;
    get actualActions(): ToolActionDescription[];
    set actualActions(a: ToolActionDescription[]);
    private a6;
    get orientation(): string;
    set orientation(a: string);
    private a9;
    get targetRef(): string;
    set targetRef(a: string);
    private as;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private a8;
    get submenuBackgroundColor(): string;
    set submenuBackgroundColor(a: string);
    private ay;
    get groupHeaderBackgroundColor(): string;
    set groupHeaderBackgroundColor(a: string);
    private a7;
    get separatorBackgroundColor(): string;
    set separatorBackgroundColor(a: string);
    private a2;
    get hoverBackgroundColor(): string;
    set hoverBackgroundColor(a: string);
    private ba;
    get textColor(): string;
    set textColor(a: string);
    private ax;
    get disabledTextColor(): string;
    set disabledTextColor(a: string);
    private az;
    get groupHeaderTextColor(): string;
    set groupHeaderTextColor(a: string);
    private bc;
    get toolTipTextColor(): string;
    set toolTipTextColor(a: string);
    private bb;
    get toolTipBackgroundColor(): string;
    set toolTipBackgroundColor(a: string);
    private aa;
    get toolTipCornerRadius(): number;
    set toolTipCornerRadius(a: number);
    private ab;
    get toolTipElevation(): number;
    set toolTipElevation(a: number);
    private a3;
    get iconFill(): string;
    set iconFill(a: string);
    private a4;
    get iconStroke(): string;
    set iconStroke(a: string);
    private au;
    get cellFontFamily(): string;
    set cellFontFamily(a: string);
    private p;
    get cellFontSize(): number;
    set cellFontSize(a: number);
    private av;
    get cellFontStyle(): string;
    set cellFontStyle(a: string);
    private aw;
    get cellFontWeight(): string;
    set cellFontWeight(a: string);
    private x;
    get separatorVerticalPaddingLeft(): number;
    set separatorVerticalPaddingLeft(a: number);
    private y;
    get separatorVerticalPaddingRight(): number;
    set separatorVerticalPaddingRight(a: number);
    private z;
    get separatorVerticalPaddingTop(): number;
    set separatorVerticalPaddingTop(a: number);
    private w;
    get separatorVerticalPaddingBottom(): number;
    set separatorVerticalPaddingBottom(a: number);
    private t;
    get separatorHorizontalPaddingLeft(): number;
    set separatorHorizontalPaddingLeft(a: number);
    private u;
    get separatorHorizontalPaddingRight(): number;
    set separatorHorizontalPaddingRight(a: number);
    private v;
    get separatorHorizontalPaddingTop(): number;
    set separatorHorizontalPaddingTop(a: number);
    private s;
    get separatorHorizontalPaddingBottom(): number;
    set separatorHorizontalPaddingBottom(a: number);
    private n;
    get showOnHover(): boolean;
    set showOnHover(a: boolean);
    private r;
    get highlightWidth(): number;
    set highlightWidth(a: number);
    private q;
    get highlightRadius(): number;
    set highlightRadius(a: number);
    private a1;
    get highlightColor(): string;
    set highlightColor(a: string);
    private ap;
    get rowHeight(): number;
    set rowHeight(a: number);
    private a5;
    get onCommandRef(): string;
    set onCommandRef(a: string);
    private bd;
    get width(): string;
    set width(a: string);
    private a0;
    get height(): string;
    set height(a: string);
    private ar;
    get background(): string;
    set background(a: string);
}
