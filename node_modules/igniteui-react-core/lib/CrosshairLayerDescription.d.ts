import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class CrosshairLayerDescription extends AnnotationLayerDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private gt;
    get horizontalLineStroke(): string;
    set horizontalLineStroke(a: string);
    private gx;
    get verticalLineStroke(): string;
    set verticalLineStroke(a: string);
    private gv;
    get targetSeriesName(): string;
    set targetSeriesName(a: string);
    private gw;
    get targetSeriesRef(): string;
    set targetSeriesRef(a: string);
    private fx;
    get useInterpolation(): boolean;
    set useInterpolation(a: boolean);
    private fv;
    get isAxisAnnotationEnabled(): boolean;
    set isAxisAnnotationEnabled(a: boolean);
    private g2;
    get xAxisAnnotationTextColor(): string;
    set xAxisAnnotationTextColor(a: string);
    private gz;
    get xAxisAnnotationBackground(): string;
    set xAxisAnnotationBackground(a: string);
    private f1;
    get xAxisAnnotationBackgroundCornerRadius(): number;
    set xAxisAnnotationBackgroundCornerRadius(a: number);
    private gp;
    get xAxisAnnotationInterpolatedValuePrecision(): number;
    set xAxisAnnotationInterpolatedValuePrecision(a: number);
    private g1;
    get xAxisAnnotationOutline(): string;
    set xAxisAnnotationOutline(a: string);
    private f3;
    get xAxisAnnotationPaddingLeft(): number;
    set xAxisAnnotationPaddingLeft(a: number);
    private f5;
    get xAxisAnnotationPaddingTop(): number;
    set xAxisAnnotationPaddingTop(a: number);
    private f4;
    get xAxisAnnotationPaddingRight(): number;
    set xAxisAnnotationPaddingRight(a: number);
    private f2;
    get xAxisAnnotationPaddingBottom(): number;
    set xAxisAnnotationPaddingBottom(a: number);
    private f9;
    get yAxisAnnotationPaddingLeft(): number;
    set yAxisAnnotationPaddingLeft(a: number);
    private gb;
    get yAxisAnnotationPaddingTop(): number;
    set yAxisAnnotationPaddingTop(a: number);
    private ga;
    get yAxisAnnotationPaddingRight(): number;
    set yAxisAnnotationPaddingRight(a: number);
    private f8;
    get yAxisAnnotationPaddingBottom(): number;
    set yAxisAnnotationPaddingBottom(a: number);
    private f6;
    get xAxisAnnotationStrokeThickness(): number;
    set xAxisAnnotationStrokeThickness(a: number);
    private g6;
    get yAxisAnnotationTextColor(): string;
    set yAxisAnnotationTextColor(a: string);
    private g3;
    get yAxisAnnotationBackground(): string;
    set yAxisAnnotationBackground(a: string);
    private f7;
    get yAxisAnnotationBackgroundCornerRadius(): number;
    set yAxisAnnotationBackgroundCornerRadius(a: number);
    private gq;
    get yAxisAnnotationInterpolatedValuePrecision(): number;
    set yAxisAnnotationInterpolatedValuePrecision(a: number);
    private g5;
    get yAxisAnnotationOutline(): string;
    set yAxisAnnotationOutline(a: string);
    private gc;
    get yAxisAnnotationStrokeThickness(): number;
    set yAxisAnnotationStrokeThickness(a: number);
    private gy;
    get verticalLineVisibility(): string;
    set verticalLineVisibility(a: string);
    private gu;
    get horizontalLineVisibility(): string;
    set horizontalLineVisibility(a: string);
    private fw;
    get skipUnknownValues(): boolean;
    set skipUnknownValues(a: boolean);
    private g0;
    get xAxisAnnotationFormatLabelRef(): string;
    set xAxisAnnotationFormatLabelRef(a: string);
    private g4;
    get yAxisAnnotationFormatLabelRef(): string;
    set yAxisAnnotationFormatLabelRef(a: string);
}
