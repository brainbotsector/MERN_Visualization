import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class DataToolTipLayerDescription extends AnnotationLayerDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private lg;
    get targetAxisRef(): string;
    set targetAxisRef(a: string);
    private ga;
    get useInterpolation(): boolean;
    set useInterpolation(a: boolean);
    private kd;
    get groupingMode(): string;
    set groupingMode(a: string);
    private j9;
    get actualGroupingMode(): string;
    set actualGroupingMode(a: string);
    private he;
    get positionOffsetX(): number;
    set positionOffsetX(a: number);
    private hf;
    get positionOffsetY(): number;
    set positionOffsetY(a: number);
    private gp;
    get defaultPositionOffsetX(): number;
    set defaultPositionOffsetX(a: number);
    private gq;
    get defaultPositionOffsetY(): number;
    set defaultPositionOffsetY(a: number);
    private kb;
    get groupedPositionModeX(): string;
    set groupedPositionModeX(a: string);
    private j7;
    get actualGroupedPositionModeX(): string;
    set actualGroupedPositionModeX(a: string);
    private kc;
    get groupedPositionModeY(): string;
    set groupedPositionModeY(a: string);
    private j8;
    get actualGroupedPositionModeY(): string;
    set actualGroupedPositionModeY(a: string);
    private f9;
    get shouldUpdateWhenSeriesDataChanges(): boolean;
    set shouldUpdateWhenSeriesDataChanges(a: boolean);
    private fz;
    get includedSeries(): string[];
    set includedSeries(a: string[]);
    private fw;
    get excludedSeries(): string[];
    set excludedSeries(a: string[]);
    private fy;
    get includedColumns(): string[];
    set includedColumns(a: string[]);
    private fv;
    get excludedColumns(): string[];
    set excludedColumns(a: string[]);
    private lr;
    get valueFormatAbbreviation(): string;
    set valueFormatAbbreviation(a: string);
    private j3;
    get valueFormatMaxFractions(): number;
    set valueFormatMaxFractions(a: number);
    private j4;
    get valueFormatMinFractions(): number;
    set valueFormatMinFractions(a: number);
    private lt;
    get valueFormatMode(): string;
    set valueFormatMode(a: string);
    private ls;
    get valueFormatCulture(): string;
    set valueFormatCulture(a: string);
    private gb;
    get valueFormatUseGrouping(): boolean;
    set valueFormatUseGrouping(a: boolean);
    private lu;
    get valueFormatString(): string;
    set valueFormatString(a: string);
    private f0;
    get valueFormatSpecifiers(): FormatSpecifierDescription[];
    set valueFormatSpecifiers(a: FormatSpecifierDescription[]);
    private h2;
    get valueRowMarginBottom(): number;
    set valueRowMarginBottom(a: number);
    private h3;
    get valueRowMarginLeft(): number;
    set valueRowMarginLeft(a: number);
    private h4;
    get valueRowMarginRight(): number;
    set valueRowMarginRight(a: number);
    private h5;
    get valueRowMarginTop(): number;
    set valueRowMarginTop(a: number);
    private gc;
    get valueRowVisible(): boolean;
    set valueRowVisible(a: boolean);
    private lz;
    get valueTextWhenMissingData(): string;
    set valueTextWhenMissingData(a: string);
    private gd;
    get valueTextUseSeriesColors(): boolean;
    set valueTextUseSeriesColors(a: boolean);
    private h7;
    get valueTextMarginBottom(): number;
    set valueTextMarginBottom(a: number);
    private h8;
    get valueTextMarginLeft(): number;
    set valueTextMarginLeft(a: number);
    private h9;
    get valueTextMarginRight(): number;
    set valueTextMarginRight(a: number);
    private ia;
    get valueTextMarginTop(): number;
    set valueTextMarginTop(a: number);
    private lv;
    get valueTextColor(): string;
    set valueTextColor(a: string);
    private lw;
    get valueTextFontFamily(): string;
    set valueTextFontFamily(a: string);
    private h6;
    get valueTextFontSize(): number;
    set valueTextFontSize(a: number);
    private lx;
    get valueTextFontStyle(): string;
    set valueTextFontStyle(a: string);
    private ly;
    get valueTextFontWeight(): string;
    set valueTextFontWeight(a: string);
    private kk;
    get headerFormatString(): string;
    set headerFormatString(a: string);
    private fx;
    get headerFormatSpecifiers(): FormatSpecifierDescription[];
    set headerFormatSpecifiers(a: FormatSpecifierDescription[]);
    private ki;
    get headerFormatCulture(): string;
    set headerFormatCulture(a: string);
    private kj;
    get headerFormatDate(): string;
    set headerFormatDate(a: string);
    private kl;
    get headerFormatTime(): string;
    set headerFormatTime(a: string);
    private km;
    get headerText(): string;
    set headerText(a: string);
    private kn;
    get headerTextColor(): string;
    set headerTextColor(a: string);
    private g5;
    get headerTextMarginBottom(): number;
    set headerTextMarginBottom(a: number);
    private g6;
    get headerTextMarginLeft(): number;
    set headerTextMarginLeft(a: number);
    private g7;
    get headerTextMarginRight(): number;
    set headerTextMarginRight(a: number);
    private g8;
    get headerTextMarginTop(): number;
    set headerTextMarginTop(a: number);
    private g0;
    get headerRowMarginBottom(): number;
    set headerRowMarginBottom(a: number);
    private g1;
    get headerRowMarginLeft(): number;
    set headerRowMarginLeft(a: number);
    private g2;
    get headerRowMarginRight(): number;
    set headerRowMarginRight(a: number);
    private g3;
    get headerRowMarginTop(): number;
    set headerRowMarginTop(a: number);
    private f8;
    get headerRowVisible(): boolean;
    set headerRowVisible(a: boolean);
    private ko;
    get headerTextFontFamily(): string;
    set headerTextFontFamily(a: string);
    private g4;
    get headerTextFontSize(): number;
    set headerTextFontSize(a: number);
    private kp;
    get headerTextFontStyle(): string;
    set headerTextFontStyle(a: string);
    private kq;
    get headerTextFontWeight(): string;
    set headerTextFontWeight(a: string);
    private f7;
    get groupRowVisible(): boolean;
    set groupRowVisible(a: boolean);
    private ke;
    get groupTextColor(): string;
    set groupTextColor(a: string);
    private gw;
    get groupTextMarginBottom(): number;
    set groupTextMarginBottom(a: number);
    private gx;
    get groupTextMarginLeft(): number;
    set groupTextMarginLeft(a: number);
    private gy;
    get groupTextMarginRight(): number;
    set groupTextMarginRight(a: number);
    private gz;
    get groupTextMarginTop(): number;
    set groupTextMarginTop(a: number);
    private gr;
    get groupRowMarginBottom(): number;
    set groupRowMarginBottom(a: number);
    private gs;
    get groupRowMarginLeft(): number;
    set groupRowMarginLeft(a: number);
    private gt;
    get groupRowMarginRight(): number;
    set groupRowMarginRight(a: number);
    private gu;
    get groupRowMarginTop(): number;
    set groupRowMarginTop(a: number);
    private kf;
    get groupTextFontFamily(): string;
    set groupTextFontFamily(a: string);
    private gv;
    get groupTextFontSize(): number;
    set groupTextFontSize(a: number);
    private kg;
    get groupTextFontStyle(): string;
    set groupTextFontStyle(a: string);
    private kh;
    get groupTextFontWeight(): string;
    set groupTextFontWeight(a: string);
    private k2;
    get summaryTitleTextColor(): string;
    set summaryTitleTextColor(a: string);
    private k3;
    get summaryTitleTextFontFamily(): string;
    set summaryTitleTextFontFamily(a: string);
    private hl;
    get summaryTitleTextFontSize(): number;
    set summaryTitleTextFontSize(a: number);
    private k4;
    get summaryTitleTextFontStyle(): string;
    set summaryTitleTextFontStyle(a: string);
    private k5;
    get summaryTitleTextFontWeight(): string;
    set summaryTitleTextFontWeight(a: string);
    private k6;
    get summaryType(): string;
    set summaryType(a: string);
    private k1;
    get summaryTitleText(): string;
    set summaryTitleText(a: string);
    private hm;
    get summaryTitleTextMarginBottom(): number;
    set summaryTitleTextMarginBottom(a: number);
    private hn;
    get summaryTitleTextMarginLeft(): number;
    set summaryTitleTextMarginLeft(a: number);
    private ho;
    get summaryTitleTextMarginRight(): number;
    set summaryTitleTextMarginRight(a: number);
    private hp;
    get summaryTitleTextMarginTop(): number;
    set summaryTitleTextMarginTop(a: number);
    private hh;
    get summaryRowMarginBottom(): number;
    set summaryRowMarginBottom(a: number);
    private hi;
    get summaryRowMarginLeft(): number;
    set summaryRowMarginLeft(a: number);
    private hj;
    get summaryRowMarginRight(): number;
    set summaryRowMarginRight(a: number);
    private hk;
    get summaryRowMarginTop(): number;
    set summaryRowMarginTop(a: number);
    private lc;
    get summaryValueTextColor(): string;
    set summaryValueTextColor(a: string);
    private ld;
    get summaryValueTextFontFamily(): string;
    set summaryValueTextFontFamily(a: string);
    private hr;
    get summaryValueTextFontSize(): number;
    set summaryValueTextFontSize(a: number);
    private le;
    get summaryValueTextFontStyle(): string;
    set summaryValueTextFontStyle(a: string);
    private lf;
    get summaryValueTextFontWeight(): string;
    set summaryValueTextFontWeight(a: string);
    private kw;
    get summaryLabelText(): string;
    set summaryLabelText(a: string);
    private kx;
    get summaryLabelTextColor(): string;
    set summaryLabelTextColor(a: string);
    private ky;
    get summaryLabelTextFontFamily(): string;
    set summaryLabelTextFontFamily(a: string);
    private hg;
    get summaryLabelTextFontSize(): number;
    set summaryLabelTextFontSize(a: number);
    private kz;
    get summaryLabelTextFontStyle(): string;
    set summaryLabelTextFontStyle(a: string);
    private k0;
    get summaryLabelTextFontWeight(): string;
    set summaryLabelTextFontWeight(a: string);
    private k7;
    get summaryUnitsText(): string;
    set summaryUnitsText(a: string);
    private k8;
    get summaryUnitsTextColor(): string;
    set summaryUnitsTextColor(a: string);
    private k9;
    get summaryUnitsTextFontFamily(): string;
    set summaryUnitsTextFontFamily(a: string);
    private hq;
    get summaryUnitsTextFontSize(): number;
    set summaryUnitsTextFontSize(a: number);
    private la;
    get summaryUnitsTextFontStyle(): string;
    set summaryUnitsTextFontStyle(a: string);
    private lb;
    get summaryUnitsTextFontWeight(): string;
    set summaryUnitsTextFontWeight(a: string);
    private gl;
    get badgeMarginBottom(): number;
    set badgeMarginBottom(a: number);
    private gm;
    get badgeMarginLeft(): number;
    set badgeMarginLeft(a: number);
    private gn;
    get badgeMarginRight(): number;
    set badgeMarginRight(a: number);
    private go;
    get badgeMarginTop(): number;
    set badgeMarginTop(a: number);
    private ka;
    get badgeShape(): string;
    set badgeShape(a: string);
    private ll;
    get unitsDisplayMode(): string;
    set unitsDisplayMode(a: string);
    private lm;
    get unitsText(): string;
    set unitsText(a: string);
    private ln;
    get unitsTextColor(): string;
    set unitsTextColor(a: string);
    private hy;
    get unitsTextMarginBottom(): number;
    set unitsTextMarginBottom(a: number);
    private hz;
    get unitsTextMarginLeft(): number;
    set unitsTextMarginLeft(a: number);
    private h0;
    get unitsTextMarginRight(): number;
    set unitsTextMarginRight(a: number);
    private h1;
    get unitsTextMarginTop(): number;
    set unitsTextMarginTop(a: number);
    private lo;
    get unitsTextFontFamily(): string;
    set unitsTextFontFamily(a: string);
    private hx;
    get unitsTextFontSize(): number;
    set unitsTextFontSize(a: number);
    private lp;
    get unitsTextFontStyle(): string;
    set unitsTextFontStyle(a: string);
    private lq;
    get unitsTextFontWeight(): string;
    set unitsTextFontWeight(a: string);
    private ht;
    get titleTextMarginBottom(): number;
    set titleTextMarginBottom(a: number);
    private hu;
    get titleTextMarginLeft(): number;
    set titleTextMarginLeft(a: number);
    private hv;
    get titleTextMarginRight(): number;
    set titleTextMarginRight(a: number);
    private hw;
    get titleTextMarginTop(): number;
    set titleTextMarginTop(a: number);
    private lh;
    get titleTextColor(): string;
    set titleTextColor(a: string);
    private li;
    get titleTextFontFamily(): string;
    set titleTextFontFamily(a: string);
    private hs;
    get titleTextFontSize(): number;
    set titleTextFontSize(a: number);
    private lj;
    get titleTextFontStyle(): string;
    set titleTextFontStyle(a: string);
    private lk;
    get titleTextFontWeight(): string;
    set titleTextFontWeight(a: string);
    private kr;
    get labelDisplayMode(): string;
    set labelDisplayMode(a: string);
    private ks;
    get labelTextColor(): string;
    set labelTextColor(a: string);
    private ha;
    get labelTextMarginBottom(): number;
    set labelTextMarginBottom(a: number);
    private hb;
    get labelTextMarginLeft(): number;
    set labelTextMarginLeft(a: number);
    private hc;
    get labelTextMarginRight(): number;
    set labelTextMarginRight(a: number);
    private hd;
    get labelTextMarginTop(): number;
    set labelTextMarginTop(a: number);
    private kt;
    get labelTextFontFamily(): string;
    set labelTextFontFamily(a: string);
    private g9;
    get labelTextFontSize(): number;
    set labelTextFontSize(a: number);
    private ku;
    get labelTextFontStyle(): string;
    set labelTextFontStyle(a: string);
    private kv;
    get labelTextFontWeight(): string;
    set labelTextFontWeight(a: string);
}
