import { SeriesDescription } from "./SeriesDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class FinancialSeriesDescription extends SeriesDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private e2;
    get negativeBrush(): string;
    set negativeBrush(a: string);
    private e8;
    get xAxisRef(): string;
    set xAxisRef(a: string);
    private e9;
    get yAxisRef(): string;
    set yAxisRef(a: string);
    private e3;
    get openMemberPath(): string;
    set openMemberPath(a: string);
    private e0;
    get highMemberPath(): string;
    set highMemberPath(a: string);
    private e1;
    get lowMemberPath(): string;
    set lowMemberPath(a: string);
    private eu;
    get closeMemberPath(): string;
    set closeMemberPath(a: string);
    private e7;
    get volumeMemberPath(): string;
    set volumeMemberPath(a: string);
    private ey;
    get highlightedOpenMemberPath(): string;
    set highlightedOpenMemberPath(a: string);
    private ew;
    get highlightedHighMemberPath(): string;
    set highlightedHighMemberPath(a: string);
    private ex;
    get highlightedLowMemberPath(): string;
    set highlightedLowMemberPath(a: string);
    private ev;
    get highlightedCloseMemberPath(): string;
    set highlightedCloseMemberPath(a: string);
    private ez;
    get highlightedVolumeMemberPath(): string;
    set highlightedVolumeMemberPath(a: string);
    private ep;
    get isCustomCategoryStyleAllowed(): boolean;
    set isCustomCategoryStyleAllowed(a: boolean);
    private e4;
    get transitionInMode(): string;
    set transitionInMode(a: string);
    private eq;
    get isTransitionInEnabled(): boolean;
    set isTransitionInEnabled(a: boolean);
    private et;
    get assigningCategoryStyleRef(): string;
    set assigningCategoryStyleRef(a: string);
    private e5;
    get typicalRef(): string;
    set typicalRef(a: string);
    private e6;
    get typicalBasedOnRef(): string;
    set typicalBasedOnRef(a: string);
}
