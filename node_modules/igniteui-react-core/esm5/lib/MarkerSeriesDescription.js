/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var MarkerSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MarkerSeriesDescription, _super);
    function MarkerSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.e0 = null;
        _this.eu = null;
        _this.ey = null;
        _this.ew = null;
        _this.ez = null;
        _this.ep = 0;
        _this.et = null;
        _this.ev = null;
        _this.er = null;
        _this.ex = null;
        _this.es = null;
        return _this;
    }
    MarkerSeriesDescription.prototype.get_type = function () {
        return "MarkerSeries";
    };
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.g("MarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerType", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.g("ActualMarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerOutlineMode", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.g("MarkerOutlineMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerFillMode", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.g("MarkerFillMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.g("MarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("MarkerThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerTemplateRef", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("ActualMarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.g("MarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerBrush", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("ActualMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.g("MarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerOutline", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("ActualMarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    MarkerSeriesDescription.$t = markType(MarkerSeriesDescription, 'MarkerSeriesDescription', SeriesDescription.$);
    return MarkerSeriesDescription;
}(SeriesDescription));
export { MarkerSeriesDescription };
