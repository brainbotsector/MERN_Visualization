/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ScatterBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterBaseDescription, _super);
    function ScatterBaseDescription() {
        var _this = _super.call(this) || this;
        _this.f1 = null;
        _this.f5 = null;
        _this.f4 = null;
        _this.f8 = null;
        _this.fv = null;
        _this.fw = null;
        _this.f2 = null;
        _this.f6 = null;
        _this.f3 = null;
        _this.f7 = null;
        _this.f0 = null;
        _this.fz = null;
        _this.fs = null;
        _this.fh = 0;
        _this.fb = null;
        _this.fl = 0;
        _this.fy = null;
        _this.fm = 0;
        _this.fk = 0;
        _this.fx = null;
        _this.fj = 0;
        _this.fr = null;
        _this.fe = false;
        _this.fd = false;
        _this.fu = null;
        _this.ft = null;
        return _this;
    }
    ScatterBaseDescription.prototype.get_type = function () {
        return "ScatterBase";
    };
    Object.defineProperty(ScatterBaseDescription.prototype, "xAxisRef", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.g("XAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yAxisRef", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.g("YAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberPath", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.g("XMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberPath", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            this.f8 = a;
            this.g("YMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "highlightedXMemberPath", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.g("HighlightedXMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "highlightedYMemberPath", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.g("HighlightedYMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberAsLegendLabel", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.g("XMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberAsLegendLabel", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.g("YMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "xMemberAsLegendUnit", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.g("XMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "yMemberAsLegendUnit", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.g("YMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineType", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            this.f0 = a;
            this.g("TrendLineType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineBrush", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.g("TrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "actualTrendLineBrush", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.g("ActualTrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineThickness", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.g("TrendLineThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineDashArray", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.g("TrendLineDashArray");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLinePeriod", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("TrendLinePeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            this.fy = a;
            this.g("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "trendLineZIndex", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.g("TrendLineZIndex");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "maximumMarkers", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.g("MaximumMarkers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.g("ItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.g("ItemSearchThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "actualItemSearchMode", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.g("ActualItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "isCustomScatterStyleAllowed", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.g("IsCustomScatterStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "isCustomScatterMarkerStyleAllowed", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.g("IsCustomScatterMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "assigningScatterStyleRef", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("AssigningScatterStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScatterBaseDescription.prototype, "assigningScatterMarkerStyleRef", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("AssigningScatterMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    ScatterBaseDescription.$t = markType(ScatterBaseDescription, 'ScatterBaseDescription', MarkerSeriesDescription.$);
    return ScatterBaseDescription;
}(MarkerSeriesDescription));
export { ScatterBaseDescription };
