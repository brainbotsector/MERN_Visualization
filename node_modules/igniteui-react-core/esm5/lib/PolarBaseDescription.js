/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var PolarBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarBaseDescription, _super);
    function PolarBaseDescription() {
        var _this = _super.call(this) || this;
        _this.f0 = null;
        _this.f9 = null;
        _this.f4 = null;
        _this.f3 = null;
        _this.fx = null;
        _this.f6 = null;
        _this.fg = false;
        _this.fo = 0;
        _this.gb = null;
        _this.ga = null;
        _this.fw = null;
        _this.fl = 0;
        _this.fb = null;
        _this.fp = 0;
        _this.fq = 0;
        _this.fd = false;
        _this.fv = null;
        _this.f5 = null;
        _this.fn = 0;
        _this.ff = false;
        _this.fe = false;
        _this.f7 = null;
        _this.fy = null;
        _this.f8 = null;
        _this.fz = null;
        _this.f2 = null;
        _this.f1 = null;
        return _this;
    }
    PolarBaseDescription.prototype.get_type = function () {
        return "PolarBase";
    };
    Object.defineProperty(PolarBaseDescription.prototype, "angleMemberPath", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            this.f0 = a;
            this.g("AngleMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "radiusMemberPath", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            this.f9 = a;
            this.g("RadiusMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "highlightedRadiusMemberPath", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.g("HighlightedRadiusMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "highlightedAngleMemberPath", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.g("HighlightedAngleMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "angleAxisRef", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.g("AngleAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "radiusAxisRef", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.g("RadiusAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "useCartesianInterpolation", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.g("UseCartesianInterpolation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "maximumMarkers", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.g("MaximumMarkers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineType", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            this.gb = a;
            this.g("TrendLineType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineBrush", {
        get: function () {
            return this.ga;
        },
        set: function (a) {
            this.ga = a;
            this.g("TrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "actualTrendLineBrush", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.g("ActualTrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineThickness", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("TrendLineThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineDashArray", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.g("TrendLineDashArray");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLinePeriod", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.g("TrendLinePeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineZIndex", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.g("TrendLineZIndex");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "clipSeriesToBounds", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.g("ClipSeriesToBounds");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "actualItemSearchMode", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.g("ActualItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.g("ItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.g("ItemSearchThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "isCustomPolarStyleAllowed", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.g("IsCustomPolarStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "isCustomPolarMarkerStyleAllowed", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.g("IsCustomPolarMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "radiusMemberAsLegendLabel", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.g("RadiusMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "angleMemberAsLegendLabel", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            this.fy = a;
            this.g("AngleMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "radiusMemberAsLegendUnit", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            this.f8 = a;
            this.g("RadiusMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "angleMemberAsLegendUnit", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.g("AngleMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "assigningPolarStyleRef", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.g("AssigningPolarStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "assigningPolarMarkerStyleRef", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.g("AssigningPolarMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    PolarBaseDescription.$t = markType(PolarBaseDescription, 'PolarBaseDescription', MarkerSeriesDescription.$);
    return PolarBaseDescription;
}(MarkerSeriesDescription));
export { PolarBaseDescription };
