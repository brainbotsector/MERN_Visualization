/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ValueOverlayDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ValueOverlayDescription, _super);
    function ValueOverlayDescription() {
        var _this = _super.call(this) || this;
        _this.fb = null;
        _this.ex = 0;
        _this.ep = false;
        _this.e8 = null;
        _this.fa = null;
        _this.e7 = null;
        _this.er = 0;
        _this.e5 = 0;
        _this.e9 = null;
        _this.et = 0;
        _this.ev = 0;
        _this.eu = 0;
        _this.es = 0;
        _this.ew = 0;
        return _this;
    }
    ValueOverlayDescription.prototype.get_type = function () {
        return "ValueOverlay";
    };
    Object.defineProperty(ValueOverlayDescription.prototype, "axisRef", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.g("AxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "value", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "isAxisAnnotationEnabled", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("IsAxisAnnotationEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationFormatLabelRef", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.g("AxisAnnotationFormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationTextColor", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.g("AxisAnnotationTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationBackground", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.g("AxisAnnotationBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationBackgroundCornerRadius", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("AxisAnnotationBackgroundCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.g("AxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationOutline", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.g("AxisAnnotationOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingLeft", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("AxisAnnotationPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingTop", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.g("AxisAnnotationPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingRight", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.g("AxisAnnotationPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingBottom", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("AxisAnnotationPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationStrokeThickness", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.g("AxisAnnotationStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    ValueOverlayDescription.$t = markType(ValueOverlayDescription, 'ValueOverlayDescription', SeriesDescription.$);
    return ValueOverlayDescription;
}(SeriesDescription));
export { ValueOverlayDescription };
