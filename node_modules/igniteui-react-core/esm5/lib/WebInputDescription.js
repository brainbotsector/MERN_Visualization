/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebInputBaseDescription } from "./WebInputBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebInputDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebInputDescription, _super);
    function WebInputDescription() {
        var _this = _super.call(this) || this;
        _this.a3 = null;
        _this.ay = null;
        _this.az = null;
        _this.a2 = null;
        _this.ap = 0;
        _this.ao = 0;
        _this.an = 0;
        _this.am = 0;
        _this.a1 = null;
        _this.a0 = null;
        _this.aq = 0;
        _this.ai = false;
        _this.aw = null;
        _this.aj = false;
        _this.ax = null;
        return _this;
    }
    WebInputDescription.prototype.get_type = function () {
        return "WebInput";
    };
    Object.defineProperty(WebInputDescription.prototype, "value", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "displayType", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("DisplayType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "inputmode", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("Inputmode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "pattern", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("Pattern");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "minLength", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("MinLength");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "minlength", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("Minlength");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "maxLength", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("MaxLength");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "maxlength", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("Maxlength");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "min", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("Min");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "max", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("Max");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "step", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("Step");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "autofocus", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("Autofocus");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "autocomplete", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("Autocomplete");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "validateOnly", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("ValidateOnly");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebInputDescription.prototype, "changeRef", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("ChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    WebInputDescription.$t = markType(WebInputDescription, 'WebInputDescription', WebInputBaseDescription.$);
    return WebInputDescription;
}(WebInputBaseDescription));
export { WebInputDescription };
