/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolActionDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionDescription, _super);
    function ToolActionDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.al = 0;
        _this.bw = null;
        _this.bg = null;
        _this.be = null;
        _this.bv = null;
        _this.bi = null;
        _this.bh = null;
        _this.a5 = null;
        _this.ai = 0;
        _this.w = 0;
        _this.aj = 0;
        _this.x = 0;
        _this.ah = 0;
        _this.v = 0;
        _this.ak = 0;
        _this.y = 0;
        _this.ba = null;
        _this.bo = null;
        _this.a7 = null;
        _this.bf = null;
        _this.bd = null;
        _this.bz = null;
        _this.a8 = null;
        _this.bj = null;
        _this.bk = null;
        _this.z = 0;
        _this.bl = null;
        _this.bm = null;
        _this.o = false;
        _this.p = false;
        _this.bt = null;
        _this.b0 = null;
        _this.by = null;
        _this.br = null;
        _this.bp = null;
        _this.ae = 0;
        _this.af = 0;
        _this.ag = 0;
        _this.ad = 0;
        _this.bq = null;
        _this.bb = null;
        _this.i = null;
        _this.bs = null;
        _this.bc = null;
        _this.j = null;
        _this.ac = 0;
        _this.b1 = null;
        _this.n = false;
        _this.ab = 0;
        _this.u = 0;
        _this.aa = 0;
        _this.t = 0;
        _this.bn = null;
        _this.a9 = null;
        _this.bu = null;
        _this.bx = null;
        return _this;
    }
    ToolActionDescription.prototype.get_type = function () {
        return "ToolAction";
    };
    Object.defineProperty(ToolActionDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actions", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Actions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "width", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "parentId", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("ParentId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "beforeId", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("BeforeId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "afterId", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("AfterId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "overlayId", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("OverlayId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandId", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("CommandId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandArgument", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("CommandArgument");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandArgumentValue", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("CommandArgumentValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingLeft", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("PaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingLeft", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("ActualPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingRight", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("PaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingRight", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("ActualPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingBottom", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("PaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingBottom", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("ActualPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingTop", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("PaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingTop", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("ActualPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHoverBackground", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("ActualHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "hoverBackground", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("HoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualBackground", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("ActualBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "background", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualTextColor", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("ActualTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "textColor", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualDisabledTextColor", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("ActualDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("DisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontFamily", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontSize", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontStyle", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontWeight", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "isDisabled", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("IsDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "isHighlighted", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("IsHighlighted");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "name", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "title", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("Title");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "subtitle", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("Subtitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconName", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("IconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconCollectionName", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("IconCollectionName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxLeft", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("IconViewBoxLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxTop", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("IconViewBoxTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxWidth", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("IconViewBoxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxHeight", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("IconViewBoxHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconFill", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("IconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualIconFill", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("ActualIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconFillColors", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("IconFillColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconStroke", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("IconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualIconStroke", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("ActualIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconStrokeColors", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("IconStrokeColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconStrokeWidth", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("IconStrokeWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "visibility", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("Visibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "closeOnExecute", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("CloseOnExecute");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "highlightWidth", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("HighlightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHighlightWidth", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("ActualHighlightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "highlightRadius", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("HighlightRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHighlightRadius", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("ActualHighlightRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "highlightColor", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("HighlightColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHighlightColor", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("ActualHighlightColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "onCommandRef", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("OnCommandRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "performedRef", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("PerformedRef");
        },
        enumerable: false,
        configurable: true
    });
    ToolActionDescription.$t = markType(ToolActionDescription, 'ToolActionDescription', Description.$);
    return ToolActionDescription;
}(Description));
export { ToolActionDescription };
