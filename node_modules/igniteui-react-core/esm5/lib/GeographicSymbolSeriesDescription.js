/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { GeographicMarkerSeriesDescription } from "./GeographicMarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var GeographicSymbolSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GeographicSymbolSeriesDescription, _super);
    function GeographicSymbolSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.fo = null;
        _this.fp = null;
        _this.fq = null;
        _this.fg = false;
        _this.ff = false;
        _this.fn = null;
        _this.fj = 0;
        _this.fm = null;
        _this.fl = null;
        return _this;
    }
    GeographicSymbolSeriesDescription.prototype.get_type = function () {
        return "GeographicSymbolSeries";
    };
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "latitudeMemberPath", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.g("LatitudeMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "longitudeMemberPath", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.g("LongitudeMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.g("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "isCustomScatterStyleAllowed", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.g("IsCustomScatterStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "isCustomScatterMarkerStyleAllowed", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.g("IsCustomScatterMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.g("ItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.g("ItemSearchThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "assigningScatterStyleRef", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.g("AssigningScatterStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "assigningScatterMarkerStyleRef", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("AssigningScatterMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    GeographicSymbolSeriesDescription.$t = markType(GeographicSymbolSeriesDescription, 'GeographicSymbolSeriesDescription', GeographicMarkerSeriesDescription.$);
    return GeographicSymbolSeriesDescription;
}(GeographicMarkerSeriesDescription));
export { GeographicSymbolSeriesDescription };
