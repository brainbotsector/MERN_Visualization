/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategoryChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryChartDescription, _super);
    function CategoryChartDescription() {
        var _this = _super.call(this) || this;
        _this.wy = null;
        _this.w3 = null;
        _this.ww = null;
        _this.wu = null;
        _this.wn = 0;
        _this.wo = 0;
        _this.wz = null;
        _this.w2 = null;
        _this.wv = null;
        _this.wx = null;
        _this.u5 = false;
        _this.u6 = false;
        _this.w0 = null;
        _this.w1 = null;
        _this.vs = 0;
        _this.vv = 0;
        _this.vr = 0;
        _this.vu = 0;
        _this.vt = 0;
        _this.vw = 0;
        _this.v2 = 0;
        _this.wt = null;
        _this.u7 = false;
        _this.u8 = false;
        _this.vp = 0;
        _this.vq = 0;
        _this.vc = false;
        _this.u9 = false;
        _this.vb = false;
        _this.w4 = null;
        _this.vd = false;
        _this.wp = 0;
        _this.v4 = 0;
        _this.v3 = 0;
        _this.v5 = 0;
        _this.uz = null;
        _this.u0 = null;
        _this.va = false;
        _this.vx = 0;
        _this.vy = 0;
        _this.vz = 0;
        _this.v0 = 0;
        _this.v1 = 0;
        _this.u3 = false;
        _this.u4 = false;
        return _this;
    }
    Object.defineProperty(CategoryChartDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.wy;
        },
        set: function (a) {
            this.wy = a;
            this.g("TooltipTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "width", {
        get: function () {
            return this.w3;
        },
        set: function (a) {
            this.w3 = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "height", {
        get: function () {
            return this.ww;
        },
        set: function (a) {
            this.ww = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "background", {
        get: function () {
            return this.wu;
        },
        set: function (a) {
            this.wu = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    CategoryChartDescription.prototype.get_type = function () {
        return "CategoryChart";
    };
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInDuration", {
        get: function () {
            return this.wn;
        },
        set: function (a) {
            this.wn = a;
            this.g("TransitionInDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionOutDuration", {
        get: function () {
            return this.wo;
        },
        set: function (a) {
            this.wo = a;
            this.g("TransitionOutDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInEasingFunctionRef", {
        get: function () {
            return this.wz;
        },
        set: function (a) {
            this.wz = a;
            this.g("TransitionInEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionOutEasingFunctionRef", {
        get: function () {
            return this.w2;
        },
        set: function (a) {
            this.w2 = a;
            this.g("TransitionOutEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "chartType", {
        get: function () {
            return this.wv;
        },
        set: function (a) {
            this.wv = a;
            this.g("ChartType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.wx;
        },
        set: function (a) {
            this.wx = a;
            this.g("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isSplineShapePartOfRange", {
        get: function () {
            return this.u5;
        },
        set: function (a) {
            this.u5 = a;
            this.g("IsSplineShapePartOfRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isTransitionInEnabled", {
        get: function () {
            return this.u6;
        },
        set: function (a) {
            this.u6 = a;
            this.g("IsTransitionInEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInMode", {
        get: function () {
            return this.w0;
        },
        set: function (a) {
            this.w0 = a;
            this.g("TransitionInMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInSpeedType", {
        get: function () {
            return this.w1;
        },
        set: function (a) {
            this.w1 = a;
            this.g("TransitionInSpeedType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisInterval", {
        get: function () {
            return this.vs;
        },
        set: function (a) {
            this.vs = a;
            this.g("XAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMinorInterval", {
        get: function () {
            return this.vv;
        },
        set: function (a) {
            this.vv = a;
            this.g("XAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisGap", {
        get: function () {
            return this.vr;
        },
        set: function (a) {
            this.vr = a;
            this.g("XAxisGap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMinimumGapSize", {
        get: function () {
            return this.vu;
        },
        set: function (a) {
            this.vu = a;
            this.g("XAxisMinimumGapSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMaximumGap", {
        get: function () {
            return this.vt;
        },
        set: function (a) {
            this.vt = a;
            this.g("XAxisMaximumGap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisOverlap", {
        get: function () {
            return this.vw;
        },
        set: function (a) {
            this.vw = a;
            this.g("XAxisOverlap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.v2;
        },
        set: function (a) {
            this.v2 = a;
            this.g("YAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoMarginAndAngleUpdateMode", {
        get: function () {
            return this.wt;
        },
        set: function (a) {
            this.wt = a;
            this.g("AutoMarginAndAngleUpdateMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "shouldAutoExpandMarginForInitialLabels", {
        get: function () {
            return this.u7;
        },
        set: function (a) {
            this.u7 = a;
            this.g("ShouldAutoExpandMarginForInitialLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "shouldConsiderAutoRotationForInitialLabels", {
        get: function () {
            return this.u8;
        },
        set: function (a) {
            this.u8 = a;
            this.g("ShouldConsiderAutoRotationForInitialLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoExpandMarginExtraPadding", {
        get: function () {
            return this.vp;
        },
        set: function (a) {
            this.vp = a;
            this.g("AutoExpandMarginExtraPadding");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoExpandMarginMaximumValue", {
        get: function () {
            return this.vq;
        },
        set: function (a) {
            this.vq = a;
            this.g("AutoExpandMarginMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisFavorLabellingScaleEnd", {
        get: function () {
            return this.vc;
        },
        set: function (a) {
            this.vc = a;
            this.g("YAxisFavorLabellingScaleEnd");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.u9;
        },
        set: function (a) {
            this.u9 = a;
            this.g("XAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.vb;
        },
        set: function (a) {
            this.vb = a;
            this.g("YAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisAutoRangeBufferMode", {
        get: function () {
            return this.w4;
        },
        set: function (a) {
            this.w4 = a;
            this.g("YAxisAutoRangeBufferMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.vd;
        },
        set: function (a) {
            this.vd = a;
            this.g("YAxisIsLogarithmic");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.wp;
        },
        set: function (a) {
            this.wp = a;
            this.g("YAxisLogarithmBase");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.v4;
        },
        set: function (a) {
            this.v4 = a;
            this.g("YAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.v3;
        },
        set: function (a) {
            this.v3 = a;
            this.g("YAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.v5;
        },
        set: function (a) {
            this.v5 = a;
            this.g("YAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.uz;
        },
        set: function (a) {
            this.uz = a;
            this.g("NegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.u0;
        },
        set: function (a) {
            this.u0 = a;
            this.g("NegativeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.va;
        },
        set: function (a) {
            this.va = a;
            this.g("YAxisAbbreviateLargeNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomMaximumCategoryRange", {
        get: function () {
            return this.vx;
        },
        set: function (a) {
            this.vx = a;
            this.g("XAxisZoomMaximumCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomMaximumItemSpan", {
        get: function () {
            return this.vy;
        },
        set: function (a) {
            this.vy = a;
            this.g("XAxisZoomMaximumItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToCategoryRange", {
        get: function () {
            return this.vz;
        },
        set: function (a) {
            this.vz = a;
            this.g("XAxisZoomToCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToCategoryStart", {
        get: function () {
            return this.v0;
        },
        set: function (a) {
            this.v0 = a;
            this.g("XAxisZoomToCategoryStart");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToItemSpan", {
        get: function () {
            return this.v1;
        },
        set: function (a) {
            this.v1 = a;
            this.g("XAxisZoomToItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isCategoryHighlightingEnabled", {
        get: function () {
            return this.u3;
        },
        set: function (a) {
            this.u3 = a;
            this.g("IsCategoryHighlightingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isItemHighlightingEnabled", {
        get: function () {
            return this.u4;
        },
        set: function (a) {
            this.u4 = a;
            this.g("IsItemHighlightingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    CategoryChartDescription.$t = markType(CategoryChartDescription, 'CategoryChartDescription', XYChartDescription.$);
    return CategoryChartDescription;
}(XYChartDescription));
export { CategoryChartDescription };
