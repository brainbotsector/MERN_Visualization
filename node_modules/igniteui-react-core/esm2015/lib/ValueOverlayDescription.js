/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ValueOverlayDescription = /*@__PURE__*/ (() => {
    class ValueOverlayDescription extends SeriesDescription {
        get_type() {
            return "ValueOverlay";
        }
        constructor() {
            super();
            this.fb = null;
            this.ex = 0;
            this.ep = false;
            this.e8 = null;
            this.fa = null;
            this.e7 = null;
            this.er = 0;
            this.e5 = 0;
            this.e9 = null;
            this.et = 0;
            this.ev = 0;
            this.eu = 0;
            this.es = 0;
            this.ew = 0;
        }
        get axisRef() {
            return this.fb;
        }
        set axisRef(a) {
            this.fb = a;
            this.g("AxisRef");
        }
        get value() {
            return this.ex;
        }
        set value(a) {
            this.ex = a;
            this.g("Value");
        }
        get isAxisAnnotationEnabled() {
            return this.ep;
        }
        set isAxisAnnotationEnabled(a) {
            this.ep = a;
            this.g("IsAxisAnnotationEnabled");
        }
        get axisAnnotationFormatLabelRef() {
            return this.e8;
        }
        set axisAnnotationFormatLabelRef(a) {
            this.e8 = a;
            this.g("AxisAnnotationFormatLabelRef");
        }
        get axisAnnotationTextColor() {
            return this.fa;
        }
        set axisAnnotationTextColor(a) {
            this.fa = a;
            this.g("AxisAnnotationTextColor");
        }
        get axisAnnotationBackground() {
            return this.e7;
        }
        set axisAnnotationBackground(a) {
            this.e7 = a;
            this.g("AxisAnnotationBackground");
        }
        get axisAnnotationBackgroundCornerRadius() {
            return this.er;
        }
        set axisAnnotationBackgroundCornerRadius(a) {
            this.er = a;
            this.g("AxisAnnotationBackgroundCornerRadius");
        }
        get axisAnnotationInterpolatedValuePrecision() {
            return this.e5;
        }
        set axisAnnotationInterpolatedValuePrecision(a) {
            this.e5 = a;
            this.g("AxisAnnotationInterpolatedValuePrecision");
        }
        get axisAnnotationOutline() {
            return this.e9;
        }
        set axisAnnotationOutline(a) {
            this.e9 = a;
            this.g("AxisAnnotationOutline");
        }
        get axisAnnotationPaddingLeft() {
            return this.et;
        }
        set axisAnnotationPaddingLeft(a) {
            this.et = a;
            this.g("AxisAnnotationPaddingLeft");
        }
        get axisAnnotationPaddingTop() {
            return this.ev;
        }
        set axisAnnotationPaddingTop(a) {
            this.ev = a;
            this.g("AxisAnnotationPaddingTop");
        }
        get axisAnnotationPaddingRight() {
            return this.eu;
        }
        set axisAnnotationPaddingRight(a) {
            this.eu = a;
            this.g("AxisAnnotationPaddingRight");
        }
        get axisAnnotationPaddingBottom() {
            return this.es;
        }
        set axisAnnotationPaddingBottom(a) {
            this.es = a;
            this.g("AxisAnnotationPaddingBottom");
        }
        get axisAnnotationStrokeThickness() {
            return this.ew;
        }
        set axisAnnotationStrokeThickness(a) {
            this.ew = a;
            this.g("AxisAnnotationStrokeThickness");
        }
    }
    ValueOverlayDescription.$t = /*@__PURE__*/ markType(ValueOverlayDescription, 'ValueOverlayDescription', SeriesDescription.$);
    return ValueOverlayDescription;
})();
