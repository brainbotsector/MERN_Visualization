/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CalloutLayerDescription = /*@__PURE__*/ (() => {
    class CalloutLayerDescription extends AnnotationLayerDescription {
        get_type() {
            return "CalloutLayer";
        }
        constructor() {
            super();
            this.g8 = null;
            this.hc = null;
            this.hd = null;
            this.g7 = null;
            this.fy = false;
            this.g5 = null;
            this.g9 = null;
            this.ha = null;
            this.g4 = null;
            this.fv = null;
            this.fx = false;
            this.f1 = false;
            this.f2 = false;
            this.f3 = false;
            this.g6 = null;
            this.gt = null;
            this.gb = 0;
            this.f0 = false;
            this.fz = false;
            this.gp = 0;
            this.g3 = null;
            this.gu = null;
            this.gq = 0;
            this.gz = null;
            this.gy = null;
            this.gd = 0;
            this.gf = 0;
            this.ge = 0;
            this.gc = 0;
            this.gv = null;
            this.gg = 0;
            this.gh = 0;
            this.hb = null;
            this.g2 = null;
            this.g0 = null;
            this.gw = null;
            this.gx = null;
            this.g1 = null;
        }
        get labelMemberPath() {
            return this.g8;
        }
        set labelMemberPath(a) {
            this.g8 = a;
            this.g("LabelMemberPath");
        }
        get xMemberPath() {
            return this.hc;
        }
        set xMemberPath(a) {
            this.hc = a;
            this.g("XMemberPath");
        }
        get yMemberPath() {
            return this.hd;
        }
        set yMemberPath(a) {
            this.hd = a;
            this.g("YMemberPath");
        }
        get keyMemberPath() {
            return this.g7;
        }
        set keyMemberPath(a) {
            this.g7 = a;
            this.g("KeyMemberPath");
        }
        get isCalloutOffsettingEnabled() {
            return this.fy;
        }
        set isCalloutOffsettingEnabled(a) {
            this.fy = a;
            this.g("IsCalloutOffsettingEnabled");
        }
        get contentMemberPath() {
            return this.g5;
        }
        set contentMemberPath(a) {
            this.g5 = a;
            this.g("ContentMemberPath");
        }
        get targetSeriesName() {
            return this.g9;
        }
        set targetSeriesName(a) {
            this.g9 = a;
            this.g("TargetSeriesName");
        }
        get targetSeriesRef() {
            return this.ha;
        }
        set targetSeriesRef(a) {
            this.ha = a;
            this.g("TargetSeriesRef");
        }
        get collisionChannel() {
            return this.g4;
        }
        set collisionChannel(a) {
            this.g4 = a;
            this.g("CollisionChannel");
        }
        get allowedPositions() {
            return this.fv;
        }
        set allowedPositions(a) {
            this.fv = a;
            this.g("AllowedPositions");
        }
        get isAutoCalloutBehaviorEnabled() {
            return this.fx;
        }
        set isAutoCalloutBehaviorEnabled(a) {
            this.fx = a;
            this.g("IsAutoCalloutBehaviorEnabled");
        }
        get useInterpolatedValueForAutoCalloutLabels() {
            return this.f1;
        }
        set useInterpolatedValueForAutoCalloutLabels(a) {
            this.f1 = a;
            this.g("UseInterpolatedValueForAutoCalloutLabels");
        }
        get useSeriesColorForOutline() {
            return this.f2;
        }
        set useSeriesColorForOutline(a) {
            this.f2 = a;
            this.g("UseSeriesColorForOutline");
        }
        get useValueForAutoCalloutLabels() {
            return this.f3;
        }
        set useValueForAutoCalloutLabels(a) {
            this.f3 = a;
            this.g("UseValueForAutoCalloutLabels");
        }
        get highlightedValueLabelMode() {
            return this.g6;
        }
        set highlightedValueLabelMode(a) {
            this.g6 = a;
            this.g("HighlightedValueLabelMode");
        }
        get autoCalloutVisibilityMode() {
            return this.gt;
        }
        set autoCalloutVisibilityMode(a) {
            this.gt = a;
            this.g("AutoCalloutVisibilityMode");
        }
        get calloutCornerRadius() {
            return this.gb;
        }
        set calloutCornerRadius(a) {
            this.gb = a;
            this.g("CalloutCornerRadius");
        }
        get isCustomCalloutStyleEnabled() {
            return this.f0;
        }
        set isCustomCalloutStyleEnabled(a) {
            this.f0 = a;
            this.g("IsCustomCalloutStyleEnabled");
        }
        get isCustomCalloutRenderStyleEnabled() {
            return this.fz;
        }
        set isCustomCalloutRenderStyleEnabled(a) {
            this.fz = a;
            this.g("IsCustomCalloutRenderStyleEnabled");
        }
        get autoCalloutLabelPrecision() {
            return this.gp;
        }
        set autoCalloutLabelPrecision(a) {
            this.gp = a;
            this.g("AutoCalloutLabelPrecision");
        }
        get calloutTextColor() {
            return this.g3;
        }
        set calloutTextColor(a) {
            this.g3 = a;
            this.g("CalloutTextColor");
        }
        get calloutBackground() {
            return this.gu;
        }
        set calloutBackground(a) {
            this.gu = a;
            this.g("CalloutBackground");
        }
        get calloutInterpolatedValuePrecision() {
            return this.gq;
        }
        set calloutInterpolatedValuePrecision(a) {
            this.gq = a;
            this.g("CalloutInterpolatedValuePrecision");
        }
        get calloutOutline() {
            return this.gz;
        }
        set calloutOutline(a) {
            this.gz = a;
            this.g("CalloutOutline");
        }
        get calloutLeaderBrush() {
            return this.gy;
        }
        set calloutLeaderBrush(a) {
            this.gy = a;
            this.g("CalloutLeaderBrush");
        }
        get calloutPaddingLeft() {
            return this.gd;
        }
        set calloutPaddingLeft(a) {
            this.gd = a;
            this.g("CalloutPaddingLeft");
        }
        get calloutPaddingTop() {
            return this.gf;
        }
        set calloutPaddingTop(a) {
            this.gf = a;
            this.g("CalloutPaddingTop");
        }
        get calloutPaddingRight() {
            return this.ge;
        }
        set calloutPaddingRight(a) {
            this.ge = a;
            this.g("CalloutPaddingRight");
        }
        get calloutPaddingBottom() {
            return this.gc;
        }
        set calloutPaddingBottom(a) {
            this.gc = a;
            this.g("CalloutPaddingBottom");
        }
        get calloutCollisionMode() {
            return this.gv;
        }
        set calloutCollisionMode(a) {
            this.gv = a;
            this.g("CalloutCollisionMode");
        }
        get calloutPositionPadding() {
            return this.gg;
        }
        set calloutPositionPadding(a) {
            this.gg = a;
            this.g("CalloutPositionPadding");
        }
        get calloutStrokeThickness() {
            return this.gh;
        }
        set calloutStrokeThickness(a) {
            this.gh = a;
            this.g("CalloutStrokeThickness");
        }
        get textStyle() {
            return this.hb;
        }
        set textStyle(a) {
            this.hb = a;
            this.g("TextStyle");
        }
        get calloutStyleUpdatingRef() {
            return this.g2;
        }
        set calloutStyleUpdatingRef(a) {
            this.g2 = a;
            this.g("CalloutStyleUpdatingRef");
        }
        get calloutRenderStyleUpdatingRef() {
            return this.g0;
        }
        set calloutRenderStyleUpdatingRef(a) {
            this.g0 = a;
            this.g("CalloutRenderStyleUpdatingRef");
        }
        get calloutContentUpdatingRef() {
            return this.gw;
        }
        set calloutContentUpdatingRef(a) {
            this.gw = a;
            this.g("CalloutContentUpdatingRef");
        }
        get calloutLabelUpdatingRef() {
            return this.gx;
        }
        set calloutLabelUpdatingRef(a) {
            this.gx = a;
            this.g("CalloutLabelUpdatingRef");
        }
        get calloutSeriesSelectingRef() {
            return this.g1;
        }
        set calloutSeriesSelectingRef(a) {
            this.g1 = a;
            this.g("CalloutSeriesSelectingRef");
        }
    }
    CalloutLayerDescription.$t = /*@__PURE__*/ markType(CalloutLayerDescription, 'CalloutLayerDescription', AnnotationLayerDescription.$);
    return CalloutLayerDescription;
})();
