/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ValueLayerDescription = /*@__PURE__*/ (() => {
    class ValueLayerDescription extends AnnotationLayerDescription {
        get_type() {
            return "ValueLayer";
        }
        constructor() {
            super();
            this.gy = null;
            this.gt = null;
            this.gz = null;
            this.gw = null;
            this.gx = null;
            this.gu = null;
            this.gv = null;
            this.fx = false;
            this.fv = false;
            this.g1 = null;
            this.g5 = null;
            this.g3 = null;
            this.g0 = null;
            this.f1 = 0;
            this.gp = 0;
            this.g2 = null;
            this.f3 = 0;
            this.f5 = 0;
            this.f4 = 0;
            this.f2 = 0;
            this.f9 = 0;
            this.gb = 0;
            this.ga = 0;
            this.f8 = 0;
            this.f6 = 0;
            this.g7 = null;
            this.g4 = null;
            this.f7 = 0;
            this.gq = 0;
            this.g6 = null;
            this.gc = 0;
            this.fw = false;
        }
        get valueMode() {
            return this.gy;
        }
        set valueMode(a) {
            this.gy = a;
            this.g("ValueMode");
        }
        get horizontalLineStroke() {
            return this.gt;
        }
        set horizontalLineStroke(a) {
            this.gt = a;
            this.g("HorizontalLineStroke");
        }
        get verticalLineStroke() {
            return this.gz;
        }
        set verticalLineStroke(a) {
            this.gz = a;
            this.g("VerticalLineStroke");
        }
        get targetSeriesName() {
            return this.gw;
        }
        set targetSeriesName(a) {
            this.gw = a;
            this.g("TargetSeriesName");
        }
        get targetSeriesRef() {
            return this.gx;
        }
        set targetSeriesRef(a) {
            this.gx = a;
            this.g("TargetSeriesRef");
        }
        get targetAxisName() {
            return this.gu;
        }
        set targetAxisName(a) {
            this.gu = a;
            this.g("TargetAxisName");
        }
        get targetAxisRef() {
            return this.gv;
        }
        set targetAxisRef(a) {
            this.gv = a;
            this.g("TargetAxisRef");
        }
        get useInterpolation() {
            return this.fx;
        }
        set useInterpolation(a) {
            this.fx = a;
            this.g("UseInterpolation");
        }
        get isAxisAnnotationEnabled() {
            return this.fv;
        }
        set isAxisAnnotationEnabled(a) {
            this.fv = a;
            this.g("IsAxisAnnotationEnabled");
        }
        get xAxisAnnotationFormatLabelRef() {
            return this.g1;
        }
        set xAxisAnnotationFormatLabelRef(a) {
            this.g1 = a;
            this.g("XAxisAnnotationFormatLabelRef");
        }
        get yAxisAnnotationFormatLabelRef() {
            return this.g5;
        }
        set yAxisAnnotationFormatLabelRef(a) {
            this.g5 = a;
            this.g("YAxisAnnotationFormatLabelRef");
        }
        get xAxisAnnotationTextColor() {
            return this.g3;
        }
        set xAxisAnnotationTextColor(a) {
            this.g3 = a;
            this.g("XAxisAnnotationTextColor");
        }
        get xAxisAnnotationBackground() {
            return this.g0;
        }
        set xAxisAnnotationBackground(a) {
            this.g0 = a;
            this.g("XAxisAnnotationBackground");
        }
        get xAxisAnnotationBackgroundCornerRadius() {
            return this.f1;
        }
        set xAxisAnnotationBackgroundCornerRadius(a) {
            this.f1 = a;
            this.g("XAxisAnnotationBackgroundCornerRadius");
        }
        get xAxisAnnotationInterpolatedValuePrecision() {
            return this.gp;
        }
        set xAxisAnnotationInterpolatedValuePrecision(a) {
            this.gp = a;
            this.g("XAxisAnnotationInterpolatedValuePrecision");
        }
        get xAxisAnnotationOutline() {
            return this.g2;
        }
        set xAxisAnnotationOutline(a) {
            this.g2 = a;
            this.g("XAxisAnnotationOutline");
        }
        get xAxisAnnotationPaddingLeft() {
            return this.f3;
        }
        set xAxisAnnotationPaddingLeft(a) {
            this.f3 = a;
            this.g("XAxisAnnotationPaddingLeft");
        }
        get xAxisAnnotationPaddingTop() {
            return this.f5;
        }
        set xAxisAnnotationPaddingTop(a) {
            this.f5 = a;
            this.g("XAxisAnnotationPaddingTop");
        }
        get xAxisAnnotationPaddingRight() {
            return this.f4;
        }
        set xAxisAnnotationPaddingRight(a) {
            this.f4 = a;
            this.g("XAxisAnnotationPaddingRight");
        }
        get xAxisAnnotationPaddingBottom() {
            return this.f2;
        }
        set xAxisAnnotationPaddingBottom(a) {
            this.f2 = a;
            this.g("XAxisAnnotationPaddingBottom");
        }
        get yAxisAnnotationPaddingLeft() {
            return this.f9;
        }
        set yAxisAnnotationPaddingLeft(a) {
            this.f9 = a;
            this.g("YAxisAnnotationPaddingLeft");
        }
        get yAxisAnnotationPaddingTop() {
            return this.gb;
        }
        set yAxisAnnotationPaddingTop(a) {
            this.gb = a;
            this.g("YAxisAnnotationPaddingTop");
        }
        get yAxisAnnotationPaddingRight() {
            return this.ga;
        }
        set yAxisAnnotationPaddingRight(a) {
            this.ga = a;
            this.g("YAxisAnnotationPaddingRight");
        }
        get yAxisAnnotationPaddingBottom() {
            return this.f8;
        }
        set yAxisAnnotationPaddingBottom(a) {
            this.f8 = a;
            this.g("YAxisAnnotationPaddingBottom");
        }
        get xAxisAnnotationStrokeThickness() {
            return this.f6;
        }
        set xAxisAnnotationStrokeThickness(a) {
            this.f6 = a;
            this.g("XAxisAnnotationStrokeThickness");
        }
        get yAxisAnnotationTextColor() {
            return this.g7;
        }
        set yAxisAnnotationTextColor(a) {
            this.g7 = a;
            this.g("YAxisAnnotationTextColor");
        }
        get yAxisAnnotationBackground() {
            return this.g4;
        }
        set yAxisAnnotationBackground(a) {
            this.g4 = a;
            this.g("YAxisAnnotationBackground");
        }
        get yAxisAnnotationBackgroundCornerRadius() {
            return this.f7;
        }
        set yAxisAnnotationBackgroundCornerRadius(a) {
            this.f7 = a;
            this.g("YAxisAnnotationBackgroundCornerRadius");
        }
        get yAxisAnnotationInterpolatedValuePrecision() {
            return this.gq;
        }
        set yAxisAnnotationInterpolatedValuePrecision(a) {
            this.gq = a;
            this.g("YAxisAnnotationInterpolatedValuePrecision");
        }
        get yAxisAnnotationOutline() {
            return this.g6;
        }
        set yAxisAnnotationOutline(a) {
            this.g6 = a;
            this.g("YAxisAnnotationOutline");
        }
        get yAxisAnnotationStrokeThickness() {
            return this.gc;
        }
        set yAxisAnnotationStrokeThickness(a) {
            this.gc = a;
            this.g("YAxisAnnotationStrokeThickness");
        }
        get skipUnknownValues() {
            return this.fw;
        }
        set skipUnknownValues(a) {
            this.fw = a;
            this.g("SkipUnknownValues");
        }
    }
    ValueLayerDescription.$t = /*@__PURE__*/ markType(ValueLayerDescription, 'ValueLayerDescription', AnnotationLayerDescription.$);
    return ValueLayerDescription;
})();
