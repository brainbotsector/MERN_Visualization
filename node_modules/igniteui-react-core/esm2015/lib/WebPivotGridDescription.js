/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { WebGridBaseDirectiveDescription } from "./WebGridBaseDirectiveDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebPivotGridDescription = /*@__PURE__*/ (() => {
    class WebPivotGridDescription extends WebGridBaseDirectiveDescription {
        get_type() {
            return "WebPivotGrid";
        }
        constructor() {
            super();
            this.g3 = null;
            this.gp = null;
            this.gs = false;
            this.gt = false;
            this.gr = false;
            this.gx = null;
            this.g1 = null;
            this.gz = null;
            this.g2 = null;
            this.gy = null;
            this.g4 = null;
            this.g0 = null;
            this.g5 = null;
        }
        get valueChipTemplateRef() {
            return this.g3;
        }
        set valueChipTemplateRef(a) {
            this.g3 = a;
            this.g("ValueChipTemplateRef");
        }
        get pivotConfiguration() {
            return this.gp;
        }
        set pivotConfiguration(a) {
            this.gp = a;
            this.g("PivotConfiguration");
        }
        get showPivotConfigurationUI() {
            return this.gs;
        }
        set showPivotConfigurationUI(a) {
            this.gs = a;
            this.g("ShowPivotConfigurationUI");
        }
        get superCompactMode() {
            return this.gt;
        }
        set superCompactMode(a) {
            this.gt = a;
            this.g("SuperCompactMode");
        }
        get defaultExpandState() {
            return this.gr;
        }
        set defaultExpandState(a) {
            this.gr = a;
            this.g("DefaultExpandState");
        }
        get dataRef() {
            return this.gx;
        }
        set dataRef(a) {
            this.gx = a;
            this.g("DataRef");
        }
        get emptyPivotGridTemplateRef() {
            return this.g1;
        }
        set emptyPivotGridTemplateRef(a) {
            this.g1 = a;
            this.g("EmptyPivotGridTemplateRef");
        }
        get dimensionsChangeRef() {
            return this.gz;
        }
        set dimensionsChangeRef(a) {
            this.gz = a;
            this.g("DimensionsChangeRef");
        }
        get pivotConfigurationChangeRef() {
            return this.g2;
        }
        set pivotConfigurationChangeRef(a) {
            this.g2 = a;
            this.g("PivotConfigurationChangeRef");
        }
        get dimensionInitRef() {
            return this.gy;
        }
        set dimensionInitRef(a) {
            this.gy = a;
            this.g("DimensionInitRef");
        }
        get valueInitRef() {
            return this.g4;
        }
        set valueInitRef(a) {
            this.g4 = a;
            this.g("ValueInitRef");
        }
        get dimensionsSortingExpressionsChangeRef() {
            return this.g0;
        }
        set dimensionsSortingExpressionsChangeRef(a) {
            this.g0 = a;
            this.g("DimensionsSortingExpressionsChangeRef");
        }
        get valuesChangeRef() {
            return this.g5;
        }
        set valuesChangeRef(a) {
            this.g5 = a;
            this.g("ValuesChangeRef");
        }
    }
    WebPivotGridDescription.$t = /*@__PURE__*/ markType(WebPivotGridDescription, 'WebPivotGridDescription', WebGridBaseDirectiveDescription.$);
    return WebPivotGridDescription;
})();
